{"version":3,"sources":["serviceWorker.js","common/api.js","features/content/contentSlice.js","features/user/userSlice.js","app/reducers.js","app/store.js","features/user/Login.js","features/pages/Landing.js","features/dashboard/TopNavbar.js","features/dashboard/SideNavbar.js","features/content/Tags.js","features/content/VisibilityDot.js","features/content/EditContent.js","features/content/DeleteContent.js","features/content/ContentItem.js","features/dashboard/Feed.js","features/content/AddContent.js","features/dashboard/Dashboard.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","axios","defaults","baseURL","authenticateUser","user","a","post","getUser","token","get","getAllContent","createContent","content","editContent","put","id","deleteContent","delete","getContent","createAsyncThunk","api","createSlice","name","initialState","reducers","extraReducers","fulfilled","_","action","payload","data","login","isAuthenticated","localStorage","getItem","authType","setUser","state","logout","removeItem","setItem","actions","combineReducers","contentReducer","userReducer","middleware","thunk","next","headers","common","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Login","useSelector","useState","email","password","form","updateForm","dispatch","useDispatch","history","useHistory","useEffect","push","onChangeHandler","e","target","value","className","Form","onSubmit","preventDefault","Group","Control","type","placeholder","onChange","Button","variant","Landing","Container","fluid","Row","Col","TopNavbar","Navbar","Nav","Link","as","to","Item","onClick","SideNavbar","setView","active","setActive","activeKey","onSelect","eventKey","Tags","tags","Fragment","map","tag","key","console","log","clickHandler","VisibilityDot","onMouseOver","EditContent","show","closeHandler","_content","updateContent","Modal","size","onHide","Header","Title","Body","controlId","Label","title","description","modules","toolbar","theme","Footer","then","DeleteContent","isUrl","require","isImage","ContentItem","showEdit","setShowEdit","showDelete","setShowDelete","handleTitleClick","displayDate","showTags","length","image","split","date","Intl","DateTimeFormat","day","month","year","format","Date","parse","Card","Img","src","alt","ImgOverlay","Dropdown","alignRight","Toggle","FontAwesomeIcon","icon","faEllipsisV","Menu","Feed","fetch","item","AddContent","Dashboard","view","setViewHandler","role","App","res","exact","path","component","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b342ddf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\n// API not working locally? This will be why\n// TODO: set using env vars instead (will still need to set localhost port)\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\n\nconst AUTH_USER = '/users/authenticate';\nconst CURRENT_USER = '/users/current';\nconst CONTENT = '/content/';\nconst CREATE_CONTENT = '/content/create';\n\n// Takes email and password as an object and returns the user's details and token\nconst authenticateUser = async user => await axios.post(AUTH_USER, user);\n\n// Takes a token string and returns the user's details\nconst getUser = async token => await axios.get(CURRENT_USER, token);\n\n// Uses an existing token if user is logged in and returns all their content (as a list, not an object)\nconst getAllContent = async () => await axios.get(CONTENT);\n// const getAllContent = async () => await axios.get('https://jsonplaceholder.typicode.com/posts');\n\n// Takes a content object and authorises with existing token\nconst createContent = async content => await axios.post(CREATE_CONTENT, content);\n\n// Takes a content object (that must include the id field) and authorises with existing token\nconst editContent = async content => await axios.put(`${CONTENT}${content.id}`, content);\n\n// Takes just the content id (as a string) and authorises with existing token\nconst deleteContent = async id => await axios.delete(`${CONTENT}${id}`);\n\n// Make functions available to other components\nexport default {\n  authenticateUser,\n  getUser,\n  getAllContent,\n  createContent,\n  editContent,\n  deleteContent\n};\n","/*\n * The content 'slice' of the state. Centralises all content-related\n * functionality including API calls.\n */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport api from '../../common/api';\n\n// Async Thunks required whenever there's an API call\nexport const getContent = createAsyncThunk(\n  'content/getContent',\n  api.getAllContent\n);\n\nexport const createContent = createAsyncThunk(\n  'content/createContent',\n  api.createContent\n);\n\nexport const editContent = createAsyncThunk(\n  'content/editContent',\n  api.editContent\n);\n\nexport const deleteContent = createAsyncThunk(\n  'content/deleteContent',\n  api.deleteContent\n);\n\nconst content = createSlice({\n  name: 'content',\n  initialState: [], // A list! Not an object, be careful. Caused me a few issues.\n  reducers: {},\n  extraReducers: {\n    'user/logout': () => { return [] }, // Trigger content to reset itself when user logs out\n    [getContent.fulfilled]: (_, action) => { return [...action.payload.data] }\n  }\n});\n\n// For importing to src/app/reducers.js\nexport default content.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport api from '../../common/api';\n\nexport const login = createAsyncThunk(\n  'user/authenticate',\n  api.authenticateUser\n);\n\nconst user = createSlice({\n  name: 'user',\n  initialState: {\n    isAuthenticated: (localStorage.getItem('token') !== null),\n    authType: 'Bearer'\n  },\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        token: localStorage.getItem('token'),\n        isAuthenticated: true\n      }\n    },\n    logout: () => {\n\n      localStorage.removeItem('token');\n\n      return { isAuthenticated: false }\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n\n      // Persist JWT to local storage\n      localStorage.setItem('token', action.payload.data.token);\n\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    }\n  }\n});\n\n// Explicitly export the non-async reducers\nexport const { logout, setUser } = user.actions;\n\nexport default user.reducer;\n","/*\n * Redux takes any reducers we add here and makes them\n * available app-wide.\n */\n\nimport { combineReducers } from 'redux';\nimport contentReducer from '../features/content/contentSlice';\nimport userReducer from '../features/user/userSlice';\n\nexport default combineReducers({\n  content: contentReducer,\n  user: userReducer\n});\n","/*\n * store.js\n * Boilerplate code. Redux store that controls application state.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\n\n//import auth from '../common/api';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Middleware to force authorisation header on every action\nconst auth = () => next => action => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n  return next(action);\n};\n\n// Any middleware included goes here\nconst middleware = [thunk, auth];\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\n// Add enhancers (if any)\nconst enhancers = [middlewareEnhancer];\n\n// Give access to Redux Devtools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer, initialState, composedEnhancers);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { login } from './userSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Login() {\n\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  const [form, updateForm] = useState({ email: '', password: '' });\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmitHandler = e => {\n\n    e.preventDefault();\n\n    dispatch(login(form));\n  }\n\n  useEffect(() => { if (isAuthenticated) history.push('/dashboard') });\n\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n\n  return(\n    <div className=\"form-box\">\n      <Form className=\"login-form\" onSubmit={onSubmitHandler}>\n        <h2>Login</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"email\" \n            id=\"email\"\n            placeholder=\"Email Address\" \n            value={form.email}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"  \n            id=\"password\" \n            placeholder=\"Password\" \n            value={form.password}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">Login</Button>\n      </Form>\n    </div>\n  );\n}\n","import React from 'react';\nimport Login from '../user/Login';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Landing = () => {\n  return(\n    <Container fluid>\n      <Row className=\"no-gutter\">\n        <Col className=\"bg-info d-flex justify-content-center\">\n          <div className=\"splash-container\">\n            <h1 className=\"display-3 text-white\">cPortfolio</h1>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"splash-container\">\n            <Login/>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Landing;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../user/userSlice';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function TopNavbar() {\n\n  const dispatch = useDispatch();\n\n  return(\n    <Navbar variant=\"dark\" className=\"fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <Nav.Link as={Link} to=\"/dashboard\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Dashboard</Nav.Link>\n      <Nav className=\"px-3\">\n        <Nav.Item className=\"text-nowrap\">\n          <Nav.Link as={Link} to=\"/\" onClick={() => dispatch(logout())}>Sign out</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React, { useState } from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function SideNavbar({ setView }) {\n\n  const [active, setActive] = useState('dashboard');\n\n  const onSelectHandler = eventKey => {\n    setActive(eventKey);\n    setView(eventKey);\n  }\n\n  return(\n    <Nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div className=\"sidebar-sticky\">\n        <Nav className=\"flex-column\" activeKey={active} onSelect={onSelectHandler}>\n          <Nav.Item>\n            <Nav.Link eventKey=\"dashboard\">\n              Dashboard\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"add-content\">\n              Add Content\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </Nav>\n  );\n}\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default function Tags({ tags }) {\n\n  const clickHandler = tag => console.log(`'${tag}' tag clicked.`);\n\n  return(\n    <React.Fragment>\n      tags&nbsp;&nbsp;&nbsp;›{tags.map(\n        tag => <React.Fragment>\n          &nbsp;&nbsp;&nbsp;\n          <Button\n            variant=\"link\"\n            className=\"contentitem-tag\"\n            key={tag}\n            onClick={() => clickHandler(tag)}\n          >{tag}</Button>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function VisibilityDot({ id }) {\n\n  const mouseOverHandler = () => console.log(`'${id}' visibility mouse over`);\n\n  return(\n    <React.Fragment>\n      <span className=\"contentitem-visibility-dot\" onMouseOver={mouseOverHandler}></span>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { editContent, getContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditContent({ content, show, closeHandler }) {\n\n  const [_content, updateContent] = useState(content);\n  const dispatch = useDispatch();\n\n  const editClickHandler = () => {\n\n    dispatch(editContent(_content))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  //since the quill element doesn't pass it's ID, have a seperate function for each element\n  const onTitleChangeHandler = e => updateContent({ ..._content, 'title': e.target.value });\n  const onDescriptionChangeHandler = e => updateContent({ ..._content, 'description': e.target.value });\n  const onContentChangeHandler = e => updateContent({ ..._content, 'content': e });\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={_content.title} onChange={onTitleChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" value={_content.description} onChange={onDescriptionChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"content\">\n            <Form.Label>Content</Form.Label>\n            <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={_content.content} onChange={onContentChangeHandler}/>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>Cancel</Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContent, deleteContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteContent({ content, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n\n    // Wait until content is updated before dismissing the component\n    dispatch(deleteContent(content.id))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete <b>{content.title}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport Tags from './Tags';\nimport VisibilityDot from './VisibilityDot';\nimport EditContent from './EditContent';\nimport DeleteContent from './DeleteContent';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ContentItem({ content }) {\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n  const handleTitleClick = () => console.log(`${content.id} clicked.`);\n\n  const { id, title, description, tags, displayDate } = content;\n  const showTags = tags.length > 0;\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  const date = Intl.DateTimeFormat('en-AU', {\n    day: '2-digit',\n    month: 'long',\n    year: 'numeric'\n  }).format(Date.parse(displayDate));\n\n  return(\n    <React.Fragment>\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\n      <Row>\n        <Card>\n        {image ?\n          <React.Fragment>\n            <Card.Img src={content.content} alt={title}/>\n            <Card.ImgOverlay className=\"contentitem-header\" onClick={handleTitleClick}>\n              <div className=\"contentitem-title-visibility\">\n                <VisibilityDot id={id}/>\n                <div className=\"contentitem-title\">{title}</div>\n              </div>\n              <div className=\"contentitem-date\">{date}</div>\n            </Card.ImgOverlay>\n          </React.Fragment>\n        :\n          <Card.Header className=\"contentitem-header\" onClick={handleTitleClick}>\n            <div className=\"contentitem-title-visibility\">\n              <VisibilityDot id={id}/>\n              <div className=\"contentitem-title\">{title}</div>\n            </div>\n            <div className=\"contentitem-date\">{date}</div>\n          </Card.Header>\n        }\n          <Card.Body>\n            <div className=\"contentitem-container\">\n              <div className=\"contentitem-tags\">\n                {showTags && <Tags tags={tags}/>}\n              </div>\n              <Dropdown alignRight>\n                <Dropdown.Toggle as={FontAwesomeIcon} icon={faEllipsisV} size=\"lg\"></Dropdown.Toggle>\n                <Dropdown.Menu alignRight>\n                  <Dropdown.Item onClick={() => setShowEdit(true)}>Edit</Dropdown.Item>\n                  <Dropdown.Item onClick={() => setShowDelete(true)}>Delete</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            <h3>Description</h3>\n            <p className=\"card-text\">{description}</p>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContent } from '../content/contentSlice';\n\nimport Row from 'react-bootstrap/Row';\n\nimport ContentItem from '../content/ContentItem';\n\n// Contains the user's content in a feed/wall format\nexport default function Feed() {\n\n  const dispatch = useDispatch();\n  const content = useSelector(state => state.content);\n\n  // Reload content whenever something significant happens\n  useEffect(() => {\n    async function fetch() { dispatch(getContent()) }\n    fetch();\n  }, [dispatch]);\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        {/* a h1 with a class of h2 👀 */}\n        <h1 className=\"h2 ml-5 mt-5\">Your Content</h1>\n      </Row>\n      {content.map(item => <ContentItem content={item} key={item.id}/>)}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { createContent, getContent } from '../content/contentSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function AddContent({ setView }) {\n\n  /*\n   * useState is a React hook and unrelated to Redux. Creates a little\n   * private state inside the component, in this case is used to just handle\n   * what's in the input fields before we send it off to Redux.\n   */\n  const [content, updateContent] = useState({'title':'','description':'','content':''});\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = e => {\n\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createContent(content))\n      .then(() => dispatch(getContent()))\n      .then(() => setView('dashboard'));\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  //since the quill element doesn't pass it's ID, have a seperate function for each element\n  const onTitleChangeHandler = e => updateContent({ ...content, 'title': e.target.value });\n  const onDescriptionChangeHandler = e => updateContent({ ...content, 'description': e.target.value });\n  const onContentChangeHandler = e => updateContent({ ...content, 'content': e });\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <React.Fragment>\n      <h1 className=\"h2 ml-5 mt-5\">Add Content</h1>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" value={content.title} onChange={onTitleChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control type=\"text\" value={content.description} onChange={onDescriptionChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"content\">\n          <Form.Label>Content</Form.Label>\n          <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={content.content} onChange={onContentChangeHandler}/>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"info\">Create</Button>\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport TopNavbar from './TopNavbar';\nimport SideNavBar from './SideNavbar';\nimport Feed from './Feed';\nimport AddContent from '../content/AddContent';\n\nexport default function Dashboard() {\n\n  // React hook for redirection\n  const history = useHistory();\n  const [view, setView] = useState('dashboard');\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n\n  useEffect(() => { if (!isAuthenticated) history.push('/') });\n\n  /*\n   * This is a bad way of doing a dashboard. Simply swaps out whatever component\n   * is showing in <main> based on whatever string is set, and changing that\n   * string by clicking the links in the navbar. Quick and easy but not nice to\n   * maintain.\n   */\n  const setViewHandler = eventKey => setView(eventKey);\n\n  return(\n    <React.Fragment>\n      <TopNavbar/>\n      <Container fluid>\n        <Row>\n          <SideNavBar setView={setViewHandler}/>\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n            {(view === 'dashboard') && <Feed/>}\n            {(view === 'add-content') && <AddContent setView={setViewHandler}/>}\n          </main>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n","// Imports for framework and functionality\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n// Imports for custom app functionality\nimport api from '../common/api';\nimport { setUser } from '../features/user/userSlice';\n\n// Imports for React components\nimport Landing from '../features/pages/Landing';\nimport Dashboard from '../features/dashboard/Dashboard';\n\n// For when css is being a b and you need to override some rules\nimport '../App.css';\n\n// React component is its main function\n// Pls don't use classes! Unless there is a *really* good reason\nexport default function App() {\n\n  // Allow us to dispatch actions to Redux\n  const dispatch = useDispatch();\n\n  // React hook, nothing to do with Redux.\n  // Gets called whenever there is a change related to the component that it's inside of\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      api.getUser()\n        .then(res => dispatch(setUser(res)));\n    }\n  });\n\n  return(\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Landing}/>\n          <Route exact path=\"/dashboard\" component={Dashboard}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './app/store';\nimport App from './app/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}