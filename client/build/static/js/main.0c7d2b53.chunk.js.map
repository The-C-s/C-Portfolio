{"version":3,"sources":["serviceWorker.js","app/appSlice.js","common/api.js","features/content/contentSlice.js","features/user/userSlice.js","features/profile/profileSlice.js","features/search/searchSlice.js","features/share/shareSlice.js","app/reducers.js","app/store.js","features/pages/Landing.js","features/user/Login.js","features/user/Register.js","features/layout/NavButton.js","features/layout/AvatarButton.js","features/user/EditUser.js","features/search/Search.js","features/layout/TopNav.js","features/layout/NavLink.js","features/layout/SideNavbar.js","features/layout/RightNavbar.js","features/pages/Homepage.js","features/dashboard/Dashboard.js","features/content/Tag.js","features/content/EditContent.js","features/content/DeleteContent.js","features/content/ContentItemMenu.js","common/helpers.js","features/content/ContentItem.js","features/dashboard/Feed.js","features/profile/Projects.js","features/profile/EditProfile.js","features/profile/DeleteProfile.js","features/profile/ProfileItem.js","features/profile/Profile.js","features/content/AddContent.js","features/share/ProfileBarLink.js","features/share/LinkedUL.js","features/share/ProfileBar.js","features/share/ShareContentItem.js","features/share/Section.js","features/share/Share.js","features/share/ShareList.js","common/routes.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","app","createSlice","name","initialState","errors","loading","reduers","extraReducers","state","startLoading","stopLoading","action","setError","error","payload","removeError","console","message","axios","defaults","baseURL","token","localStorage","getItem","_token","setItem","removeItem","authenticateCredentials","user","a","post","registerUser","authenticateToken","get","getAllContent","createContent","content","editContent","id","put","deleteContent","delete","createProfile","profile","editProfile","deleteProfile","getProfile","addLogo","logo","addResume","resume","updateUser","userParams","getSharepage","getContent","createAsyncThunk","apiCreateContent","apiEditContent","apiDeleteContent","reducers","fulfilled","_","data","login","authenticate","editUser","register","isAuthenticated","setUser","logout","rejected","actions","apiCreateProfile","apiGetProfile","apiEditProfile","apiDeleteProfile","apiAddLogo","apiAddResume","isLoaded","education","experience","projects","search","active","activeSearch","query","searchContent","stopSearch","toLowerCase","results","Set","forEach","_content","title","includes","add","tags","tag","apiGetSharepage","share","combineReducers","appReducer","profileReducer","contentReducer","userReducer","searchReducer","shareReducer","middleware","thunk","next","headers","common","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Landing","routes","publicRoutes","filter","route","landing","Container","fluid","Row","className","Col","src","alt","map","index","key","path","exact","children","Login","onLogin","dispatch","useDispatch","history","useHistory","loggingIn","useSelector","useState","email","password","form","updateForm","useEffect","push","onChangeHandler","e","target","value","Form","onSubmit","preventDefault","then","unwrapResult","catch","log","Group","Control","type","placeholder","onChange","Button","variant","size","color","as","Link","to","Register","registering","confirmPass","onSubmitHandler","username","onClickHandler","NavButton","icon","AvatarButton","image","EditUser","show","closeHandler","userFromState","_user","updateDetails","Fragment","Modal","onHide","Header","Title","Body","Image","avatar","roundedCircle","controlId","Label","rows","firstName","lastName","Footer","onClick","Search","showSearch","setShowSearch","setQuery","useRouteMatch","seamless","faSearch","document","getElementsByClassName","focus","_query","onBlur","TopNav","showUserEdit","setShowUserEdit","Nav","Item","faBell","faCog","NavLink","label","activeOnlyWhenExact","iconSize","dropdown","expanded","sub","faChevronDown","SideNavbar","expandContent","toggleContent","expandShare","toggleShare","faBorderAll","faStream","Collapse","in","faFolderPlus","faAddressCard","faIdBadge","faSignOutAlt","RightNavbar","hasBackground","background","emails","Homepage","fetch","role","faGripHorizontal","faUserCircle","faCopy","faFileUpload","Dashboard","privateRoutes","dashboard","Tag","colour","shape","EditContent","updateContent","_richText","updateRichText","_file","updateFile","showFile","setShowFile","description","files","modules","toolbar","theme","_data","FormData","field","set","DeleteContent","ContentItemMenu","showEdit","setShowEdit","showDelete","setShowDelete","Dropdown","alignRight","Toggle","FontAwesomeIcon","faEllipsisV","Menu","require","parseDate","date","Intl","DateTimeFormat","day","month","year","format","Date","parse","isUrl","isImage","ContentItem","displayDate","length","split","xs","md","Feed","gettingContent","filteredContent","count","item","Project","updateProfile","updateProjects","closeProjectField","_newProject","updateNewProject","selectProject","i","custom","proj","tmp","tmpIds","EditProfile","_profile","_projects","_education","updateEducation","_experience","updateExperience","_logo","updateLogo","_resume","updateResume","viewAddProject","setView","onChangeEducationHandler","onChangeExperienceHandler","InputGroup","Append","splice","deleteEducationField","deleteExperienceField","typeof","readOnly","deleteProjectField","DeleteProfile","ProfileItem","resumeUrl","hasLogo","hasResume","hasEducation","hasExperience","hasProjects","style","width","height","frameBorder","Profile","projectList","contentLength","projectLength","j","getProjects","AddContent","uploading","richText","file","contentIsFile","setContentIsFile","showConfirmation","setShowConfirmation","toggleContentType","resetForm","toggleConfirmation","open","toggle","inline","checked","header","list","indent","ProfileBarLink","LinkedUL","values","ProfileBar","condensed","condensedTitle","clickHandler","section","activeSection","setActiveSection","bio","faGraduationCap","faBriefcase","faEdit","ShareContentItem","focused","setFocus","Section","scrollHandler","useInView","ref","inView","isInView","setInView","Share","url","shareid","href","pop","gettingSharepage","collapsed","profilebarState","setProfilebarState","profilebarWidth","setProfilebarWidth","focusedContent","setFocusedContent","focusedContentWidth","setFocusedContentWidth","inFocusedState","setFocusedState","viewSection","setViewSection","showcase","viewStates","setViewStates","handleInfo","info","scrollToContentItem","getElementById","scrollIntoView","behavior","sectionScrollHandler","_viewStates","isActive","handleContentItemClick","setTimeout","handleContentItemClose","stopPropagation","maximumSize","minimumSize","trackSize","scrollable","Card","educationItem","experienceItem","contentItem","sharePages","sharepage","textDecorationLine","page","App","authenticated","test","fallback","PrivateRoute","_props","render","pathname","ReactDOM","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c7d2b53.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * Redux slice for state.app, responsible for 'loading' flags and error tracking.\n */\nconst app = createSlice({\n  name: 'app',\n  initialState: {\n    errors: {},\n    loading: {}\n  },\n  reduers: {},\n  extraReducers: {\n    'user/login/pending': state => { return startLoading(state, 'login') },\n    'user/login/fulfilled': state => { stopLoading(state, 'login') },\n    'user/login/rejected': (state, action) => { return setError(state, 'login', action.error) },\n\n    'user/authenticate/pending': state => { return startLoading(state, 'login') },\n    'user/authenticate/fulfilled': state => { stopLoading(state, 'login') },\n    'user/authenticate/rejected': (state, action) => { return setError(state, 'login', action.error) },\n\n    'user/update/pending': state => { return startLoading(state, 'update') },\n    'user/update/fulfilled': state => { stopLoading(state, 'update') },\n    'user/update/rejected': (state, action) => { return setError(state, 'update', action.error) },\n\n    'user/register/pending': state => { return startLoading(state, 'register') },\n    'user/register/fulfilled': state => { stopLoading(state, 'register') },\n    'user/register/rejected': (state, action) => { return setError(state, 'register', action.error) },\n\n    'content/getContent/pending': state => { return startLoading(state, 'getContent') },\n    'content/getContent/fulfilled': state => { stopLoading(state, 'getContent') },\n    'content/getContent/rejected': (state, action) => { return setError(state, 'getContent', action.error) },\n\n    'content/createContent/pending': state => { return startLoading(state, 'createContent')},\n    'content/createContent/fulfilled': state => { stopLoading(state, 'createContent') },\n    'content/createContent/rejected': (state, action) => { return setError(state, 'createContent', action.error) },\n\n    'content/editContent/pending': state => { return startLoading(state, 'editContent') },\n    'content/editContent/fulfilled': state => { stopLoading(state, 'editContent') },\n    'content/editContent/rejected': (state, action) => { return setError(state, 'editContent', action.error) },\n\n    'content/deleteContent/pending': state => { return startLoading(state, 'deleteContent') },\n    'content/deleteContent/fulfilled': state => { stopLoading(state, 'deleteContent') },\n    'content/deleteContent/rejected': (state, action) => { setError(state, 'deleteContent', action.payload) },\n\n    'share/getSharepage/pending': state => { return startLoading(state, 'getSharepage') },\n    'share/getSharepage/fulfilled': state => { stopLoading(state, 'getSharepage') },\n    'share/getSharepage/rejected': (state, action) => { setError(state, 'getSharepage', action.payload) }\n  }\n});\n\n/**\n * Sets state.app.loading.action to true.\n * @param {*} state\n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @return The modified state.\n */\nconst startLoading = (state, action) => {\n\n  removeError(state, action);\n\n  return {\n    ...state,\n    loading: {\n      ...state.loading,\n      [action]: true\n    }\n  }\n};\n\n/**\n * Removes state.app.loading.action from the state.\n * @param {*} state\n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst stopLoading = (state, action) => delete state.loading[action];\n\n/**\n * Sets state.app.errors.action to the error string and outputs the error to the console.\n * @param {*} state\n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @param {String} error - An associated error code or message.\n * @return The modified state.\n */\nconst setError = (state, action, error) => {\n\n  console.error(`${action}: ${error.message}`);\n\n  return {\n    ...state,\n    errors: {\n      ...state.errors,\n      [action]: error.message\n    }\n  }\n};\n\n/**\n * Removes state.app.errors.action from the state.\n * @param {*} state\n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst removeError = (state, action) => delete state.errors[action];\n\nexport default app.reducer;\n","import axios from 'axios';\n\n// Intercept and mock all requests if run with with start:mockapi\nif (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API) {\n  require('../_mockapi/api');\n}\n\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\n//axios.defaults.baseURL = 'http://localhost:57670';\n\nexport const AUTH_USER = '/users/authenticate';\nexport const REGISTER_USER = '/users/register';\nexport const CURRENT_USER = '/users/current';\nexport const CONTENT = '/content/';\nexport const CREATE_CONTENT = '/content/create'; \nexport const CREATE_PROFILE = '/profile/create'; \nexport const PROFILE = '/profile/'; \nexport const ADD_LOGO = '/profile/addLogo';\nexport const ADD_RESUME = '/profile/addResume'; \nexport const UPDATE_USER = '/users/update';\nexport const SHARE = '/share/';\n\nexport const token = {\n  get: () => localStorage.getItem('token'),\n  set: _token => localStorage.setItem('token', _token),\n  delete: () => localStorage.removeItem('token')\n}\n\n// Takes email and password as an object and returns the user's details and token\nexport const authenticateCredentials = async user => await axios.post(AUTH_USER, user);\n\n// Takes email and password as an object and returns the user's details and token\nexport const registerUser = async user => await axios.post(REGISTER_USER, user);\n\n// Uses locally-stored token and returns the user's details\nexport const authenticateToken = async () => await axios.get(CURRENT_USER);\n\n// Uses an existing token if user is logged in and returns all their content (as a list, not an object)\nexport const getAllContent = async () => await axios.get(CONTENT);\n\n//Gets one post from an id \n//const getSingleContent = async id => await axios.get(`${CONTENT}${id}`); \n\n// Takes a content object and authorises with existing token\nexport const createContent = async content => await axios.post(CREATE_CONTENT, content);\n\n// Takes a content object (that must include the id field) and authorises with existing token\nexport const editContent = async content => {\n\n  // Handle special case of FormData object being passed\n  let id;\n  try {\n    id = content.get('id');\n  } catch {\n    id = content.id;\n  }\n\n  await axios.put(`${CONTENT}${id}`, content);\n}\n\n// Takes just the content id (as a string) and authorises with existing token\nexport const deleteContent = async id => await axios.delete(`${CONTENT}${id}`);\n\n// Takes profile object and authorises with existing token \nexport const createProfile = async profile => await axios.post(CREATE_PROFILE, profile); \n\n// Takes a profile object (text only) and id and authorises with existing token\nexport const editProfile = async profile => await axios.put(`${PROFILE}${profile.id}`, profile); \n\n// Takes a profile id and authorises with existing token \nexport const deleteProfile = async id => await axios.delete(`${PROFILE}${id}`); \n\n// Takes a profile id and authorises with existing token, returns profile\nexport const getProfile = async id => await axios.get(`${PROFILE}${id}`); \n\n//Takes a profile id and authorises with existing token \nexport const addLogo = async logo => await axios.put(ADD_LOGO, logo);  \n\nexport const addResume = async resume => await axios.put(ADD_RESUME, resume);  \n\nexport const updateUser = async userParams => await axios.put(UPDATE_USER, userParams);\n\nexport const getSharepage = async id => await axios.get(`${SHARE}${id}`);\n","/*\n * The content 'slice' of the state. Centralises all content-related\n * functionality including API calls.\n */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  getAllContent,\n  createContent as apiCreateContent,\n  editContent as apiEditContent,\n  deleteContent as apiDeleteContent\n} from '../../common/api';\n\n// Async Thunks required whenever there's an API call\nexport const getContent = createAsyncThunk(\n  'content/getContent',\n  getAllContent\n);\n\nexport const createContent = createAsyncThunk(\n  'content/createContent',\n  apiCreateContent,\n\n);\n\nexport const editContent = createAsyncThunk(\n  'content/editContent',\n  apiEditContent\n);\n\nexport const deleteContent = createAsyncThunk(\n  'content/deleteContent',\n  apiDeleteContent\n);\n\nconst content = createSlice({\n  name: 'content',\n  initialState: [], // A list! Not an object, be careful. Caused me a few issues.\n  reducers: {},\n  extraReducers: {\n    'user/logout': () => { return [] }, // Trigger content to reset itself when user logs out\n    [getContent.fulfilled]: (_, action) => { return [...action.payload.data] }\n  }\n});\n\n// For importing to src/app/reducers.js\nexport default content.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  authenticateCredentials,\n  authenticateToken,\n  updateUser,\n  registerUser,\n  token\n} from '../../common/api';\n\nexport const login = createAsyncThunk(\n  'user/login',\n  authenticateCredentials\n);\n\nexport const authenticate = createAsyncThunk(\n  'user/authenticate',\n  authenticateToken\n);\n\nexport const editUser = createAsyncThunk(\n  'user/update',\n  updateUser\n);\n\nexport const register = createAsyncThunk(\n  'user/register',\n  registerUser\n);\n\nconst user = createSlice({\n  name: 'user',\n  initialState: { isAuthenticated: token.get() !== null },\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        token: token.get(),\n        isAuthenticated: true\n      }\n    },\n    logout: () => {\n      token.delete();\n      return { isAuthenticated: false }\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n\n      // Persist JWT to local storage\n      token.set(action.payload.data.token);\n\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    // [register.fulfilled]: (state, action) => {\n\n    //   // Persist JWT to local storage\n    //   localStorage.setItem('token', action.payload.data.token);\n\n    //   return {\n    //     ...state,\n    //     ...action.payload.data,\n    //     isAuthenticated: true\n    //   }\n    // },\n    [authenticate.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    [authenticate.rejected]: () => {\n      token.delete();\n      return { isAuthenticated: false } \n    }\n  }\n});\n\n// Explicitly export the non-async reducers\nexport const { logout, setUser } = user.actions;\n\nexport default user.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n    createProfile as apiCreateProfile,\n    getProfile as apiGetProfile,\n    editProfile as apiEditProfile,\n    deleteProfile as apiDeleteProfile,\n    addLogo as apiAddLogo, \n    addResume as apiAddResume\n} from '../../common/api';\n\n//API calls \nexport const createProfile = createAsyncThunk(\n    'profile/createProfile',\n    apiCreateProfile\n);\n\nexport const getProfile = createAsyncThunk(\n    'profile/getProfile',\n    apiGetProfile\n);\n\nexport const editProfile = createAsyncThunk(\n    'profile/updateProfile', \n    apiEditProfile\n); \n\nexport const deleteProfile = createAsyncThunk(\n    'profile/deleteProfile', \n    apiDeleteProfile\n);\n\nexport const addLogo = createAsyncThunk(\n    'profile/addLogo', \n    apiAddLogo\n);\n\nexport const addResume = createAsyncThunk(\n    'profile/addResume', \n    apiAddResume\n);\n\n//Stores profile in state.profile \nconst profile = createSlice({\n    name: 'profile',\n    //Added default arrays, as the state takes 2 seconds to actually get the data\n    initialState: {isLoaded: false, education:[], experience: [], projects: []},\n    reducers: {},\n    extraReducers: {\n        //Resets state on logout (think its necessary)\n        'user/logout': () => { return {}},\n        //Returns profile data \n        [getProfile.fulfilled]: (state, action) => {  \n            return {\n                ...state,\n                ...action.payload.data, \n                isLoaded: true \n            }\n        }\n    }\n  });\n\nexport default profile.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst search = createSlice({\n  name: 'search',\n  initialState: {\n    active: false\n  },\n  reducers: {\n    activeSearch: (_, action) => {\n      return {\n        active: true,\n        query: action.payload.query,\n        content: searchContent(action.payload.query, action.payload.content)\n      }\n    },\n    stopSearch: () => { return { active: false } }\n  },\n  extraReducers: {\n    'user/logout': () => { return { active: false } }\n  }\n});\n\n/**\n * Searches for the query in the titles and tags of an array of\n * content objects, and returns a filtered array.\n * \n * @param {String} query Search query.\n * @param {Array} content Array of content objects to search through.\n * @return {Array}\n */\nconst searchContent = (query, content) => {\n  \n  query = query.toLowerCase();\n  let results = new Set();\n  \n  content.forEach(_content => {\n    \n    if (_content.title.toLowerCase().includes(query)) results.add(_content);\n    \n    _content.tags.forEach(tag => {\n      if (tag.toLowerCase().includes(query)) results.add(_content);\n    });\n  });\n  \n  return [...results];\n}\n\nexport const { activeSearch, stopSearch } = search.actions;\n\nexport default search.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n    getSharepage as apiGetSharepage\n} from '../../common/api';\n\n//API calls\nexport const getSharepage = createAsyncThunk(\n    'share/getSharepage',\n    apiGetSharepage\n);\n//Stores profile in state.profile\nconst share = createSlice({\n    name: 'share',\n    initialState: { content: [], education: [], experience: [] },\n    reducers: {},\n    extraReducers: {\n        //Resets state on logout (think its necessary)\n        'user/logout': () => { return {}},\n        //Returns share data\n        //[getSharepage.fulfilled]: (_, action) => { console.log(\"share data\"); console.log(action.payload.data); return [...action.payload.data] }\n        [getSharepage.fulfilled]: (state, action) => {\n            return {\n                ...state,\n                ...action.payload.data\n            }\n        }\n    }\n  });\n\nexport default share.reducer;\n","/*\n * Redux takes any reducers we add here and makes them\n * available app-wide.\n */\n\nimport { combineReducers } from 'redux';\nimport appReducer from './appSlice';\nimport contentReducer from '../features/content/contentSlice';\nimport userReducer from '../features/user/userSlice';\nimport profileReducer from '../features/profile/profileSlice';\nimport searchReducer from '../features/search/searchSlice';\nimport shareReducer from '../features/share/shareSlice';\n\nexport default combineReducers({\n  app: appReducer,\n  profile: profileReducer,\n  content: contentReducer,\n  user: userReducer,\n  search: searchReducer,\n  share: shareReducer\n});\n","/*\n * store.js\n * Boilerplate code. Redux store that controls application state.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\n\n//import auth from '../common/api';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Middleware to force authorisation header on every action\nconst auth = () => next => action => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n  return next(action);\n};\n\n// Any middleware included goes here\nconst middleware = [thunk, auth];\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\n// Add enhancers (if any)\nconst enhancers = [middlewareEnhancer];\n\n// Give access to Redux Devtools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { publicRoutes } from '../../common/routes';\n\n/* Added logo and removed the text display */\n\nexport function validate() {\n  let input = this.state.input;\n  let errors = {};\n  let isValid = true;\n\n  if (!input[\"name\"]) {\n    isValid = false;\n    errors[\"name\"] = \"Please enter your name.\";\n  }\n\n  if (!input[\"email\"]) {\n    isValid = false;\n    errors[\"email\"] = \"Please enter your email Address.\";\n  }\n\n  if (typeof input[\"email\"] !== \"undefined\") {\n      \n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    if (!pattern.test(input[\"email\"])) {\n      isValid = false;\n      errors[\"email\"] = \"Please enter valid email address.\";\n    }\n  }\n\n  if (!input[\"password\"]) {\n    isValid = false;\n    errors[\"password\"] = \"Please enter your password.\";\n  }\n\n  if (!input[\"confirm_password\"]) {\n    isValid = false;\n    errors[\"confirm_password\"] = \"Please re enter to confirm password.\";\n  }\n\n  if (typeof input[\"password\"] !== \"undefined\" && typeof input[\"confirm_password\"] !== \"undefined\") {\n      \n    if (input[\"password\"] !== input[\"confirm_password\"]) {\n      isValid = false;\n      errors[\"password\"] = \"Passwords don't match.\";\n    }\n  } \n\n  this.setState({\n    errors: errors\n  });\n\n  return isValid;\n}\n\nexport default function Landing() {\n\n  // Get routes that Landing can handle\n  const routes = publicRoutes.filter(route => route.landing !== null);\n \n  return(\n    <Container fluid>\n      <Row className=\"no-gutter\">\n        <Col className=\"bg-info d-flex justify-content-center\">\n          <div className=\"splash-container\">\n            <h1 className=\"display-3 text-white\"><img src=\"/images/Portfolio.png\" alt=\"\"/></h1>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"splash-container\">\n            <Switch>\n              {routes.map((route, index) =>\n                  <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    children={route.landing}\n                  />\n                )}\n            </Switch>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { login } from './userSlice';\n\nexport default function Login({ onLogin }) {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const user = useSelector(state => state.user);\n  const [form, updateForm] = useState({ email: '', password: '' });\n\n  useEffect(() => {\n    if (user.isAuthenticated) history.push('/homepage');\n  });\n\n  const onSubmitHandler = e => {\n\n    e.preventDefault();\n\n    dispatch(login(form))\n      .then(unwrapResult)\n      .then(() => history.push('/homepage'))\n      .catch(error => console.log(error));\n  }\n\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n\n  return(\n    <div className=\"form-box\">\n      <Form className=\"login-form\" onSubmit={onSubmitHandler}>\n        <h2>Login</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"email\" \n            id=\"email\"\n            placeholder=\"Email Address\" \n            value={form.email}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"  \n            id=\"password\" \n            placeholder=\"Password\" \n            value={form.password}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Button className=\"btn-login\" type=\"submit\" variant=\"primary\">\n          {loggingIn\n            ? <>Logging in <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={loggingIn}/></span></>\n            : \"Log in\"}\n        </Button>\n        <div className=\"text-center\"> Don't have an account? <Button as={Link} to=\"/register\" variant=\"link\">Register</Button></div>\n      </Form>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { register} from './userSlice';\n//import {createProfile} from '../profile/profileSlice';\n\nexport default function Register() {\n  \n  const dispatch = useDispatch();\n  const history = useHistory();\n  const registering = useSelector(state => state.app.loading.register);\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const [form, updateForm] = useState({ name: '', email: '', password: '', confirmPass: ''});\n  \n  const onSubmitHandler = e => {\n    \n    e.preventDefault();\n          dispatch(register(form))\n          //.then(dispatch(login(form)))\n          .then(() => history.push('/homepage'));\n        \n  }\n  \n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n  \n  return(\n    <div className=\"form-box\">\n      <Form className=\"signup-form\" onSubmit={onSubmitHandler}>\n        <h2>Register</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"text\" \n            id=\"username\"\n            placeholder=\"Username\" \n            value={form.username}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"email\" \n          id=\"email\"\n          placeholder=\"Email Address\" \n          value={form.email}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"password\"  \n          id=\"password\" \n          placeholder=\"Password\" \n          value={form.password}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"password\"  \n          id=\"confirmPass\" \n          placeholder=\"Confirm Password\" \n          value={form.confirmPass}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" onClickHandler={onSubmitHandler} variant=\"primary\">\n          {registering || loggingIn\n              ? <>Signing you up <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={registering}/></span></>\n              : \"Sign up\"}\n        </Button>\n        <div className=\"text-center\"> Already have an account?<Button as={Link} to=\"/\" variant=\"link\">Login here</Button></div>\n      </Form>\n    </div>\n  );\n}\n  ","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function NavButton({ icon }) {\n  return(\n    <FontAwesomeIcon className=\"navbutton\" icon={icon} size=\"lg\"/>\n  );\n}\n","import React from 'react'\n\nexport default function AvatarButton({ image }) {\n  return(\n    <img className=\"avatarbutton\" src={image} alt=\"Your profile\"/>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {editUser} from './userSlice';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport Image from 'react-bootstrap/Image';\n\nexport default function EditUser({show, closeHandler, user}) {\n    //const user = useSelector(state => state.user);\n\n    const userFromState = useSelector(state => state.user);\n\n\n    //Initialised with the user fields.\n\n    const [_user, updateDetails] = useState(user);\n    const dispatch = useDispatch();\n\n    //submits the new user details to the server to update in the database\n    const handleEditUser = () => {\n        dispatch(editUser(_user))\n        .then(closeHandler);\n    };\n\n    //source of truth for the user details, updated alongside the form when editing\n    const onChangeHandler = e => updateDetails({ ..._user, [e.target.id]: e.target.value});\n\n    const resetHandler = () => {\n      //\n      updateDetails(userFromState);\n      console.log(_user);\n      console.log(userFromState);\n    }\n    \n    //<img src=\"...\" class=\"rounded mx-auto d-block\" alt=\"...\">\n\n    return (\n    <React.Fragment>\n        <Modal show = {show} onHide = {closeHandler}>\n        <Modal.Header><Modal.Title>Edit User Details</Modal.Title></Modal.Header>\n        <Modal.Body>\n        <Image src = {userFromState.avatar} alt = \"Hello Darkness\" roundedCircle className = \"rounded mx-auto d-block\"/>\n        <Form>\n        <Form.Group controlId = \"username\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control as=\"textarea\" rows = \"1\" value = {_user.username} onChange = {onChangeHandler}/>\n        </Form.Group>\n          <Form.Group controlId=\"firstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.firstName} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"lastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.lastName} onChange={onChangeHandler}/>\n          </Form.Group>\n        </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"link\" onClick = {resetHandler}>Reset Changes</Button>\n            <Button variant=\"warning\" onClick = {handleEditUser}>Save changes</Button>\n            <Button variant=\"link\" onClick={closeHandler}>Cancel</Button>\n        </Modal.Footer>\n        </Modal>\n        \n    </React.Fragment>\n    );\n}\n\n/* <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n            Edit\n        </Button>\n        <Image src = {user.avatar} alt = \"Hello Darkness\"/>\n        <h1 className=\"h2 ml-5 mt-5\">Username: {user.username}</h1> \n        <h1 className=\"h2 ml-5 mt-5\">First Name: {user.firstName}</h1>\n        <h1 className=\"h2 ml-5 mt-5\">Last Name: {user.lastName}</h1> */","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  FormInput\n} from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { activeSearch, stopSearch } from './searchSlice';\n\n/**\n * Search bar which searches within titles and tags from\n * content that's currently in the state. Makes a copy of\n * state.content in state.search but filtered by search query.\n * \n * @param {boolean} show Whether search bar is available or not. \n */\nexport default function Search({ show }) {\n\n  const dispatch = useDispatch();\n  const content = useSelector(state => state.content);\n  const [showSearch, setShowSearch] = useState(false);\n  const [query, setQuery] = useState('');\n\n  // Hide search if not on the content feed\n  let match = useRouteMatch({\n    path: '/dashboard/content',\n    exact: true\n  })\n\n  // Activate search\n  const searchClickHandler = () => {\n    document.getElementsByClassName('search-input')[0].focus();\n    setShowSearch(true);\n  }\n\n  // Deactivate search\n  const onFocusOutHandler = () => {\n    console.log('focus out');\n    if (query === '') setShowSearch(false);\n  }\n\n  const onChangeHandler = e => {\n\n    const _query = e.target.value;\n    setQuery(_query);\n\n    if (e.target.value === '') {\n\n      dispatch(stopSearch());\n      return;\n    }\n\n    dispatch(activeSearch({ query: _query, content: content }));\n  }\n\n  return(\n    <div className={`search${!match ? ' hidden' : ''}`}>\n      <InputGroup seamless>\n        <InputGroupAddon type=\"prepend\">\n          <InputGroupText>\n            <FontAwesomeIcon\n              className={`search-icon search-icon${showSearch ? '-active' : '-inactive'}`}\n              icon={faSearch}\n              onClick={searchClickHandler}\n            />\n          </InputGroupText>\n        </InputGroupAddon>\n        <FormInput\n          className={`search-input search-input${showSearch ? '-active' : '-inactive'}`}\n          type=\"search\"\n          value={query}\n          onChange={onChangeHandler}\n          onBlur={onFocusOutHandler}\n        />\n      </InputGroup>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport { faBell, faCog } from '@fortawesome/free-solid-svg-icons';\n\nimport NavButton from './NavButton';\nimport AvatarButton from './AvatarButton';\nimport EditUser from '../user/EditUser';\nimport Search from '../search/Search';\n\nexport default function TopNav() {\n  \n  const user = useSelector(state => state.user);\n  const [showUserEdit, setShowUserEdit] = useState(false);\n\n  const handleEditClose = () => setShowUserEdit(false);\n\n  return(\n    <>\n      <EditUser show={showUserEdit} closeHandler={handleEditClose} user={user}/>\n      <Nav className=\"topnav justify-content-end\">\n        <Nav.Item className=\"topnav topnav-navitem topnav-search\">\n          <Search/>\n        </Nav.Item>\n        <Nav.Item className=\"topnav topnav-navitem topnav-notifications\" onClick={() => console.log('\\'Notifications\\' clicked')}>\n          <NavButton icon={faBell}></NavButton>\n        </Nav.Item>\n        <Nav.Item className=\"topnav topnav-navitem topnav-settings\" onClick={() => console.log('\\'Settings\\' clicked')}>\n          <NavButton icon={faCog}></NavButton>\n        </Nav.Item>\n        <Nav.Item className=\"topnav topnav-navitem topnav-avatar\" onClick={() => setShowUserEdit(true)}>\n          <AvatarButton image={user.avatar}/>\n        </Nav.Item>\n      </Nav>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\nexport default function NavLink({\n  label,\n  to,\n  activeOnlyWhenExact,\n  icon,\n  iconSize,\n  dropdown,\n  expanded,\n  sub\n }) {\n\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  }) || expanded;\n\n  return(\n    <Nav.Link\n      as={Link}\n      to={to}\n      className={\n        `navlink${\n          match ? ' navlink-active active' : ''\n        }${\n          dropdown ? ' navlink-dropdown' : ''\n        }${\n          sub ? ' navlink-sub' : ''\n        }`\n      }\n    >\n      {icon &&\n        <FontAwesomeIcon\n          className={`navlink-icon${match ? ' navlink-icon-active' : ''}`}\n          icon={icon}\n          size={iconSize ? iconSize : \"lg\"}\n        />}\n          {label}\n          {dropdown &&\n        <FontAwesomeIcon\n          className={`navlink-chevron ${expanded ? 'fa-rotate-180' : ''}`}\n          icon={faChevronDown}\n          size=\"lg\"\n        />}\n    </Nav.Link>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Collapse from 'react-bootstrap/Collapse';\n\nimport { faAddressCard, faIdBadge, faFolderPlus, faSignOutAlt, faStream, faBorderAll } from '@fortawesome/free-solid-svg-icons';\n\nimport NavLink from './NavLink';\n\nimport { logout } from '../user/userSlice';\n\nexport default function SideNavbar() {\n\n  const dispatch = useDispatch();\n  const [expandContent, toggleContent] = useState(false);\n  const [expandShare, toggleShare] = useState(false);\n\n  const onContentClick = () => toggleContent(!expandContent);\n  const onShareClick = () => toggleShare(!expandShare);\n\n  const logoutHandler = () => dispatch(logout());\n\n  return(\n    <Nav className=\"sidenav flex-column col-sm-3 col-lg-2 d-none d-sm-block\">\n      <img className=\"sidenav-logo\" src=\"/images/logo_white_transparent.png\" alt=\"cPortfolio logo\"/>\n      <Nav.Item className=\"sidenav-item\">\n        <NavLink\n          to=\"/homepage\"\n          label=\"Overview\"\n          icon={faBorderAll}\n        />\n      </Nav.Item>\n      <div className={`sidenav-group${expandContent ? ' sidenav-group-expanded' : ''}`}>\n        <Nav.Item className=\"sidenav-item\" onClick={onContentClick}>\n          <NavLink\n            dropdown\n            expanded={expandContent}\n            to=\"/dashboard/content\"\n            label=\"Content\"\n            icon={faStream}\n            activeOnlyWhenExact={true}\n          />\n        </Nav.Item>\n        <Collapse in={expandContent}>\n          <div className=\"collapse-group\">\n            <Nav.Item className=\"sidenav-item\">\n              <NavLink\n                sub\n                to=\"/dashboard/content/add\"\n                label=\"New project\"\n                icon={faFolderPlus}\n              />\n            </Nav.Item>\n            <Nav.Item className=\"sidenav-item\">\n              <NavLink\n                sub\n                to=\"/dashboard/content/upload\"\n                label=\"New file upload\"\n                icon={faFolderPlus}\n              />\n            </Nav.Item>\n          </div>\n        </Collapse>\n      </div>\n      <Nav.Item className=\"sidenav-item\">\n        <NavLink\n          to=\"/dashboard/profile\"\n          label=\"Profile\"\n          icon={faAddressCard}\n        />\n      </Nav.Item>\n      <div className={`sidenav-group${expandShare ? ' sidenav-group-expanded' : ''}`}>\n        <Nav.Item className=\"sidenav-item\" onClick={onShareClick}>\n          <NavLink\n            dropdown\n            expanded={expandShare}\n            to=\"/dashboard/sharepages\"\n            label=\"Share\"\n            icon={faIdBadge}\n            activeOnlyWhenExact={true}\n          />\n        </Nav.Item>\n        <Collapse in={expandShare}>\n          <div className=\"collapse-group\">\n            <Nav.Item className=\"sidenav-item\">\n              <NavLink\n                sub\n                to=\"/dashboard/sharepages/add\"\n                label=\"New Sharepage\"\n                icon={faFolderPlus}\n              />\n            </Nav.Item>\n          </div>\n        </Collapse>\n      </div>\n      <Nav.Item className=\"sidenav-item\" onClick={logoutHandler}>\n        <NavLink\n          to=\"/\"\n          label=\"Sign out\"\n          icon={faSignOutAlt}\n          activeOnlyWhenExact={true}\n        />\n      </Nav.Item>\n    </Nav>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Image from \"react-bootstrap/Image\";\n\nexport default function RightNavbar() {\n  const user = useSelector((state) => state.user);\n  const hasBackground = user.background;\n  const emails = user.emails;\n\n  return (\n    <div className=\"rightnav\">\n      <div className=\"box\">\n        {hasBackground ? (\n          <Image className=\"background\" src={user.background} />\n        ) : (\n          <div className=\"default-background\" />\n        )}\n        <Image className=\"avatar\" src={user.avatar} />\n      </div>\n      <div className=\"name\">\n        {user.firstName} {user.lastName}\n      </div>\n      <div className=\"email-box\">\n        {emails &&\n          emails.map((emails) => (\n            <div className=\"email\" key={emails}>\n              {emails}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Row from \"react-bootstrap/Row\";\nimport TopNav from \"../layout/TopNav\";\nimport SideNavbar from \"../layout/SideNavbar\";\nimport RightNavbar from \"../layout/RightNavbar\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport NavLink from \"../layout/NavLink\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGripHorizontal,\n  faUserCircle,\n  faCopy,\n  faFileUpload,\n  faAddressCard,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { getProfile } from \"../profile/profileSlice\";\n\nexport default function Homepage() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n\n  useEffect(() => {\n\n    async function fetch() { dispatch(getProfile(user.profile)) }\n\n    // Skip loading if already in state\n    if (user.profile && user.profile !== profile.id) fetch();\n  }, [dispatch, user, profile]);\n\n  return (\n    <>\n      <TopNav />\n      <SideNavbar/>\n      <RightNavbar/>\n      <br />\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n        <Nav className=\"flex-column\">\n          <div className = \"homepage-heading\">\n            <div className=\"pageheading-rectangle1\">\n              <h1 className=\"pageheading-heading\">Welcome {user.username}</h1>\n              <div className=\"pageheading-decoration1\" />\n              <div className=\"pageheading-decoration2\" />\n            </div>\n          </div>\n          <div className=\"main\">\n            <Nav.Item>\n              <NavLink\n                to=\"/dashboard/content\"\n                activeOnlyWhenExact={true}\n                label={\n                  <>\n                    <Row>\n                      <div className=\"dashboard\">\n                        <FontAwesomeIcon\n                          className=\"icon\"\n                          icon={faGripHorizontal}\n                        />\n                        <div className=\"heading\">DASHBOARD</div>\n                        <div className=\"rectangle1\" />\n                        <div className=\"rectangle2\" />\n                        <div className=\"rectangle3\" />\n                        <div className=\"rectangle4\" />\n                      </div>\n                    </Row>\n                  </>\n                }\n              />\n            </Nav.Item>\n            <Row>\n              <Nav.Item>\n                <NavLink\n                  to=\"/dashboard/profile\"\n                  label={\n                    <>\n                      <Row>\n                        <div className=\"profile\">\n                          <FontAwesomeIcon\n                            className=\"icon\"\n                            icon={faUserCircle}\n                          />\n                          <div className=\"heading\">PROFILE</div>\n                          <div className=\"rectangle1\" />\n                          <div className=\"rectangle2\" />\n                          <div className=\"rectangle3\" />\n                          <div className=\"rectangle4\" />\n                        </div>\n                      </Row>\n                    </>\n                  }\n                />\n              </Nav.Item>\n              <Nav.Item>\n                <NavLink\n                  to=\"/dashboard/content/add\"\n                  label={\n                    <>\n                      <div className=\"add-content\">\n                        <FontAwesomeIcon className=\"icon\" icon={faCopy} />\n                        <div className=\"heading\">ADD TEXT</div>\n                        <div className=\"rectangle1\" />\n                        <div className=\"rectangle2\" />\n                        <div className=\"rectangle3\" />\n                        <div className=\"rectangle4\" />\n                      </div>\n                    </>\n                  }\n                />\n              </Nav.Item>\n            </Row>\n            <Nav.Item>\n              <NavLink\n                to=\"/dashboard/content/add\"\n                label={\n                  <>\n                    <div className=\"add-file\">\n                      <FontAwesomeIcon className=\"icon\" icon={faFileUpload} />\n                      <div className=\"heading\">ADD FILE</div>\n                      <div className=\"rectangle1\" />\n                      <div className=\"rectangle2\" />\n                      <div className=\"rectangle3\" />\n                      <div className=\"rectangle4\" />\n                    </div>\n                  </>\n                }\n              />\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink\n                to=\"/dashboard/sharepages\"\n                label={\n                  <>\n                    <div className=\"share\">\n                      <FontAwesomeIcon className=\"icon\" icon={faAddressCard} />\n                      <div className=\"heading\">SHARE VIEW</div>\n                      <div className=\"rectangle1\" />\n                      <div className=\"rectangle2\" />\n                      <div className=\"rectangle3\" />\n                      <div className=\"rectangle4\" />\n                    </div>\n                  </>\n                }\n              />\n            </Nav.Item>\n          </div>\n        </Nav>\n      </main>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport TopNav from '../layout/TopNav';\nimport SideNavBar from '../layout/SideNavbar';\n\nimport { getProfile } from '../profile/profileSlice';\nimport { privateRoutes } from '../../common/routes';\n\nexport default function Dashboard() {\n  \n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const routes = privateRoutes.filter(route => 'dashboard' in route);\n\n  useEffect(() => {\n\n    async function fetch() {\n      dispatch(getProfile(user.profile));\n    }\n    fetch();\n  });\n\n  return(\n    <>\n      <TopNav/>\n      <Container fluid>\n        <Row>\n          <SideNavBar/>\n          <main role=\"main\" className=\"dashboard-main col-sm-9 col-lg-10 ml-sm-auto px-4\">\n            <Switch>\n              {routes.map((route, index) =>\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={route.dashboard}\n                />\n              )}\n            </Switch>\n          </main>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Tag({ tag, colour, shape }) {\n\n  const clickHandler = () => console.log(`'${tag}' tag clicked.`);\n\n  return(\n    <>\n      <div className={`tag tag-colour-${colour} tag-shape-${shape}`} onClick={clickHandler}>\n        {tag}\n      </div>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { editContent, getContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditContent({ content, show, closeHandler }) {\n\n  //console.log(content);\n  const [_content, updateContent] = useState(content);\n  //set richtext to blank if the content is a cloudinary link, the content otherwise\n  const [_richText, updateRichText] = useState(!content.content || content.content.includes(\"res.cloudinary.com\") ? '' : content.content);\n  const [_file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => { setShowFile(false); updateFile('undefined'); }\n  const toggleShowFileOn = () => { setShowFile(true); }\n\n  const dispatch = useDispatch();\n  const editClickHandler = () => {\n\n    console.log(_content);\n\n    //convert to FormData so we can send files\n    const _data = new FormData();\n    for (let field in _content) {\n      _data.set(field, _content[field]);\n    }\n    if(showFile && _file) { _data.set('file', _file); _data.delete('content'); }\n    else if (!showFile) { _data.set('content', _richText); }\n\n    dispatch(editContent(_data))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n\n  }\n\n  const deleteFileAndCloseHandler = e => {\n    updateFile('undefined');\n    closeHandler();\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ..._content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={_content.title} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" value={_content.description} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n          <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n          { !showFile ?\n          <Form.Group controlId=\"content\">\n            <Form.Label>Content</Form.Label>\n            <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={_richText} onChange={onContentChangeHandler}/>\n          </Form.Group>\n          :\n          <Form.Group controlId=\"file\">\n            <Form.Label>File</Form.Label>\n            <br/>\n            <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n          </Form.Group>\n          }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={deleteFileAndCloseHandler}>Cancel</Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContent, deleteContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteContent({ content, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n\n    // Wait until content is updated before dismissing the component\n    dispatch(deleteContent(content.id))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete <b>{content.title}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport EditContent from './EditContent';\nimport DeleteContent from './DeleteContent';\n\nexport default function ContentItemMenu({ content }) {\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  return(\n    <>\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\n      <Dropdown className=\"contentitemmenu\" alignRight>\n        <Dropdown.Toggle className=\"contentitemmenu contentitemmenu-button\" as={FontAwesomeIcon} icon={faEllipsisV} size=\"lg\"></Dropdown.Toggle>\n        <Dropdown.Menu className=\"contentitemmenu contentitemmenu-dropdown\" alignRight>\n          <Dropdown.Item className=\"contentitemmenu contentitemmenu-item\" onClick={() => setShowEdit(true)}>Edit</Dropdown.Item>\n          <Dropdown.Item className=\"contentitemmenu contentitemmenu-item\" onClick={() => setShowDelete(true)}>Delete</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n","const isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport const parseDate = date => (\n  date\n    ? Intl.DateTimeFormat('en-AU', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).format(Date.parse(date))\n    : \"\"\n);\n\nexport const getContentType = userContent => {\n\n  if (userContent) {\n    if (isUrl(userContent)) {\n      return (isImage(userContent.split('?')[0])) ? 'image' : 'url';\n    } else {\n      return 'text';\n    }\n  }\n\n  return null;\n}\n\nexport const getShareId = url => {\n    //if this isn't a sharepage return null\n    if (!url.includes(\"share\")) {\n        return null;\n    }\n    const id = url.split('/').pop();\n    return id;\n}\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Interweave from 'interweave';\n\n\nimport Tag from './Tag';\nimport ContentItemMenu from './ContentItemMenu';\n\nimport { parseDate } from '../../common/helpers';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ContentItem({ content }) {\n\n  const { id, title, description, displayDate } = content;\n  let { tags } = content;\n  const date = parseDate(displayDate);\n\n  // Bandaid\n  if (tags.length === 1) tags = tags[0].split(',');\n\n  tags = content.tags.map(tag => {\n    if (typeof tag === 'string') return { tag: tag, variant: 'default' }\n    else return tag;\n  });\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  return(\n    <Container className=\"contentitem contentitem-container\" key={id}>\n      <div className=\"contentitem contentitem-card\">\n        <Row className=\"contentitem contentitem-head\">\n          <Col xs={11}>\n            <Row className=\"contentitem contentitem-title\">{title}</Row>\n            <Row className=\"contentitem contentitem-date\">{date}</Row>\n          </Col>\n          <Col>\n            <Row className=\"contentitem contentitem-menu\">\n              <ContentItemMenu content={content}/>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"contentitem contentitem-body\">\n          {image && \n            (<Col className=\"contentitem contentitem-image-container\" md={3}>\n              <Row className=\"contentitem contentitem-image-container\">\n                <img className=\"contentitem contentitem-image\" src={content.content} alt={title}></img>\n              </Row>\n          </Col>)}\n          <Col>\n            <Row>\n              <p className=\"contentitem contentitem-description\">{description}</p>\n            </Row>\n            <Row>\n            {!image && <div><hr></hr><Interweave content={content.content}/></div>} \n            </Row>\n          </Col>\n          \n        </Row>\n        <Row className=\"contentitem contentitem-footer\">\n          <div className=\"contentitem contentitem-container contentitem-tags\">\n            {tags.map((tag, index) => \n              <Tag\n                key={index}\n                colour={tag.variant}\n                shape={index === 0 ? 'first' : index === (tags.length - 1) ? 'last' : 'mid'}\n                tag={tag.tag}\n              />\n            )}\n          </div>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Skeleton from 'react-loading-skeleton';\n\nimport ContentItem from '../content/ContentItem';\nimport RightNavbar from \"../layout/RightNavbar\"; \n\nimport { getContent } from '../content/contentSlice';\n\n/**\n * Contains the user's content in a feed/wall format.\n */\nexport default function Feed() {\n\n  const dispatch = useDispatch();\n  const gettingContent = useSelector(state => state.app.loading.getContent);\n  const user = useSelector(state => state.user);\n  const search = useSelector(state => state.search);\n  const content = useSelector(state => state.content);\n  const filteredContent = search.active ? search.content : content;\n\n  useEffect(() => {\n\n    async function fetch() { dispatch(getContent()) }\n\n    // Skip loading if already in state\n    if (user.content && user.content.length !== content.length) fetch();\n  }, [dispatch, user, content]);\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <RightNavbar/>\n      <div className = \"content-box\">\n      {gettingContent\n        ? <><h1><Skeleton/></h1><p><Skeleton count={3}/></p></>\n        : filteredContent.map(item => <ContentItem content={item} key={item.id}/>)}\n        </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"; \nimport { useSelector } from \"react-redux\";\nexport default function Project({\n  projects,\n  profile,\n  updateProfile,\n  updateProjects,\n  closeProjectField\n}) {\n\n  const content = useSelector((state) => state.content);\n  const [_newProject, updateNewProject] = useState(); \n\n  const addProjectHandler = () => {\n    //Selects content object\n    const proj = selectProject(_newProject); \n    //Saves and updates the state of projects (for display)\n    const tmp = [...projects, proj];\n    updateProjects(tmp);\n\n    //Saves and updates the project ids (for profile storage)\n    const tmpIds = [];\n    for(let i = 0; i < tmp.length; i++){ \n      tmpIds.push(tmp[i].id); \n    } \n    updateProfile({ ...profile, projects: tmpIds });\n    closeProjectField(); \n  };\n\n  //Searches content for new project id and returns the content object \n  //Cant save objects in value so this is an alternative \n  const selectProject = (id) => {\n    for(let i = 0; i < content.length; i++){ \n      if(content[i].id === id){ \n        return content[i]; \n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>Select Project</Form.Label>\n          <Form.Control value = {_newProject} onChange = {(e)=>{updateNewProject(e.target.value);}} as=\"select\" custom>\n            {content.map((content) => (\n              <option id={content.id} key={content.id} value = {content.id}>{content.title}</option>\n            ))}\n          </Form.Control>\n          {\"\\n\"}\n          <Button onClick={addProjectHandler}> Add </Button>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  );\n}\n","//Can probably split this into different fields\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editProfile, getProfile, addLogo, addResume } from \"./profileSlice\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Projects from \"./Projects\";\n\nexport default function EditProfile({ profile, projects, show, closeHandler }) {\n  const dispatch = useDispatch();\n  //_profile is the state variable, updateProfile is a function that updates the state\n  //Initial state of profile always takes some time to update\n  const [_profile, updateProfile] = useState(profile);\n  const [_projects, updateProjects] = useState(projects);\n  const [_education, updateEducation] = useState(profile.education);\n  const [_experience, updateExperience] = useState(profile.experience);\n  const [_logo, updateLogo] = useState();\n  const [_resume, updateResume] = useState();\n  const [viewAddProject, setView] = useState(false);\n\n  //Saves all changes\n  const editClickHandler = () => {\n    dispatch(editProfile(_profile))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveLogoHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _logo);\n    dispatch(addLogo(_data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveResumeHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _resume);\n    dispatch(addResume(_data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  //Updates logo field\n  const onLogoUploadHandler = (e) => updateLogo(e.target.files[0]);\n  const onResumeUploadHandler = (e) => updateResume(e.target.files[0]);\n  const deleteLogo = () => updateLogo(\"undefined\");\n  const deleteResume = () => updateResume(\"undefined\");\n\n  //Updates and sets education field in profile\n  const onChangeEducationHandler = (e) => {\n    //Copy and updates tmp array\n    const tmp = [..._education];\n    tmp[e.target.id] = e.target.value;\n    //Updates education array and profile in react state\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  //Adds an empty education field\n  const addEducationField = () => {\n    const tmp = [..._education, \"\"];\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n  //Deletes an education field\n  const deleteEducationField = (id) => {\n    const tmp = [..._education];\n    //Removes index\n    tmp.splice(id, 1);\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  const onChangeExperienceHandler = (e) => {\n    const tmp = [..._experience];\n    tmp[e.target.id] = e.target.value;\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addExperienceField = () => {\n    const tmp = [..._experience, \"\"];\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const deleteExperienceField = (id) => {\n    const tmp = [..._experience];\n    tmp.splice(id, 1);\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addProjectField = () => {\n    setView(true);\n  };\n\n  const closeProjectField = () => {\n    setView(false);\n  };\n\n  const deleteProjectField = (id) => {\n    //Removes project from state \n    const tmp = [..._projects];\n    tmp.splice(id, 1);\n    updateProjects(tmp);\n    //Convert to ids and update profile\n    const tmpIds = [];\n    for(let i = 0; i < _projects.length; i++){ \n      tmpIds.push(_projects[i].id); \n    } \n    updateProfile({ ..._profile, projects: tmpIds });\n  };\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header>\n        <Modal.Title>Edit Profile</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form.Group controlId=\"logo\">\n          <Form.Label>Logo</Form.Label>\n          <br />\n          <input className=\"mb-3\" type=\"file\" name=\"logo\" onChange={onLogoUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteLogo}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveLogoHandler}> Save Logo </Button>\n          </Row>\n        </Form.Group>\n        <Form.Group controlId=\"resume\">\n          <Form.Label>Resume</Form.Label>\n          <br />\n          <input className=\"mb-3\"  type=\"file\" name=\"resume\" onChange={onResumeUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteResume}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveResumeHandler}> Save Resume </Button>\n          </Row>\n        </Form.Group>\n        <Form>\n          <Form.Group controlId=\"education\">\n            <Form.Label>Education</Form.Label>\n          </Form.Group>\n          {_education.map((education, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={education}\n                  onChange={onChangeEducationHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteEducationField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addEducationField}>Add Education</Button>\n          <Form.Group className=\"mt-3\" controlId=\"experience\">\n            <Form.Label>Experience</Form.Label>\n          </Form.Group>\n          {_experience.map((experience, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={experience}\n                  onChange={onChangeExperienceHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteExperienceField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addExperienceField}>Add Experience</Button>\n          <Form.Group className=\"mt-3\" controlId=\"projects\">\n            <Form.Label>Projects</Form.Label>\n          </Form.Group>\n          {_projects.map((projects, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control typeof=\"text\" value={projects.title} readOnly />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteProjectField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          {\"\\n\"}\n          {viewAddProject && (\n            <Projects\n              projects={_projects}\n              profile={_profile}\n              updateProfile={updateProfile}\n              updateProjects={updateProjects}\n              closeProjectField = {closeProjectField}\n            />\n          )}\n          {\"\\n\"}\n          {!viewAddProject && <Button onClick={addProjectField}>New Project</Button>}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>\n          Cancel\n        </Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>\n          Save changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getProfile, deleteProfile } from './profileSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteProfile({ profile, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n    // Wait until profile is updated before dismissing the component\n    dispatch(deleteProfile(profile.id))\n      .then(() => dispatch(getProfile()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Profile</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete your profile <b>{profile.email}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport ContentItem from \"../content/ContentItem\";\nimport EditProfile from \"./EditProfile\";\nimport DeleteProfile from \"./DeleteProfile\";\n\nexport default function ProfileItem({ profile, projects }) {\n  const user = useSelector((state) => state.user);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  //Fields for profile\n  const { logo, education, experience, resume } = profile;\n\n  //Uses google's embedded file viewer\n  const resumeUrl = \"//docs.google.com/gview?url=\" + resume + \"&embedded=true\";\n  //Checks which fields to render (not actually necessary)\n  const hasLogo = require(\"is-image\");\n  const hasResume = require(\"is-valid-http-url\");\n  const hasEducation = education.length > 0;\n  const hasExperience = experience.length > 0;\n  const hasProjects = projects.length > 0;\n\n  return (\n    <React.Fragment>\n\n      <EditProfile\n        profile={profile}\n        projects={projects}\n        show={showEdit}\n        closeHandler={handleEditClose}\n      />\n      <DeleteProfile\n        profile={profile}\n        show={showDelete}\n        closeHandler={handleDeleteClose}\n      />\n      <Container className=\"profile-user\">\n        <Row>\n          <Col>\n            <Image roundedCircle className=\"avatar\" src={user.avatar} />\n          </Col>\n          <Col>\n            {hasLogo && <Image roundedCircle className=\"logo\" src={logo} />}\n          </Col>\n        </Row>\n        <div className=\"line1\"></div>\n      </Container>\n      <Container className=\"profile-details\">\n        <div className=\"name\">\n          {user.firstName} {user.lastName}\n        </div>\n        <div className=\"email\">{user.email}</div>\n        <div className=\"line2\"></div>\n      </Container>\n      <Container className=\"profile-resume\">\n        <Row>\n          <h4 className=\"heading\">Resume</h4>\n          {hasResume && (\n            <iframe\n              title=\"resume\"\n              src={resumeUrl}\n              style={{ width: 400, height: 500 }}\n              frameBorder=\"0\"\n            ></iframe>\n          )}\n        </Row>\n      </Container>\n      <Container className=\"profile\">\n        <Row>\n        <Button\n        variant=\"link\"\n        className=\"profile-edit\"\n        onClick={() => setShowEdit(true)}\n      >\n        Edit\n      </Button>\n      <Button\n        variant=\"link\"\n        className=\"float-right text-danger\"\n        onClick={() => setShowDelete(true)}\n      >\n        Delete\n      </Button>\n        </Row>\n        <Container className=\"profile-education\">\n          <div className=\"box\"><h4 className=\"heading\">Education</h4></div>\n          {hasEducation && (\n            <div className=\"field\">\n              {education.map((education) => (\n                <div key={education}>{education}</div>\n              ))}\n            </div>\n          )}\n        </Container>\n\n        <Container className=\"profile-experience\">\n          <div className=\"box\"><h4 className=\" heading\">Experience</h4></div>\n          {hasExperience && (\n            <div className=\"field\">\n              {experience.map((experience) => (\n                <div key={experience}>{experience}</div>\n              ))}\n            </div>\n          )}\n        </Container>\n          <Container className=\"profile-project\">\n            <div className=\"box\"><h4 className =\"heading\">Projects</h4></div>\n              <p>{\"\\n\"}{\"\\n\"}</p>\n            {hasProjects && (\n              <div className=\"card-projects\">\n                {projects.map((projects) => (\n                  <ContentItem content={projects} />\n                ))}\n              </div>\n            )}\n            </Container>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getProfile } from '../profile/profileSlice';\nimport Row from 'react-bootstrap/Row';\nimport Skeleton from 'react-loading-skeleton';\n\nimport ProfileItem from '../profile/ProfileItem';\n\n// Contains the user's profile\nexport default function Profile() {\n\n  const dispatch = useDispatch();\n  //Getting the user and profile details \n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n  const content = useSelector(state => state.content); \n  const isLoaded = useSelector(state => state.profile.isLoaded);\n\n  // Reloading profile\n  useEffect(() => {\n\n    async function fetch() { dispatch(getProfile(user.profile)) }\n\n    // Skip loading if already in state\n    if (user.profile && user.profile !== profile.id) fetch();\n  }, [dispatch, user, profile]);\n\n  //Alternative solution from making a list of API calls \n  //For each project in the profile, searchs through the content list for a matching id \n  //Adds to array if project is found (otherwise currently does nothing)\n  const getProjects = () => {  \n    const projects = []; \n    if(isLoaded){\n      const contentLength = content.length; \n      const projectLength = profile.projects.length; \n      for(let i = 0; i < projectLength; i++){ \n        const id = profile.projects[i]\n        for(let j = 0; j < contentLength; j++){ \n          if(id === content[j].id){ \n            projects.push(content[j]); \n            break; \n          }\n        }\n      }\n    }\n    return projects; \n  }\n\n  //Calls the getProjects function to get a list of projects \n  const projectList = getProjects(); \n\n  //Will only load the profile if its completely loaded \n  return(\n    <div>\n      <div>\n      <Row>\n        <div className =\"pageheading-rectangle1\" ><h1 className=\"pageheading-heading\">Your Profile</h1></div>        <div className = \"pageheading-rectangleMash\"></div>\n        <div className = \"pageheading-decoration1\"/>\n        <div className = \"pageheading-decoration2\"/>\n      </Row>\n      </div>\n      <Row>\n      <div className = \"mt-2\">\n      {isLoaded ? <ProfileItem profile = {profile} projects ={projectList} />: <><h1><Skeleton/></h1><p><Skeleton count={3}/></p></>}\n      </div>\n      </Row>\n    </div>\n  );\n}\n ","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n//rich text editor\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { createContent, getContent } from \"../content/contentSlice\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { FormRadio, Modal, ModalBody } from 'shards-react';\nimport HashLoader from 'react-spinners/HashLoader';\n\nexport default function AddContent() {\n\n  const dispatch = useDispatch();\n\n  const uploading = useSelector(state => state.app.loading.createContent);\n\n  const [content, updateContent] = useState({});\n  const [richText, updateRichText] = useState(\"\");\n  const [file, updateFile] = useState();\n  const [contentIsFile, setContentIsFile] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const onSubmitHandler = (e) => {\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    //convert to FormData so we can send files\n    const data = new FormData();\n    for (let field in content) {\n      data.set(field, content[field]);\n    }\n    if (contentIsFile && file) {\n      data.set(\"file\", file);\n    } else if (!contentIsFile) {\n      data.set(\"content\", richText);\n    }\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createContent(data))\n      .then(() => {\n        resetForm();\n        toggleConfirmation();\n        dispatch(getContent());\n      });\n  }\n\n  const toggleContentType = () => setContentIsFile(!contentIsFile);\n\n  const onChangeHandler = (e) => updateContent({ ...content, [e.target.id]: e.target.value });\n\n  const resetForm = () => {\n    updateContent({ title: '', description: '' });\n    updateRichText('');\n  }\n\n  const onContentChangeHandler = (e) => updateRichText(e);\n\n  const onFileChosenHandler = (e) => updateFile(e.target.files[0]);\n\n  const toggleConfirmation = () => setShowConfirmation(!showConfirmation);\n\n  const enabledTools = [\n    [{ header: [1, 2, false] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\"],\n    [\"clean\"],\n  ];\n\n  return (\n    <>\n      <Modal open={showConfirmation} toggle={toggleConfirmation} size=\"sm\">\n        <ModalBody className=\"addcontent-confirmation-modal\">\n          <div className=\"addcontent-confirmation-modal\">\n            Success!\n            <Link className=\"addcontent-next-btn\" to=\"/dashboard/content\"><strong>See content</strong> →</Link>\n          </div>\n        </ModalBody>\n      </Modal>\n      <div className=\"pageheading-rectangle1\">\n        <h1 className=\"pageheading-heading\">Add Content</h1>\n        <div className=\"pageheading-decoration1\" />\n        <div className=\"pageheading-decoration2\" />\n      </div>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <div className=\"addcontent\">\n          <div className=\"title\">\n            <div className=\"title-box\">\n              <div className=\"title-heading\">Title</div>\n            </div>\n            <Form.Group controlId=\"title\">\n              <Form.Control\n                className=\"title-input\"\n                type=\"text\"\n                value={content.title}\n                onChange={onChangeHandler}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"description\">\n            <div className=\"description-box\">\n              <div className=\"description-heading\">Description</div>\n            </div>\n            <Form.Group controlId=\"description\">\n              <Form.Control\n                as=\"textarea\"\n                rows=\"5\"\n                value={content.description}\n                onChange={onChangeHandler}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"content\">\n            <FormRadio\n              inline\n              name=\"contenttype\"\n              checked={!contentIsFile}\n              onChange={toggleContentType}\n            >\n              Text\n            </FormRadio>\n            <FormRadio\n              inline\n              name=\"contenttype\"\n              checked={contentIsFile}\n              onChange={toggleContentType}\n            >\n              File\n            </FormRadio>\n            <Row>\n            <div>{\"\\n\"}{\"\\n\"}</div>\n            </Row>\n            <div className=\"content\">\n            <div className=\"content-box\">\n              <div className=\"content-heading\">Content</div>\n            </div>\n            {!contentIsFile ? (\n              <Form.Group controlId=\"content\">\n                <ReactQuill\n                  modules={{ toolbar: enabledTools }}\n                  theme=\"snow\"\n                  value={richText}\n                  onChange={onContentChangeHandler}\n                />\n              </Form.Group>\n            ) : (\n              <Form.Group controlId=\"file\">\n                <Form.Label>File</Form.Label>\n                <br />\n                <input type=\"file\" name=\"file\" onChange={onFileChosenHandler} />\n              </Form.Group>\n            )}\n          </div>\n          </div>\n          <Button type=\"submit\" variant=\"info\">\n            {uploading\n              ? <>Uploading <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={uploading}/></span></>\n              : 'Create'}\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function ProfileBarLink({\n  label,\n  icon,\n  iconSize,\n  active\n }) {\n\n  return(\n    <Nav.Link className={`profilebarlink${active ? ' profilebarlink-active' : ''}`}>\n      {icon &&\n        <FontAwesomeIcon\n          className={`profilebarlink-icon${active ? ' profilebarlink-icon-active' : ''}`}\n          icon={icon}\n          size={iconSize ? iconSize : \"lg\"}\n        />}\n          {label}\n    </Nav.Link>\n  );\n}\n","import React from 'react';\n\nexport default function LinkedUL({ values }) {\n  return(\n    <ul className=\"linkedul-list\">\n      {values.map((value, index) => \n        <li className=\"linkedul-li\" key={index}>\n          <span className=\"linkedul-li-bullet\"></span>\n          <div className=\"linkedul-li-content\">{value}</div>\n        </li>)}\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { faGraduationCap, faBriefcase, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport ProfileBarLink from './ProfileBarLink';\nimport LinkedUL from './LinkedUL';\n\nexport default function ProfileBar({\n  user,\n  profile,\n  condensed,\n  condensedTitle,\n  clickHandler,\n  section\n}) {\n\n  const [activeSection, setActiveSection] = useState('showcase');\n\n  useEffect(() => {\n    if (section !== activeSection) setActiveSection(section);\n  },[section, activeSection, setActiveSection]);\n\n  return(\n    <div className={`profilebar${condensed ? ' profilebar-condensed' : ''}`}>\n      <div className=\"profilebar-logo\">\n        <img src={profile.logo} alt=\"Logo\"/>\n      </div>\n      <div className=\"profilebar-content\">\n        <div className=\"profilebar-title\">\n          <span className=\"separator\">/</span><strong>{condensedTitle}</strong>\n        </div>\n        <div className=\"profilebar-name\" onClick={() => clickHandler('share-showcase')}>\n          {user.firstName} {user.lastName}\n        </div>\n        {profile.bio &&\n          <div className=\"profilebar-headline\">\n            {profile.bio}\n          </div>}\n        <div className=\"profilebar-item\" onClick={() => clickHandler('share-education')}>\n            <ProfileBarLink label=\"Education\" icon={faGraduationCap} active={activeSection === 'education'}/>\n          <LinkedUL values={profile.education}/>\n        </div>\n        <div className=\"profilebar-item\" onClick={() => clickHandler('share-experience')}>\n            <ProfileBarLink label=\"Experience\" icon={faBriefcase} iconSize=\"sm\" active={activeSection === 'experience'}/>\n          <LinkedUL values={profile.experience}/>\n        </div>\n        <div className=\"profilebar-item\" onClick={() => clickHandler('share-projects')}>\n          <ProfileBarLink label=\"Projects\" icon={faEdit} iconSize=\"sm\" active={activeSection === 'projects'}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { parseDate } from '../../common/helpers';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ShareContentItem({ content, clickHandler, closeHandler }) {\n\n  const { id, title, description, displayDate } = content;\n  const [focused, setFocus] = useState(false);\n  const date = parseDate(displayDate);\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  const contentClickHandler = () => {\n    if (!focused) {\n      clickHandler(content);\n      setFocus(true);\n    }\n  }\n\n  const closeClickHandler = e => {\n    closeHandler(e);\n    setFocus(false);\n  }\n\n  return(\n    <Container\n      id={id}\n      className={`sharecontentitem sharecontentitem-container${focused ? '-focused' : ''}`}\n      key={id}\n      onClick={contentClickHandler}\n    >\n      <div className=\"sharecontentitem sharecontentitem-card\">\n        <Row className=\"sharecontentitem sharecontentitem-head\">\n          <Col xs={11}>\n            <Row className=\"sharecontentitem sharecontentitem-title\">{title}</Row>\n            <Row className=\"sharecontentitem sharecontentitem-date\">{date}</Row>\n          </Col>\n          {focused &&\n            <Col>\n              <Row className=\"sharecontentitem sharecontentitem-menu\" onClick={closeClickHandler}>\n                <strong>goodbye</strong>\n              </Row>\n            </Col>}\n        </Row>\n        <Row className=\"sharecontentitem sharecontentitem-body\">\n          {image &&\n            <Col className=\"sharecontentitem sharecontentitem-image-container\" md={3}>\n              <Row className=\"sharecontentitem sharecontentitem-image-container\">\n                <img className=\"sharecontentitem sharecontentitem-image\" src={content.content} alt={title}></img>\n              </Row>\n            </Col>}\n          <Col>\n            <Row>\n              <p className=\"sharecontentitem sharecontentitem-description\">{description}</p>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\n\nimport Row from 'react-bootstrap/Row';\n\nexport default function Section({ children, name, scrollHandler, className }) {\n\n  const { ref, inView } = useInView();\n  const [isInView, setInView] = useState(inView);\n\n  // Send name variable back when this section comes into view\n  useEffect(() => {\n    if (inView !== isInView) {\n      scrollHandler(name, inView);\n      setInView(inView);\n    }\n  },[inView, setInView, isInView, name, scrollHandler]);\n\n  return(\n    <Row ref={ref} className={`${className} share-section`}>\n      {children}\n    </Row>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ViewPort, LeftResizable, Fill, Right, Info } from 'react-spaces';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport ProfileBar from './ProfileBar';\n//import Showcase from './Showcase';\nimport ShareContentItem from './ShareContentItem'; // Component probably needs to be edited to suit share view\nimport Section from './Section';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { getShareId } from '../../common/helpers';\n\nimport { getSharepage } from '../share/shareSlice';\n\nexport default function Share() {\n\n  const dispatch = useDispatch();\n  const shareid = getShareId(window.location.href);\n  const gettingSharepage = useSelector(state => state.app.loading.getSharepage);\n\n  // Reloading content\n  useEffect(() => {\n      async function fetch() { dispatch(getSharepage(shareid)) };\n      fetch();\n  }, [dispatch, shareid]);\n\n  const share = useSelector(state => state.share);\n\n  const [profilebarState, setProfilebarState] = useState({ collapsed: false, title: 'showcase' });\n  const [profilebarWidth, setProfilebarWidth] = useState(300);\n  const [focusedContent, setFocusedContent] = useState({});\n  const [focusedContentWidth, setFocusedContentWidth] = useState(0);\n  const [inFocusedState, setFocusedState] = useState(false);\n  const [viewSection, setViewSection] = useState('showcase');\n  const [viewStates, setViewStates] = useState({\n    showcase: true,\n    education: false,\n    experience: false,\n    projects: false\n  });\n\n\n\n  // Showcase Simulator®\n  /**\n  const randInt = x => Math.floor(Math.random() * x);\n  const showcase = [\n    share.content[randInt(share.content.length)],\n    share.content[randInt(share.content.length)],\n    share.content[randInt(share.content.length)],\n    share.content[randInt(share.content.length)]\n  ];\n  **/\n  \n  // Handler for changing sidebar type when its width is adjusted\n  const handleInfo = info => {\n\n    if (info.width <= 150 && !profilebarState.collapsed) setProfilebarState({ ...profilebarState, collapsed: true });\n    else if (info.width > 150 && profilebarState.collapsed) setProfilebarState({ ...profilebarState, collapsed: false });\n\n    // Fix scroll position if focused on a content item\n    if (inFocusedState) scrollToContentItem(focusedContent.id);\n  }\n\n  // Handler for scrolling to a section by clicking in the sidebar\n  const scrollToSection = section => document.getElementsByClassName(section)[0].scrollIntoView({ behavior: 'smooth' });\n  const scrollToContentItem = id => document.getElementById(id).scrollIntoView({ behavior: 'smooth' });\n\n\n  // Set sidebar styles depending on what section user has scrolled to\n  const sectionScrollHandler = (section, inView) => {\n\n    const _viewStates = { ...viewStates, [section]: inView };\n\n    setViewStates(_viewStates);\n\n    // Filter sections by order of when they appear\n    const isActive = () => {\n      if (_viewStates.showcase) return 'showcase';\n      if (_viewStates.education) return 'education';\n      if (_viewStates.experience) return 'experience';\n      if (_viewStates.projects) return 'projects';\n    }\n\n    setViewSection(isActive());\n\n    // Set section name if sidebar is collapsed\n    if (profilebarState.collapsed) setProfilebarState({ ...profilebarState, title: isActive() });\n  }\n\n  // Expand content item\n  const handleContentItemClick = _content => {\n    console.log(_content.title);\n    setProfilebarWidth(70);\n    setProfilebarState({ collapsed: true, title: _content.title });\n    setFocusedContentWidth(\"50%\");\n    setFocusedContent(_content);\n    setFocusedState(true);\n\n    // Wait for everything to finish re-sizing, then move it into view\n    setTimeout(() => scrollToContentItem(_content.id), 800);\n  }\n\n  // Close expanded content item\n  const handleContentItemClose = e => {\n\n    e.stopPropagation();\n\n    console.log('close');\n    setProfilebarWidth(300);\n    setProfilebarState({ collapsed: false, title: viewSection });\n    setFocusedContent({});\n    setFocusedContentWidth(0);\n    setFocusedState(false);\n  }\n\n  return(\n    <>\n      <ViewPort className=\"share\">\n        <LeftResizable className=\"share-profilebar\" size={profilebarWidth} maximumSize={350} minimumSize={60} trackSize={true}>\n          <Info>{handleInfo}</Info>\n          <ProfileBar\n            user={{\"firstName\": share.firstName, \"lastName\": share.lastName}}\n            profile={{ ...{ \"logo\": share.logo, \"education\": share.education, \"experience\": share.experience }, bio: \"Yolo's TSLA calls full time\" }}\n            condensed={profilebarState.collapsed}\n            condensedTitle={profilebarState.title}\n            clickHandler={scrollToSection}\n            section={viewSection}\n          />\n        </LeftResizable>\n        <Fill className=\"share-main\" scrollable={!inFocusedState}>\n            <Section name=\"showcase\" className=\"share-showcase\" scrollHandler={sectionScrollHandler}>\n                  <Col>\n                    <Row>\n                      <h1>Showcase</h1>\n                    </Row>\n                    <Row>\n                        {gettingSharepage\n                            ? <><h1><Skeleton/></h1><p><Skeleton count={1}/></p></>\n                            : <></>//<><Showcase items={showcase}/></>\n                        }\n                    </Row>\n                  </Col>\n                </Section>\n            <Section name=\"education\" className=\"share-education\" scrollHandler={sectionScrollHandler}>\n              <Col>\n                <Row>\n                  <h1>Education</h1>\n                </Row>\n                <Row>\n                  <Card>\n                  {gettingSharepage\n                    ? <><h1><Skeleton/></h1><p><Skeleton count={2}/></p></>\n                    : share.education.map((educationItem, index) =>\n                      <div key={index}>\n                        <h3>{educationItem}</h3>\n                        <p>Description of lessons learned.</p>\n                        <p><strong>Awards and achievements</strong> Best</p>\n                        <p><strong>Extracurricular</strong> Longjump</p>\n                      </div>)\n                  }\n                  </Card>\n                </Row>\n              </Col>\n            </Section>\n            <Section name=\"experience\" className=\"share-experience\" scrollHandler={sectionScrollHandler}>\n              <Col>\n                <Row>\n                  <h1>Experience</h1>\n                </Row>\n                <Row>\n                  <Card>\n                  {gettingSharepage\n                    ? <><h1><Skeleton/></h1><p><Skeleton count={2}/></p></>\n                    : share.experience.map((experienceItem, index) =>\n                      <div key={index}>\n                        <h3>{experienceItem}</h3>\n                        <p>Description of experience.</p>\n                        <p><strong>Responsibilities</strong> Smart</p>\n                        <p><strong>Achievements</strong> Longjump</p>\n                      </div>)\n                  }\n                  </Card>\n                </Row>\n              </Col>\n            </Section>\n            <Section name=\"projects\" className=\"share-projects\" scrollHandler={sectionScrollHandler}>\n              <Col>\n                <Row>\n                  <h1>Projects</h1>\n                </Row>\n                {gettingSharepage\n                  ? <><h1><Skeleton/></h1><p><Skeleton count={3}/></p></>\n                  : share.content.map((contentItem, index) =>\n                    <ShareContentItem\n                      content={contentItem}\n                      key={index}\n                      clickHandler={handleContentItemClick}\n                      closeHandler={handleContentItemClose}\n                    />)\n                }\n              </Col>\n            </Section>\n        </Fill>\n        <Right className=\"share-focusedcontent\" size={focusedContentWidth} scrollable={true}>\n          {focusedContent.title && <p>{focusedContent.content}</p>}\n        </Right>\n      </ViewPort>\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Nav from 'react-bootstrap/Nav';\nimport NavLink from '../layout/NavLink';\n\nexport default function Share() {\n\n  const user = useSelector(state => state.user);\n\n  return(\n      <>\n        <br/>\n        <Nav className=\"flex-column\">\n        <h1> Sharepages: </h1>\n          <>\n          {user.sharePages.map((sharepage, index) => (\n            <>\n            <hr/>\n            <Nav.Item>\n                <NavLink to={`/share/${sharepage}`} activeOnlyWhenExact={true} label={<>\n                    <h4 style={{ textDecorationLine: 'underline' }}> {sharepage} </h4>\n                </>}/>\n            </Nav.Item>\n            </>\n          ))}\n        </>\n        </Nav>\n      </>\n  );\n}\n","import React from 'react';\n\nimport Landing from '../features/pages/Landing';\nimport Login from '../features/user/Login';\nimport Register from '../features/user/Register';\nimport Homepage from '../features/pages/Homepage';\nimport Dashboard from '../features/dashboard/Dashboard';\nimport Feed from '../features/dashboard/Feed';\nimport Profile from '../features/profile/Profile';\nimport AddContent from '../features/content/AddContent';\nimport Share from '../features/share/Share';\nimport ShareList from '../features/share/ShareList';\n\nexport const publicRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    page: <Landing/>,\n    landing: <Login/>\n  },\n  {\n    path: \"/register\",\n    exact: true,\n    page: <Landing/>,\n    landing: <Register/>\n  },\n  {\n    path: \"/share\",\n    exact: false,\n    page: <Share/>\n  }\n];\n\nexport const privateRoutes = [\n  {\n    path: \"/homepage\",\n    exact: true,\n    page: <Homepage/>\n  },\n  {\n    path: \"/dashboard\",\n    exact: false,\n    page: <Dashboard/>\n  },\n  {\n    path: \"/dashboard/content\",\n    exact: true,\n    dashboard: <Feed/>\n  },\n  {\n    path: \"/dashboard/content/add\",\n    exact: true,\n    dashboard: <AddContent/>\n  },\n  {\n    path: \"/dashboard/profile\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <Profile/>\n  },\n  {\n    path: \"/dashboard/sharepages\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <ShareList/>\n  }\n];\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport { authenticate } from '../features/user/userSlice';\nimport { getProfile } from '../features/profile/profileSlice';\nimport { getContent } from '../features/content/contentSlice';\nimport { token } from '../common/api';\nimport { publicRoutes, privateRoutes } from '../common/routes';\n\nimport '../sass/main.scss';\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const authenticated = useSelector(state => state.user.isAuthenticated);\n\n  useEffect(() => {\n    async function fetch() {\n\n      if (token.get() !== null) {\n        dispatch(authenticate())\n          .then(() => dispatch(getProfile()))\n          .then(() => dispatch(getContent()))\n      }\n    }\n    fetch();\n  });\n\n  return(\n    <Router>\n      <Switch>\n        {publicRoutes.map((route, index) =>\n          <Route\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            children={route.page}\n          />\n        )}\n        {privateRoutes.map((route, index) =>\n          <PrivateRoute\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            test={authenticated}\n            fallback=\"/\"\n            children={route.page}\n          />\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nconst PrivateRoute = ({ _props, children, test, fallback }) => {\n  return(\n    <Route {..._props} render={() =>\n      test ? children : <Redirect to={{ pathname: fallback }}/>\n    }/>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './app/store';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}