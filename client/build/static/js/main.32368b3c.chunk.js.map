{"version":3,"sources":["serviceWorker.js","app/appSlice.js","common/api.js","features/content/contentSlice.js","features/user/userSlice.js","features/profile/profileSlice.js","app/reducers.js","app/store.js","features/pages/Landing.js","features/user/Login.js","features/user/Register.js","features/layout/TopNavbar.js","features/layout/NavLink.js","features/pages/Homepage.js","features/layout/SideNavbar.js","features/user/EditUser.js","features/dashboard/Dashboard.js","features/content/Tag.js","features/content/EditContent.js","features/content/DeleteContent.js","features/content/ContentItemMenu.js","common/helpers.js","features/content/ContentItem.js","features/dashboard/Feed.js","features/profile/Projects.js","features/profile/EditProfile.js","features/profile/DeleteProfile.js","features/profile/ProfileItem.js","features/profile/Profile.js","features/content/AddContent.js","features/share/Share.js","common/routes.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","app","createSlice","name","initialState","errors","loading","reduers","extraReducers","state","startLoading","stopLoading","action","setError","payload","removeError","error","console","axios","defaults","baseURL","token","localStorage","getItem","_token","setItem","removeItem","authenticateCredentials","user","a","post","registerUser","authenticateToken","get","getAllContent","createContent","content","editContent","id","put","deleteContent","delete","createProfile","profile","editProfile","deleteProfile","getProfile","addLogo","logo","addResume","resume","updateUser","userParams","getContent","createAsyncThunk","apiCreateContent","apiEditContent","apiDeleteContent","reducers","fulfilled","_","data","login","authenticate","editUser","register","isAuthenticated","setUser","logout","rejected","actions","apiCreateProfile","apiGetProfile","apiEditProfile","apiDeleteProfile","apiAddLogo","apiAddResume","isLoaded","education","experience","projects","combineReducers","appReducer","profileReducer","contentReducer","userReducer","middleware","thunk","next","headers","common","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Landing","routes","publicRoutes","filter","route","landing","Container","fluid","Row","className","Col","src","alt","map","index","key","path","exact","children","Login","onLogin","dispatch","useDispatch","history","useHistory","loggingIn","useSelector","useState","email","password","form","updateForm","onChangeHandler","e","target","value","Form","onSubmit","preventDefault","then","push","Group","Control","type","placeholder","onChange","Button","variant","size","color","as","Link","to","Register","registering","password2","onSubmitHandler","username","onClickHandler","TopNavbar","Navbar","Nav","Item","onClick","NavLink","label","activeOnlyWhenExact","useRouteMatch","Homepage","useEffect","fetch","role","style","textDecorationLine","SideNavbar","EditUser","show","closeHandler","userFromState","_user","updateDetails","Fragment","Modal","onHide","Header","Title","Body","Image","avatar","roundedCircle","controlId","Label","rows","firstName","lastName","Footer","log","Dashboard","privateRoutes","dashboard","showUserEdit","setShowUserEdit","Tag","tag","colour","shape","EditContent","_content","updateContent","includes","_richText","updateRichText","_file","updateFile","showFile","setShowFile","title","description","files","modules","toolbar","theme","_data","FormData","field","set","DeleteContent","ContentItemMenu","showEdit","setShowEdit","showDelete","setShowDelete","Dropdown","alignRight","Toggle","FontAwesomeIcon","icon","faEllipsisV","Menu","isUrl","require","isImage","ContentItem","displayDate","tags","date","Intl","DateTimeFormat","day","month","year","format","Date","parse","parseDate","length","split","image","Card","xs","md","Feed","gettingContent","gettingUser","width","count","item","Project","updateProfile","updateProjects","i","EditProfile","_profile","_projects","_education","updateEducation","_experience","updateExperience","_logo","updateLogo","_resume","updateResume","viewAddProject","setView","onChangeEducationHandler","tmp","onChangeExperienceHandler","InputGroup","Append","splice","deleteEducationField","deleteExperienceField","typeof","readOnly","deleteProjectField","DeleteProfile","ProfileItem","resumeUrl","hasLogo","hasResume","hasEducation","hasExperience","hasProjects","ListGroup","height","frameBorder","Profile","projectList","contentLength","projectLength","j","getProjects","AddContent","richText","file","Share","project","expand","toggleExpand","getContentType","userContent","href","faFilePdf","faEnvelope","faArrowCircleUp","faArrowCircleDown","Collapse","in","dangerouslySetInnerHTML","__html","rel","page","App","authenticated","test","fallback","PrivateRoute","_props","render","pathname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.32368b3c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * Redux slice for state.app, responsible for 'loading' flags and error tracking.\n */\nconst app = createSlice({\n  name: 'app',\n  initialState: {\n    errors: {},\n    loading: {}\n  },\n  reduers: {},\n  extraReducers: {\n    'user/login/pending': state => { return startLoading(state, 'login') },\n    'user/login/fulfilled': state => { stopLoading(state, 'login') },\n    'user/login/rejected': (state, action) => { setError(state, 'login', action.payload) },\n\n    'user/authenticate/pending': state => { return startLoading(state, 'login') },\n    'user/authenticate/fulfilled': state => { stopLoading(state, 'login') },\n    'user/authenticate/rejected': (state, action) => { setError(state, 'login', action.payload) },\n\n    'user/update/pending': state => { return startLoading(state, 'update') },\n    'user/update/fulfilled': state => { stopLoading(state, 'update') },\n    'user/update/rejected': (state, action) => { setError(state, 'update', action.payload) },\n\n    'user/register/pending': state => { return startLoading(state, 'register') },\n    'user/register/fulfilled': state => { stopLoading(state, 'register') },\n    'user/register/rejected': (state, action) => { setError(state, 'register', action.payload) },\n\n    'content/getContent/pending': state => { return startLoading(state, 'getContent') },\n    'content/getContent/fulfilled': state => { stopLoading(state, 'getContent') },\n    'content/getContent/rejected': (state, action) => { setError(state, 'getContent', action.payload) },\n\n    'content/createContent/pending': state => { return startLoading(state, 'createContent')},\n    'content/createContent/fulfilled': state => { stopLoading(state, 'createContent') },\n    'content/createContent/rejected': (state, action) => { setError(state, 'createContent', action.payload) },\n\n    'content/editContent/pending': state => { return startLoading(state, 'editContent') },\n    'content/editContent/fulfilled': state => { stopLoading(state, 'editContent') },\n    'content/editContent/rejected': (state, action) => { setError(state, 'editContent', action.payload) },\n\n    'content/deleteContent/pending': state => { return startLoading(state, 'deleteContent') },\n    'content/deleteContent/fulfilled': state => { stopLoading(state, 'deleteContent') },\n    'content/deleteContent/rejected': (state, action) => { setError(state, 'deleteContent', action.payload) }\n  }\n});\n\n/**\n * Sets state.app.loading.action to true.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @return The modified state.\n */\nconst startLoading = (state, action) => {\n\n  removeError(state, action);\n\n  return {\n    ...state,\n    loading: {\n      ...state.loading,\n      [action]: true\n    }\n  }\n};\n\n/**\n * Removes state.app.loading.action from the state.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst stopLoading = (state, action) => delete state.loading[action];\n\n/**\n * Sets state.app.errors.action to the error string and outputs the error to the console.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @param {String} error - An associated error code or message.\n * @return The modified state.\n */\nconst setError = (state, action, error) => {\n\n  console.error(`${action}: ${error}`);\n\n  return {\n    ...state,\n    errors: {\n      ...state.errors,\n      [action]: error\n    }\n  }\n};\n\n/**\n * Removes state.app.errors.action from the state.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst removeError = (state, action) => delete state.errors[action];\n\nexport default app.reducer;\n","import axios from 'axios';\n\n// Intercept and mock all requests if run with with start:mockapi\nif (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API) {\n  require('../_mockapi/api');\n}\n\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\n\nexport const AUTH_USER = '/users/authenticate';\nexport const REGISTER_USER = '/users/register';\nexport const CURRENT_USER = '/users/current';\nexport const CONTENT = '/content/';\nexport const CREATE_CONTENT = '/content/create'; \nexport const CREATE_PROFILE = '/profile/create'; \nexport const PROFILE = '/profile/'; \nexport const ADD_LOGO = '/profile/addLogo/';\nexport const ADD_RESUME = '/profile/addResume/'; \nexport const UPDATE_USER = '/users/update';\n\nexport const token = {\n  get: () => localStorage.getItem('token'),\n  set: _token => localStorage.setItem('token', _token),\n  delete: () => localStorage.removeItem('token')\n}\n\n// Takes email and password as an object and returns the user's details and token\nexport const authenticateCredentials = async user => await axios.post(AUTH_USER, user);\n\n// Takes email and password as an object and returns the user's details and token\nexport const registerUser = async user => await axios.post(REGISTER_USER, user);\n\n// Uses locally-stored token and returns the user's details\nexport const authenticateToken = async () => await axios.get(CURRENT_USER);\n\n// Uses an existing token if user is logged in and returns all their content (as a list, not an object)\nexport const getAllContent = async () => await axios.get(CONTENT);\n\n//Gets one post from an id \n//const getSingleContent = async id => await axios.get(`${CONTENT}${id}`); \n\n// Takes a content object and authorises with existing token\nexport const createContent = async content => await axios.post(CREATE_CONTENT, content);\n\n// Takes a content object (that must include the id field) and authorises with existing token\nexport const editContent = async content => {\n\n  // Handle special case of FormData object being passed\n  let id;\n  try {\n    id = content.get('id');\n  } catch {\n    id = content.id;\n  }\n\n  await axios.put(`${CONTENT}${id}`, content);\n}\n\n// Takes just the content id (as a string) and authorises with existing token\nexport const deleteContent = async id => await axios.delete(`${CONTENT}${id}`);\n\n// Takes profile object and authorises with existing token \nexport const createProfile = async profile => await axios.post(CREATE_PROFILE, profile); \n\n// Takes a profile object (text only) and id and authorises with existing token\nexport const editProfile = async profile => await axios.put(`${PROFILE}${profile.id}`, profile); \n\n// Takes a profile id and authorises with existing token \nexport const deleteProfile = async id => await axios.delete(`${PROFILE}${id}`); \n\n// Takes a profile id and authorises with existing token, returns profile\nexport const getProfile = async id => await axios.get(`${PROFILE}${id}`); \n\n//Takes a profile id and authorises with existing token \nexport const addLogo = async (id, logo) => await axios.post(`${ADD_LOGO}${id}`, logo);  \n\nexport const addResume = async (id, resume) => await axios.post(`${ADD_RESUME}${id}`, resume);  \n\nexport const updateUser = async userParams => await axios.put(UPDATE_USER, userParams);\n\n\n","/*\n * The content 'slice' of the state. Centralises all content-related\n * functionality including API calls.\n */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  getAllContent,\n  createContent as apiCreateContent,\n  editContent as apiEditContent,\n  deleteContent as apiDeleteContent\n} from '../../common/api';\n\n// Async Thunks required whenever there's an API call\nexport const getContent = createAsyncThunk(\n  'content/getContent',\n  getAllContent\n);\n\nexport const createContent = createAsyncThunk(\n  'content/createContent',\n  apiCreateContent,\n\n);\n\nexport const editContent = createAsyncThunk(\n  'content/editContent',\n  apiEditContent\n);\n\nexport const deleteContent = createAsyncThunk(\n  'content/deleteContent',\n  apiDeleteContent\n);\n\nconst content = createSlice({\n  name: 'content',\n  initialState: [], // A list! Not an object, be careful. Caused me a few issues.\n  reducers: {},\n  extraReducers: {\n    'user/logout': () => { return [] }, // Trigger content to reset itself when user logs out\n    [getContent.fulfilled]: (_, action) => { return [...action.payload.data] }\n  }\n});\n\n// For importing to src/app/reducers.js\nexport default content.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  authenticateCredentials,\n  authenticateToken,\n  updateUser,\n  registerUser,\n  token\n} from '../../common/api';\n\nexport const login = createAsyncThunk(\n  'user/login',\n  authenticateCredentials\n);\n\nexport const authenticate = createAsyncThunk(\n  'user/authenticate',\n  authenticateToken\n);\n\nexport const editUser = createAsyncThunk(\n  'user/update',\n  updateUser\n);\n\nexport const register = createAsyncThunk(\n  'user/register',\n  registerUser\n);\n\nconst user = createSlice({\n  name: 'user',\n  initialState: { isAuthenticated: token.get() !== null },\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        token: token.get(),\n        isAuthenticated: true\n      }\n    },\n    logout: () => {\n      token.delete();\n      return { isAuthenticated: false }\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n\n      // Persist JWT to local storage\n      token.set(action.payload.data.token);\n\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    // [register.fulfilled]: (state, action) => {\n\n    //   // Persist JWT to local storage\n    //   localStorage.setItem('token', action.payload.data.token);\n\n    //   return {\n    //     ...state,\n    //     ...action.payload.data,\n    //     isAuthenticated: true\n    //   }\n    // },\n    [authenticate.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    [authenticate.rejected]: () => {\n      token.delete();\n      return { isAuthenticated: false } \n    }\n  }\n});\n\n// Explicitly export the non-async reducers\nexport const { logout, setUser } = user.actions;\n\nexport default user.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n    createProfile as apiCreateProfile,\n    getProfile as apiGetProfile,\n    editProfile as apiEditProfile,\n    deleteProfile as apiDeleteProfile,\n    addLogo as apiAddLogo, \n    addResume as apiAddResume\n} from '../../common/api';\n\n//API calls \nexport const createProfile = createAsyncThunk(\n    'profile/createProfile',\n    apiCreateProfile\n);\n\nexport const getProfile = createAsyncThunk(\n    'profile/getProfile',\n    apiGetProfile\n);\n\nexport const editProfile = createAsyncThunk(\n    'profile/updateProfile', \n    apiEditProfile\n); \n\nexport const deleteProfile = createAsyncThunk(\n    'profile/deleteProfile', \n    apiDeleteProfile\n);\n\nexport const addLogo = createAsyncThunk(\n    'profile/addLogo', \n    apiAddLogo\n);\n\nexport const addResume = createAsyncThunk(\n    'profile/addResume', \n    apiAddResume\n);\n\n//Stores profile in state.profile \nconst profile = createSlice({\n    name: 'profile',\n    //Added default arrays, as the state takes 2 seconds to actually get the data\n    initialState: {isLoaded: false, education:[], experience: [], projects: []},\n    reducers: {},\n    extraReducers: {\n        //Resets state on logout (think its necessary)\n        'user/logout': () => { return {}},\n        //Returns profile data \n        [getProfile.fulfilled]: (state, action) => {  \n            return {\n                ...state,\n                ...action.payload.data, \n                isLoaded: true \n            }\n        }\n    }\n  });\n\nexport default profile.reducer;\n","/*\n * Redux takes any reducers we add here and makes them\n * available app-wide.\n */\n\nimport { combineReducers } from 'redux';\nimport appReducer from './appSlice';\nimport contentReducer from '../features/content/contentSlice';\nimport userReducer from '../features/user/userSlice';\nimport profileReducer from '../features/profile/profileSlice';\n \nexport default combineReducers({\n  app: appReducer,\n  profile: profileReducer,\n  content: contentReducer,\n  user: userReducer\n});\n","/*\n * store.js\n * Boilerplate code. Redux store that controls application state.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\n\n//import auth from '../common/api';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Middleware to force authorisation header on every action\nconst auth = () => next => action => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n  return next(action);\n};\n\n// Any middleware included goes here\nconst middleware = [thunk, auth];\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\n// Add enhancers (if any)\nconst enhancers = [middlewareEnhancer];\n\n// Give access to Redux Devtools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { publicRoutes } from '../../common/routes';\n\n/* Added logo and removed the text display */\n\nexport function validate() {\n  let input = this.state.input;\n  let errors = {};\n  let isValid = true;\n\n  if (!input[\"name\"]) {\n    isValid = false;\n    errors[\"name\"] = \"Please enter your name.\";\n  }\n\n  if (!input[\"email\"]) {\n    isValid = false;\n    errors[\"email\"] = \"Please enter your email Address.\";\n  }\n\n  if (typeof input[\"email\"] !== \"undefined\") {\n      \n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    if (!pattern.test(input[\"email\"])) {\n      isValid = false;\n      errors[\"email\"] = \"Please enter valid email address.\";\n    }\n  }\n\n  if (!input[\"password\"]) {\n    isValid = false;\n    errors[\"password\"] = \"Please enter your password.\";\n  }\n\n  if (!input[\"confirm_password\"]) {\n    isValid = false;\n    errors[\"confirm_password\"] = \"Please re enter to confirm password.\";\n  }\n\n  if (typeof input[\"password\"] !== \"undefined\" && typeof input[\"confirm_password\"] !== \"undefined\") {\n      \n    if (input[\"password\"] !== input[\"confirm_password\"]) {\n      isValid = false;\n      errors[\"password\"] = \"Passwords don't match.\";\n    }\n  } \n\n  this.setState({\n    errors: errors\n  });\n\n  return isValid;\n}\n\nexport default function Landing() {\n\n  // Get routes that Landing can handle\n  const routes = publicRoutes.filter(route => route.landing !== null);\n \n  return(\n    <Container fluid>\n      <Row className=\"no-gutter\">\n        <Col className=\"bg-info d-flex justify-content-center\">\n          <div className=\"splash-container\">\n            <h1 className=\"display-3 text-white\"><img src=\"/images/Portfolio.png\" alt=\"\"/></h1>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"splash-container\">\n            <Switch>\n              {routes.map((route, index) =>\n                  <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    children={route.landing}\n                  />\n                )}\n            </Switch>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { login } from './userSlice';\n\nexport default function Login({ onLogin }) {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const [form, updateForm] = useState({ email: '', password: '' });\n\n  const onSubmitHandler = e => {\n\n    e.preventDefault();\n\n    dispatch(login(form))\n      .then(() => history.push('/homepage'));\n  }\n\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n\n  return(\n    <div className=\"form-box\">\n      <Form className=\"login-form\" onSubmit={onSubmitHandler}>\n        <h2>Login</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"email\" \n            id=\"email\"\n            placeholder=\"Email Address\" \n            value={form.email}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"  \n            id=\"password\" \n            placeholder=\"Password\" \n            value={form.password}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Button className=\"btn-login\" type=\"submit\" variant=\"primary\">\n          {loggingIn\n            ? <>Logging in <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={loggingIn}/></span></>\n            : \"Log in\"}\n        </Button>\n        <div className=\"text-center\"> Don't have an account? <Button as={Link} to=\"/register\" variant=\"link\">Register</Button></div>\n      </Form>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { register, login } from './userSlice';\n\nexport default function Register() {\n  \n  const dispatch = useDispatch();\n  const history = useHistory();\n  const registering = useSelector(state => state.app.loading.register);\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const [form, updateForm] = useState({ name: '', email: '', password: '', password2: ''});\n  \n  const onSubmitHandler = e => {\n    \n    e.preventDefault();\n    \n    dispatch(register(form))\n      .then(() => dispatch(login(form)))\n      .then(() => history.push('/homepage'));\n  }\n  \n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n  \n  return(\n    <div className=\"form-box\">\n      <Form className=\"signup-form\" onSubmit={onSubmitHandler}>\n        <h2>Register</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"text\" \n            id=\"username\"\n            placeholder=\"Username\" \n            value={form.username}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"email\" \n          id=\"email\"\n          placeholder=\"Email Address\" \n          value={form.email}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"password\"  \n          id=\"password\" \n          placeholder=\"Password\" \n          value={form.password}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"password\"  \n          id=\"password2\" \n          placeholder=\"Confirm Password\" \n          value={form.password2}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" onClickHandler={onSubmitHandler} variant=\"primary\">\n          {registering || loggingIn\n              ? <>Signing you up <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={registering}/></span></>\n              : \"Sign up\"}\n        </Button>\n        <div className=\"text-center\"> Already have an account?<Button as={Link} to=\"/\" variant=\"link\">Login here</Button></div>\n      </Form>\n    </div>\n  );\n}\n  ","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../user/userSlice';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function TopNavbar() {\n\n  const dispatch = useDispatch();\n\n  return(\n    <Navbar variant=\"dark\" className=\"fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <Nav.Link as={Link} to=\"/dashboard\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Dashboard</Nav.Link>\n      <Nav className=\"px-3\">\n        <Nav.Item className=\"text-nowrap\">\n          <Nav.Link as={Link} to=\"/\" onClick={() => dispatch(logout())}>Sign out</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function NavLink({ label, to, activeOnlyWhenExact }) {\n\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n\n  return(\n    <Nav.Link\n      as={Link}\n      to={to}\n      className={match ? \"active\" : \"\"}>\n        {label}\n    </Nav.Link>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Row from 'react-bootstrap/Row';\nimport TopNavbar from '../layout/TopNavbar';\n\nimport Nav from 'react-bootstrap/Nav';\nimport NavLink from '../layout/NavLink';\n\nimport { getProfile } from '../profile/profileSlice';\n\nexport default function Homepage() {\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n\n    async function fetch() {\n      dispatch(getProfile(user.profile));\n    }\n    fetch();\n  });\n\n  return(\n    <>\n      <TopNavbar/>\n      <br/>\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n      <Nav className=\"flex-column\">\n        <h1> Homepage </h1>\n        <hr/>\n        <Nav.Item>\n          <NavLink to=\"/dashboard\" activeOnlyWhenExact={true} label={<>\n            <Row> <h4 style={{ textDecorationLine: 'underline' }}> Dashboard </h4> </Row>\n            <Row> <h6> View and edit the content in your portfolio </h6> </Row>\n          </>}/>\n        </Nav.Item>\n        <hr/>\n        <Nav.Item>\n          <NavLink to=\"/profile\" label={<>\n            <Row> <h4 style={{ textDecorationLine: 'underline' }}> Profile </h4> </Row>\n            <Row> <h6> View and edit your profile </h6> </Row>\n          </>}/>\n        </Nav.Item>\n        <hr/>\n        <Nav.Item>\n          <NavLink to=\"/add\" label={<>\n            <Row> <h4 style={{ textDecorationLine: 'underline' }}> Add Content </h4> </Row>\n            <Row> <h6> Create a new post for your portfolio </h6> </Row>\n          </>}/>\n        </Nav.Item>\n        <hr/>\n        <Nav.Item>\n          <NavLink to=\"/share\" label={<>\n            <Row> <h4 style={{ textDecorationLine: 'underline' }}> Share View </h4> </Row>\n            <Row> <h6> See your shared content </h6> </Row>\n          </>}/>\n        </Nav.Item>\n      </Nav>\n      </main>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport NavLink from './NavLink';\n\nexport default function SideNavbar() {\n  return(\n    <Nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div className=\"sidebar-sticky\">\n        <Nav className=\"flex-column\">\n          <Nav.Item>\n            <NavLink to=\"/homepage\" label=\"Homepage\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/dashboard\" activeOnlyWhenExact={true} label=\"Dashboard\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/profile\" label=\"Profile\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/add\" label=\"Add Content\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/share\" label=\"Share View\"/>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </Nav>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {editUser} from './userSlice';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport Image from 'react-bootstrap/Image';\n\nexport default function EditUser({show, closeHandler, user}) {\n    //const user = useSelector(state => state.user);\n\n    const userFromState = useSelector(state => state.user);\n\n\n    //Initialised with the user fields.\n\n    const [_user, updateDetails] = useState(user);\n    const dispatch = useDispatch();\n\n    //submits the new user details to the server to update in the database\n    const handleEditUser = () => {\n        dispatch(editUser(_user))\n        .then(closeHandler);\n    };\n\n    //source of truth for the user details, updated alongside the form when editing\n    const onChangeHandler = e => updateDetails({ ..._user, [e.target.id]: e.target.value});\n\n    const resetHandler = () => {\n      //\n      updateDetails(userFromState);\n      console.log(_user);\n      console.log(userFromState);\n    }\n    \n    //<img src=\"...\" class=\"rounded mx-auto d-block\" alt=\"...\">\n\n    return (\n    <React.Fragment>\n        <Modal show = {show} onHide = {closeHandler}>\n        <Modal.Header><Modal.Title>Edit User Details</Modal.Title></Modal.Header>\n        <Modal.Body>\n        <Image src = {userFromState.avatar} alt = \"Hello Darkness\" roundedCircle className = \"rounded mx-auto d-block\"/>\n        <Form>\n        <Form.Group controlId = \"username\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control as=\"textarea\" rows = \"1\" value = {_user.username} onChange = {onChangeHandler}/>\n        </Form.Group>\n          <Form.Group controlId=\"firstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.firstName} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"lastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.lastName} onChange={onChangeHandler}/>\n          </Form.Group>\n        </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"link\" onClick = {resetHandler}>Reset Changes</Button>\n            <Button variant=\"warning\" onClick = {handleEditUser}>Save changes</Button>\n            <Button variant=\"link\" onClick={closeHandler}>Cancel</Button>\n        </Modal.Footer>\n        </Modal>\n        \n    </React.Fragment>\n    );\n}\n\n/* <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n            Edit\n        </Button>\n        <Image src = {user.avatar} alt = \"Hello Darkness\"/>\n        <h1 className=\"h2 ml-5 mt-5\">Username: {user.username}</h1> \n        <h1 className=\"h2 ml-5 mt-5\">First Name: {user.firstName}</h1>\n        <h1 className=\"h2 ml-5 mt-5\">Last Name: {user.lastName}</h1> */","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\n\nimport TopNavbar from '../layout/TopNavbar';\nimport SideNavBar from '../layout/SideNavbar';\nimport EditUser from '../user/EditUser';\n\nimport { getProfile } from '../profile/profileSlice';\nimport { privateRoutes } from '../../common/routes';\n\nexport default function Dashboard() {\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const routes = privateRoutes.filter(route => route.dashboard !== null);\n  const [showUserEdit, setShowUserEdit] = useState(false);\n\n  useEffect(() => {\n\n    async function fetch() {\n      dispatch(getProfile(user.profile));\n    }\n    fetch();\n  });\n\n  const handleEditClose = () => setShowUserEdit(false);\n\n  return(\n    <>\n      <TopNavbar/>\n      <Container fluid>\n        <Row>\n          <SideNavBar/>\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n            <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n              User Details\n            </Button>\n            <Switch>\n              {routes.map((route, index) =>\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={route.dashboard}\n                />\n              )}\n            </Switch>\n          </main>\n        </Row>\n        <EditUser show = {showUserEdit} closeHandler = {handleEditClose} user = {user} />\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default function Tag({ tag, colour, shape }) {\n\n  const clickHandler = () => console.log(`'${tag}' tag clicked.`);\n\n  return(\n    <>\n      <Button className={`tag tag-colour-${colour} tag-shape-${shape}`} onClick={clickHandler}>\n        {tag}\n      </Button>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { editContent, getContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditContent({ content, show, closeHandler }) {\n\n  //console.log(content);\n  const [_content, updateContent] = useState(content);\n  //set richtext to blank if the content is a cloudinary link, the content otherwise\n  const [_richText, updateRichText] = useState(!content.content || content.content.includes(\"res.cloudinary.com\") ? '' : content.content);\n  const [_file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => { setShowFile(false); updateFile('undefined'); }\n  const toggleShowFileOn = () => { setShowFile(true); }\n\n  const dispatch = useDispatch();\n  const editClickHandler = () => {\n\n    console.log(_content);\n\n    //convert to FormData so we can send files\n    const _data = new FormData();\n    for (let field in _content) {\n      _data.set(field, _content[field]);\n    }\n    if(showFile && _file) { _data.set('file', _file); _data.delete('content'); }\n    else if (!showFile) { _data.set('content', _richText); }\n\n    dispatch(editContent(_data))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n\n  }\n\n  const deleteFileAndCloseHandler = e => {\n    updateFile('undefined');\n    closeHandler();\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ..._content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={_content.title} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" value={_content.description} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n          <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n          { !showFile ?\n          <Form.Group controlId=\"content\">\n            <Form.Label>Content</Form.Label>\n            <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={_richText} onChange={onContentChangeHandler}/>\n          </Form.Group>\n          :\n          <Form.Group controlId=\"file\">\n            <Form.Label>File</Form.Label>\n            <br/>\n            <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n          </Form.Group>\n          }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={deleteFileAndCloseHandler}>Cancel</Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContent, deleteContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteContent({ content, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n\n    // Wait until content is updated before dismissing the component\n    dispatch(deleteContent(content.id))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete <b>{content.title}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport EditContent from './EditContent';\nimport DeleteContent from './DeleteContent';\n\nexport default function ContentItemMenu({ content }) {\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  return(\n    <>\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\n      <Dropdown className=\"contentitemmenu\" alignRight>\n        <Dropdown.Toggle className=\"contentitemmenu contentitemmenu-button\" as={FontAwesomeIcon} icon={faEllipsisV} size=\"lg\"></Dropdown.Toggle>\n        <Dropdown.Menu className=\"contentitemmenu contentitemmenu-dropdown\" alignRight>\n          <Dropdown.Item className=\"contentitemmenu contentitemmenu-item\" onClick={() => setShowEdit(true)}>Edit</Dropdown.Item>\n          <Dropdown.Item className=\"contentitemmenu contentitemmenu-item\" onClick={() => setShowDelete(true)}>Delete</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n","export const parseDate = date => (\n  date\n    ? Intl.DateTimeFormat('en-AU', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).format(Date.parse(date))\n    : \"\"\n);\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport Tag from './Tag';\nimport ContentItemMenu from './ContentItemMenu';\n\nimport { parseDate } from '../../common/helpers';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ContentItem({ content }) {\n\n  const { id, title, description, displayDate } = content;\n  let { tags } = content;\n  const date = parseDate(displayDate);\n\n  // Bandaid\n  if (tags.length === 1) tags = tags[0].split(',');\n\n  tags = content.tags.map(tag => {\n    if (typeof tag === 'string') return { tag: tag, variant: 'default' }\n    else return tag;\n  });\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  return(\n    <>\n      <Container className=\"contentitem contentitem-container\" key={id}>\n        <Card className=\"contentitem contentitem-card\">\n          <Row className=\"contentitem contentitem-head\">\n            <Col xs={11}>\n              <Row className=\"contentitem contentitem-title\">{title}</Row>\n              <Row className=\"contentitem contentitem-date\">{date}</Row>\n            </Col>\n            <Col>\n              <Row className=\"contentitem contentitem-menu\">\n                <ContentItemMenu content={content}/>\n              </Row>\n            </Col>\n          </Row>\n          <Row className=\"contentitem contentitem-body\">\n            {image &&\n              <Col className=\"contentitem contentitem-image-container\" md={3}>\n                <Row className=\"contentitem contentitem-image-container\">\n                  <img className=\"contentitem contentitem-image\" src={content.content} alt={title}></img>\n                </Row>\n              </Col>}\n            <Col>\n              <Row>\n                <p className=\"contentitem contentitem-description\">{description}</p>\n              </Row>\n            </Col>\n          </Row>\n          <Row className=\"contentitem contentitem-footer\">\n            <div className=\"contentitem contentitem-container contentitem-tags\">\n              {tags.map((tag, index) => \n                <Tag\n                  key={index}\n                  colour={tag.variant}\n                  shape={index === 0 ? 'first' : index === (tags.length - 1) ? 'last' : 'mid'}\n                  tag={tag.tag}\n                />\n              )}\n            </div>\n          </Row>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Row from 'react-bootstrap/Row';\nimport Skeleton from 'react-loading-skeleton';\n\nimport ContentItem from '../content/ContentItem';\n\nimport { getContent } from '../content/contentSlice';\n\n/**\n * Contains the user's content in a feed/wall format.\n */\nexport default function Feed() {\n\n  const dispatch = useDispatch();\n  const gettingContent = useSelector(state => state.app.loading.getContent);\n  const gettingUser = useSelector(state => state.app.loading.login);\n  const content = useSelector(state => state.content);\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n    async function fetch() { dispatch(getContent()) }\n    fetch();\n  }, [dispatch]);\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        <h1 className=\"h2 ml-5 mt-5\">\n          {gettingUser\n            ? <Skeleton width={500}/>\n            : `${user.username}'s Content`}\n        </h1>\n      </Row>\n      {gettingContent\n        ? <><h1><Skeleton/></h1><p><Skeleton count={3}/></p></>\n        : content.map(item => <ContentItem content={item} key={item.id}/>)}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n//import Dropdown from \"react-bootstrap/Dropdown\";\n//import DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { useSelector } from \"react-redux\";\nexport default function Project({\n  projects,\n  profile,\n  updateProfile,\n  updateProjects,\n}) {\n  const content = useSelector((state) => state.content);\n  /*\n  const addProjectHandler = (e) => {\n    const tmp = [...projects, e.target.id];\n    console.log(tmp);\n    updateProjects(tmp);\n    updateProfile({ ...profile, projects: tmp });\n  };\n*/\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Form.Label className=\"ml-3\">Select Project</Form.Label>\n      </Row>\n      <select name=\"cars\" id=\"cars\">\n        {content.map((content, i) => (\n          <option value={i}>{content.title}</option>\n        ))}\n      </select>\n      <div>\n        <br></br>\n      </div>\n      {/* doing this the long way bc brodie destroyed the dropdown button default :))) \n      <DropdownButton id=\"dropdown-basic-button\" title=\"Select Project\">\n        {content.map((content, i) => (\n          <Dropdown.Item >{content.title}</Dropdown.Item>\n        ))}\n      </DropdownButton>\n      */}\n    </React.Fragment>\n  );\n}\n","//Can probably split this into different fields\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editProfile, getProfile, addLogo, addResume } from \"./profileSlice\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Projects from \"./Projects\";\n\nexport default function EditProfile({ profile, projects, show, closeHandler }) {\n  //_profile is the state variable, updateProfile is a function that updates the state\n  //Initial state of profile always takes some time to update\n  const [_profile, updateProfile] = useState(profile);\n  const [_projects, updateProjects] = useState(projects);\n\n  const [_education, updateEducation] = useState(profile.education);\n  const [_experience, updateExperience] = useState(profile.experience);\n  const [_logo, updateLogo] = useState();\n  const [_resume, updateResume] = useState();\n  const dispatch = useDispatch();\n  const [viewAddProject, setView] = useState(false);\n  //Saves all changes\n  const editClickHandler = () => {\n    dispatch(editProfile(_profile))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveLogoHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _logo);\n    dispatch(addLogo(_profile.id, _data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveResumeHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _resume);\n    dispatch(addResume(_profile.id, _data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  //Updates logo field\n  const onLogoUploadHandler = (e) => updateLogo(e.target.files[0]);\n  const onResumeUploadHandler = (e) => updateResume(e.target.files[0]);\n  const deleteLogo = () => updateLogo(\"undefined\");\n  const deleteResume = () => updateResume(\"undefined\");\n\n  //Updates and sets education field in profile\n  const onChangeEducationHandler = (e) => {\n    //Copy and updates tmp array\n    const tmp = [..._education];\n    tmp[e.target.id] = e.target.value;\n    //Updates education array and profile in react state\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  //Adds an empty education field\n  const addEducationField = () => {\n    const tmp = [..._education, \"\"];\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n  //Deletes an education field\n  const deleteEducationField = (id) => {\n    const tmp = [..._education];\n    //Removes index\n    tmp.splice(id, 1);\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  const onChangeExperienceHandler = (e) => {\n    const tmp = [..._experience];\n    tmp[e.target.id] = e.target.value;\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addExperienceField = () => {\n    const tmp = [..._experience, \"\"];\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const deleteExperienceField = (id) => {\n    const tmp = [..._experience];\n    tmp.splice(id, 1);\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  /*\n  const onChangeProjectHandler = (e) => {\n    const tmp = [..._projects];\n    tmp[e.target.id] = e.target.value;\n    updateProjects(tmp);\n    updateProfile({ ..._projects, projects: tmp });\n  };\n  */\n  const addProjectField = () => {\n    //const tmp = [..._projects, \"\"];\n    // updateProjects(tmp);\n    //updateProfile({ ..._profile, projects: tmp });\n    setView(true);\n  };\n\n  const deleteProjectField = (id) => {\n    const tmp = [..._projects];\n    tmp.splice(id, 1);\n    updateProjects(tmp);\n    updateProfile({ ..._profile, projects: tmp });\n  };\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header>\n        <Modal.Title>Edit Profile</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form.Group controlId=\"logo\">\n          <Form.Label>Logo</Form.Label>\n          <br />\n          <input className=\"mb-3\" type=\"file\" name=\"logo\" onChange={onLogoUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteLogo}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveLogoHandler}> Save Logo </Button>\n          </Row>\n        </Form.Group>\n        <Form.Group controlId=\"resume\">\n          <Form.Label>Resume</Form.Label>\n          <br />\n          <input className=\"mb-3\"  type=\"file\" name=\"resume\" onChange={onResumeUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteResume}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveResumeHandler}> Save Resume </Button>\n          </Row>\n        </Form.Group>\n        <Form>\n          <Form.Group controlId=\"education\">\n            <Form.Label>Education</Form.Label>\n          </Form.Group>\n          {_education.map((education, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={education}\n                  onChange={onChangeEducationHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteEducationField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addEducationField}>Add Education</Button>\n          <Form.Group className=\"mt-3\" controlId=\"experience\">\n            <Form.Label>Experience</Form.Label>\n          </Form.Group>\n          {_experience.map((experience, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={experience}\n                  onChange={onChangeExperienceHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteExperienceField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addExperienceField}>Add Experience</Button>\n          <Form.Group className=\"mt-3\" controlId=\"projects\">\n            <Form.Label>Projects</Form.Label>\n          </Form.Group>\n          {_projects.map((projects, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control typeof=\"text\" value={projects.title} readOnly />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteProjectField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          {\"\\n\"}\n          {viewAddProject && (\n            <Projects\n              projects={projects}\n              profile={_profile}\n              updateProfile={updateProfile}\n              updateProjects={updateProjects}\n            />\n          )}\n          {\"\\n\"}\n          <Button onClick={addProjectField}>New Project</Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>\n          Cancel\n        </Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>\n          Save changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getProfile, deleteProfile } from './profileSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteProfile({ profile, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n    // Wait until profile is updated before dismissing the component\n    dispatch(deleteProfile(profile.id))\n      .then(() => dispatch(getProfile()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Profile</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete your profile <b>{profile.email}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}","import React, { useState } from \"react\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ContentItem from \"../content/ContentItem\"; \nimport EditProfile from \"./EditProfile\";\nimport DeleteProfile from \"./DeleteProfile\";\n\nexport default function ProfileItem({ profile, projects }) {\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  //Fields for profile\n  const { logo, education, experience, resume} = profile;\n  \n  //Uses google's embedded file viewer\n  const resumeUrl = \"//docs.google.com/gview?url=\" + resume + \"&embedded=true\";\n  //Checks which fields to render (not actually necessary)\n  const hasLogo = require('is-image'); \n  const hasResume = require('is-valid-http-url'); \n  const hasEducation = education.length > 0; \n  const hasExperience = experience.length > 0; \n  const hasProjects = projects.length > 0;  \n\n  return (\n    <React.Fragment>\n        <Button\n        variant=\"link\"\n        className=\"float-right\"\n        onClick={() => setShowEdit(true)}\n      >\n        Edit\n      </Button>\n      <Button\n        variant=\"link\"\n        className=\"float-right text-danger\"\n        onClick={() => setShowDelete(true)}\n      >\n        Delete\n      </Button>\n      <EditProfile\n        profile={profile}\n        projects = {projects}\n        show={showEdit}\n        closeHandler={handleEditClose}\n      />\n      <DeleteProfile\n        profile={profile}\n        show={showDelete}\n        closeHandler={handleDeleteClose}\n      />\n      <Container>\n        <Row>\n        <h4 className=\"mt-3 mb-5\">Logo</h4>\n          <Col className=\"mt-3 ml-5 mr-5\">\n            {hasLogo && <Image src={logo} roundedCircle fluid />} \n          </Col>\n        </Row>\n      </Container>\n      <Row>\n        <ListGroup className=\"mt-3 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Education</h4>\n          {hasEducation && \n          <div className=\"card-education\">\n            {education.map((education) => (\n              <ListGroup.Item className=\"flex-fill ml-4 mr-5\" key={education}>{education}</ListGroup.Item>\n            ))}\n          </div>}\n        </ListGroup>\n      </Row>\n      <Row>\n        <ListGroup className=\"mt-3 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Experience</h4>\n          {hasExperience && \n            <div className=\"card-experience\">\n            {experience.map((experience) => (\n              <ListGroup.Item className=\"flex-fill ml-4 mr-5\" key={experience}>{experience}</ListGroup.Item>))}\n          </div>}\n        </ListGroup>\n      </Row>\n      <Row>\n        <ListGroup className=\"mt-5 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Resume</h4>\n            {hasResume && <iframe title = \"resume\" src= {resumeUrl} style={{width:600, height:500}} frameBorder=\"0\"></iframe>}\n        </ListGroup>\n     </Row>\n      <Row>\n        <ListGroup className=\"mt-5 ml-5 mr-5\">\n          <h4>Projects</h4>\n          { hasProjects && \n          <div className=\"card-projects\">\n            {projects.map(projects => <ContentItem content = {projects}/>)}\n          </div>\n          }\n        </ListGroup>\n      </Row>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getProfile } from '../profile/profileSlice';\nimport Row from 'react-bootstrap/Row';\n\nimport ProfileItem from '../profile/ProfileItem';\n\n// Contains the user's profile\nexport default function Profile() {\n\n  const dispatch = useDispatch();\n  //Getting the user and profile details \n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n  const content = useSelector(state => state.content); \n  const isLoaded = useSelector(state => state.profile.isLoaded);\n\n  // Reloading profile \n  useEffect(() => {\n    async function fetch() { dispatch(getProfile(user.profile)) }; \n    fetch();\n  }, [dispatch, user.profile]);\n\n  //Alternative solution from making a list of API calls \n  //For each project in the profile, searchs through the content list for a matching id \n  //Adds to array if project is found (otherwise currently does nothing)\n  const getProjects = () => {  \n    const projects = []; \n    if(isLoaded){\n      const contentLength = content.length; \n      const projectLength = profile.projects.length; \n      for(let i = 0; i < projectLength; i++){ \n        const id = profile.projects[i]\n        for(let j = 0; j < contentLength; j++){ \n          if(id === content[j].id){ \n            projects.push(content[j]); \n            break; \n          }\n        }\n      }\n    }\n    return projects; \n  }\n\n  //Calls the getProjects function to get a list of projects \n  const projectList = getProjects(); \n\n  //Will only load the profile if its completely loaded \n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        <h1 className=\"h2 ml-5 mt-5\">Your Profile</h1>\n      </Row>\n      {isLoaded && <ProfileItem profile = {profile} projects ={projectList} />}\n    </div>\n  );\n}\n ","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { createContent, getContent } from '../content/contentSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function AddContent({ setView }) {\n\n  /*\n   * useState is a React hook and unrelated to Redux. Creates a little\n   * private state inside the component, in this case is used to just handle\n   * what's in the input fields before we send it off to Redux.\n   */\n\n  const [content, updateContent] = useState({});\n  const [richText, updateRichText] = useState('');\n  const [file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => setShowFile(false);\n  const toggleShowFileOn = () => setShowFile(true);\n\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = e => {\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    //convert to FormData so we can send files\n    const data = new FormData();\n    for (let field in content) {\n      data.set(field, content[field]);\n    }\n    if(showFile && file) { data.set('file', file); }\n    else if (!showFile) { data.set('content', richText); }\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createContent(data))\n      .then(() => dispatch(getContent()))\n      .then(() => setView('dashboard'));\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ...content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <React.Fragment>\n      <h1 className=\"h2 ml-5 mt-5\">Add Content</h1>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" value={content.title} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"5\" value={content.description} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n        <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n        { !showFile ?\n        <Form.Group controlId=\"content\">\n          <Form.Label>Content</Form.Label>\n          <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={richText} onChange={onContentChangeHandler}/>\n        </Form.Group>\n        :\n        <Form.Group controlId=\"file\">\n          <Form.Label>File</Form.Label>\n          <br/>\n          <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n        </Form.Group>\n        }\n        <Button type=\"submit\" variant=\"info\">Create</Button>\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilePdf, faEnvelope, faArrowCircleDown, faArrowCircleUp } from '@fortawesome/free-solid-svg-icons';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function Share() {\n\n  const { user, profile, content } = useSelector(state => state);\n\n  const [_projects, toggleExpand] = useState(content.map(project => { return { ...project, expand: false } }));\n\n  const onExpandClick = id => toggleExpand(_projects.map(\n    project => project.id === id\n      ? { ...project, expand: !project.expand }\n      : project\n  ));\n\n  const getContentType = userContent => {\n\n    if (userContent) {\n      if (isUrl(userContent)) {\n        return (isImage(userContent.split('?')[0])) ? 'image' : 'url';\n      } else {\n        return 'text';\n      }\n    }\n\n    return null;\n  }\n\n  const toLongDate = date => Intl.DateTimeFormat('en-AU', {\n    day: '2-digit',\n    month: 'long',\n    year: 'numeric'\n  }).format(Date.parse(date));\n\n  return(\n    <>\n      <Button as={Link} to=\"/dashboard\" variant=\"link\" className=\"return\">Back to dashboard</Button>\n      <Container className=\"share\">\n        <Row>\n          <Col xs=\"auto\">\n            <Image roundedCircle className=\"logo\" src={profile.logo}/>\n          </Col>\n          <Col>\n            <Row className=\"name\">{user.firstName} {user.lastName}</Row>\n            <Row className=\"bio\">\n              <Col>\n                <h6>Experience</h6>\n                {profile.experience.map(experience => <p className=\"bio-item\">{experience}</p>)}\n              </Col>\n              <Col>\n                <h6>Education</h6>\n                {profile.education.map(education => <p className=\"bio-item\">{education}</p>)}\n              </Col>\n            </Row>\n            <Row className=\"links\">\n              <Button as=\"a\" href={profile.resume} target=\"_blank\" variant=\"link\"><FontAwesomeIcon icon={faFilePdf}/> Resume</Button>\n              <Button as=\"a\" href={`mailto:${user.email}`} variant=\"link\"><FontAwesomeIcon icon={faEnvelope}/> {user.email}</Button>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          {_projects.map(project =>\n            <Row key={project.id} className=\"project\">\n              <Row>\n                <Col xs=\"auto\" className=\"date\">{toLongDate(project.displayDate)}</Col>\n                <Col>\n                  <Row className=\"title\">{project.title}</Row>\n                  <Row className=\"description\">{project.description}</Row>\n                  <Button variant=\"link\" onClick={() => onExpandClick(project.id)}>\n                    {project.expand && <>Hide project <FontAwesomeIcon icon={faArrowCircleUp}/></>}\n                    {!project.expand && <>Show project <FontAwesomeIcon icon={faArrowCircleDown}/></>}\n                  </Button>\n                </Col>\n              </Row>\n              <Collapse in={project.expand}>\n                <Row>\n                  {(getContentType(project.content) === 'text') && <div dangerouslySetInnerHTML={{ __html: project.content }}/>}\n                  {(getContentType(project.content) === 'image') && <a href={project.content} target=\"_blank\" rel=\"noopener noreferrer\"><Image src={project.content}/></a>}\n                  {(getContentType(project.content) === 'url') && <a href={project.content} target=\"_blank\" rel=\"noopener noreferrer\">External link</a>}\n                </Row>\n              </Collapse>\n              <hr/>\n            </Row>\n          )}\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Landing from '../features/pages/Landing';\nimport Login from '../features/user/Login';\nimport Register from '../features/user/Register';\nimport Homepage from '../features/pages/Homepage';\nimport Dashboard from '../features/dashboard/Dashboard';\nimport Feed from '../features/dashboard/Feed';\nimport Profile from '../features/profile/Profile';\nimport AddContent from '../features/content/AddContent';\nimport Share from '../features/share/Share';\n\nexport const publicRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    page: <Landing/>,\n    landing: <Login/>\n  },\n  {\n    path: \"/register\",\n    exact: true,\n    page: <Landing/>,\n    landing: <Register/>\n  }\n];\n\nexport const privateRoutes = [\n  {\n    path: \"/homepage\",\n    exact: true,\n    page: <Homepage/>\n  },\n  {\n    path: \"/dashboard\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <Feed/>\n  },\n  {\n    path: \"/profile\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <Profile/>\n  },\n  {\n    path: \"/add\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <AddContent/>\n  },\n  {\n    path: \"/share\",\n    exact: true,\n    page: <Share/>\n  }\n];\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport { authenticate } from '../features/user/userSlice';\nimport { token } from '../common/api';\nimport { publicRoutes, privateRoutes } from '../common/routes';\n\nimport '../sass/main.scss';\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const authenticated = useSelector(state => state.user.isAuthenticated);\n\n  useEffect(() => {\n    async function fetch() { if (token.get() !== null) dispatch(authenticate()) }\n    fetch();\n  });\n\n  return(\n    <Router>\n      <Switch>\n        {publicRoutes.map((route, index) =>\n          <Route\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            children={route.page}\n          />\n        )}\n        {privateRoutes.map((route, index) =>\n          <PrivateRoute\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            test={authenticated}\n            fallback=\"/\"\n            children={route.page}\n          />\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nconst PrivateRoute = ({ _props, children, test, fallback }) => {\n  return(\n    <Route {..._props} render={() =>\n      test ? children : <Redirect to={{ pathname: fallback }}/>\n    }/>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './app/store';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}