{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/contentReducer.js","common/api.js","features/user/userSlice.js","reducers/index.js","actions/types.js","store.js","components/Login.js","components/pages/Landing.js","components/layout/Navbar.js","components/layout/SideNavbar.js","components/dashboard/EditContent.js","components/dashboard/DeleteContent.js","components/dashboard/ContentItem.js","components/dashboard/Feed.js","components/dashboard/AddContent.js","components/pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","axios","defaults","baseURL","setAuthHeader","authType","token","headers","common","authenticateUser","user","a","post","getAllContent","get","createContent","content","editContent","id","put","deleteContent","delete","login","createAsyncThunk","credentials","api","createSlice","name","isAuthenticated","reducers","logout","state","action","localStorage","removeItem","extraReducers","fulfilled","setItem","payload","data","actions","combineReducers","auth","type","errors","filter","map","userReducer","middleware","thunk","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Login","history","useHistory","dispatch","useDispatch","useSelector","useState","email","password","form","updateForm","onChangeHandler","e","target","value","useEffect","push","className","onSubmit","preventDefault","placeholder","onChange","Landing","Navbar","Nav","Link","as","to","onClick","SideNavbar","setView","active","setActive","activeKey","onSelect","eventKey","EditContent","props","updateContent","show","closeHandler","Modal","size","onHide","Header","Title","Body","Form","Group","controlId","Label","Control","title","rows","description","Footer","newContent","then","res","catch","err","console","log","DeleteContent","ContentItem","showEdit","setShowEdit","showDelete","setShowDelete","Fragment","Feed","getItem","API","getData","item","key","AddContent","Button","variant","Dashboard","view","setViewHandler","role","App","store","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.45b89628.chunk.js","sourcesContent":["import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\n  const isEmpty = require(\"is-empty\");\r\n\r\n  const initialState = {};\r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...action.payload,\r\n          isAuthenticated: !isEmpty(action.payload.token),\r\n          authType: 'Bearer'\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        ...state,\r\n        errors: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH, DELETE, EDIT, CREATE } from '../actions/types';\r\nimport axios from 'axios';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n\r\n    case FETCH:\r\n      return [...action.payload];\r\n\r\n    case DELETE:\r\n      return state.filter(content => content.id !== action.payload);\r\n\r\n    case EDIT:\r\n      return state.map(content => content.id === action.payload.id ? action.payload : content);\r\n    \r\n    case CREATE:\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\n// Alter based on environment\r\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\r\n\r\nconst AUTH_USER = '/users/authenticate';\r\nconst CONTENT = '/content/';\r\nconst CREATE_CONTENT = '/content/create';\r\n\r\nconst setAuthHeader = (authType, token) => axios.defaults.headers.common['Authorization'] = `${authType} ${token}`;\r\n\r\nconst authenticateUser = async user => await axios.post(AUTH_USER, user);\r\n\r\nconst getAllContent = async (authType, token) => await axios.get(CONTENT, { headers: { 'Authorization': `${authType} ${token}` } });\r\n\r\nconst createContent = async (content, authType, token) => await axios.post(CREATE_CONTENT, content, { headers: { 'Authorization': `${authType} ${token}` } });\r\n\r\nconst editContent = async (id, content, authType, token) => await axios.put(`${CONTENT}${id}`, content, { headers: { 'Authorization': `${authType} ${token}` } });\r\n\r\nconst deleteContent = async (id, authType, token) => await axios.delete(`${CONTENT}${id}`, { headers: { 'Authorization': `${authType} ${token}` } });\r\n\r\nexport default { setAuthHeader, authenticateUser, getAllContent, createContent, editContent, deleteContent };\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../../common/api';\r\n\r\nexport const login = createAsyncThunk(\r\n  'user/authenticate',\r\n  credentials => api.authenticateUser(credentials)\r\n);\r\n\r\nconst user = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    isAuthenticated: false,\r\n    authType: 'Bearer'\r\n  },\r\n  reducers: {\r\n    logout: (state, action) => {\r\n      localStorage.removeItem('token');\r\n\r\n      return { isAuthenticated: false }\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [login.fulfilled]: (state, action) => {\r\n\r\n      // Persist JWT to local storage\r\n      localStorage.setItem('token', action.payload.data.token);\r\n\r\n      // Tell axios to send auth token with every future request\r\n      api.setAuthHeader(state.authType, action.payload.data.token);\r\n\r\n      return {\r\n        ...state,\r\n        ...action.payload.data,\r\n        isAuthenticated: true\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { logout } = user.actions;\r\n\r\nexport default user.reducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport contentReducer from './contentReducer';\r\nimport userReducer from '../features/user/userSlice';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  content: contentReducer,\r\n  user: userReducer\r\n});\r\n","/*\r\n * types.js\r\n * Define action types.\r\n */\r\n\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const FETCH = 'FETCH';\r\nexport const DELETE = 'DELETE';\r\nexport const EDIT = 'EDIT';\r\nexport const CREATE = 'CREATE';\r\n","/*\r\n * store.js\r\n * Boilerplate code. Redux store that controls application state.\r\n */\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers'; // reducers/index.js\r\n\r\nconst initialState = {};\r\n\r\n// Any middleware included goes here\r\nconst middleware = [thunk];\r\nconst middlewareEnhancer = applyMiddleware(...middleware);\r\n\r\n// Add enhancers (if any)\r\nconst enhancers = [middlewareEnhancer];\r\n\r\n// Give access to Redux Devtools\r\nconst composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\nexport default createStore(rootReducer, initialState, composedEnhancers);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { login } from '../features/user/userSlice';\r\n\r\nexport default function Login() {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\r\n  const [form, updateForm] = useState({ email: '', password: '' });\r\n\r\n  const onSubmitHandler = e => {\r\n\r\n    e.preventDefault();\r\n\r\n    dispatch(login(form));\r\n  }\r\n\r\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\r\n\r\n  useEffect(() => { if (isAuthenticated) history.push('/dashboard') });\r\n\r\n        return(\r\n            <div className=\"form-box\">\r\n            <form className=\"login-form\" onSubmit={onSubmitHandler}>\r\n                <h2>Login</h2>\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" \r\n                           id=\"email\"\r\n                           placeholder=\"Email Address\" \r\n                           value={form.email}\r\n                           onChange={onChangeHandler}\r\n                           className=\"form-control\"\r\n                           />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\"  \r\n                           id=\"password\" \r\n                           placeholder=\"Password\" \r\n                           value={form.password}\r\n                           onChange={onChangeHandler}\r\n                           className=\"form-control\"\r\n                            />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        );\r\n}\r\n","import React from 'react';\r\nimport Login from '../Login';\r\n\r\nconst Landing = () => {\r\n  return(\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row no-gutter\">\r\n        <div className=\"col-6 bg-info d-flex justify-content-center\">\r\n          <div className=\"splash-container\">\r\n            <h1 className=\"display-3 text-white\">cPortfolio</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"splash-container\">\r\n            <Login/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logout } from '../../features/user/userSlice';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default function Navbar() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return(\r\n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n      <Nav.Link as={Link} to=\"/dashboard\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Dashboard</Nav.Link>\r\n      <ul className=\"navbar-nav px-3\">\r\n        <li className=\"nav-item text-nowrap\">\r\n          <Nav.Link as={Link} to=\"/\" onClick={() => dispatch(logout())}>Sign out</Nav.Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default function SideNavbar({ setView }) {\r\n\r\n  const [active, setActive] = useState('dashboard');\r\n\r\n  const onSelectHandler = eventKey => {\r\n    setActive(eventKey);\r\n    setView(eventKey);\r\n  }\r\n\r\n  return(\r\n    <Nav className=\"col-md-2 d-none d-md-block bg-light sidebar\" activeKey={active} onSelect={onSelectHandler}>\r\n      <div className=\"sidebar-sticky\">\r\n        <ul className=\"nav flex-column\">\r\n          <li className=\"nav-item\">\r\n            <Nav.Link eventKey=\"dashboard\">\r\n              Dashboard\r\n            </Nav.Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Nav.Link eventKey=\"add-content\">\r\n              Add Content\r\n            </Nav.Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport api from '../../common/api';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { EDIT } from '../../actions/types';\r\n\r\nexport default function EditContent(props) {\r\n\r\n  const [content, updateContent] = useState(props.content);\r\n  const { authType, token } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { show, closeHandler } = props;\r\n\r\n  const onChangeHandler = e => updateContent({ ...content, [e.target.id]: e.target.value });\r\n\r\n  const editClickHandler = () => {\r\n\r\n    const { id, ...newContent } = content;\r\n\r\n    api.editContent(id, newContent, authType, token)\r\n      .then(res => dispatch({ type: EDIT, payload: { id, ...res.data }}))\r\n      .catch(err => console.log(err));\r\n\r\n    closeHandler();\r\n  }\r\n\r\n  return(\r\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\r\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group controlId=\"title\">\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control type=\"text\" value={content.title} onChange={onChangeHandler}/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control as=\"textarea\" rows=\"5\" value={content.description} onChange={onChangeHandler}/>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button className=\"btn btn-primary\" onClick={closeHandler}>Cancel</button>\r\n        <button className=\"btn btn-warning\" onClick={editClickHandler}>Save changes</button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { DELETE } from '../../actions/types';\r\nimport api from '../../common/api';\r\n\r\nexport default function DeleteContent({ content, show, closeHandler }) {\r\n\r\n  const dispatch = useDispatch();\r\n  const { authType, token } = useSelector(state => state.user);\r\n\r\n  const deleteClickHandler = () => {\r\n\r\n    api.deleteContent(content.id, authType, token)\r\n      .then(dispatch({ type: DELETE, payload: content.id }))\r\n      .catch(err => console.log(err));\r\n      \r\n    closeHandler();\r\n  }\r\n\r\n  return(\r\n    <Modal show={show} onHide={closeHandler}>\r\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\r\n      <Modal.Body>Are you sure you want to delete '{content.title}'?</Modal.Body>\r\n      <Modal.Footer>\r\n        <button className=\"btn btn-primary\" onClick={closeHandler}>No, cancel</button>\r\n        <button className=\"btn btn-danger\" onClick={deleteClickHandler}>Yes, delete</button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport EditContent from './EditContent';\r\nimport DeleteContent from './DeleteContent';\r\n\r\nexport default function ContentItem({ content }) {\r\n\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  const handleEditClose = () => setShowEdit(false);\r\n  const handleDeleteClose = () => setShowDelete(false);\r\n\r\n  const { title, description } = content;\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\r\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\r\n      <div className=\"row\">\r\n        <div className=\"flex-fill card mt-5 ml-5 mr-5\">\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">{title}</h4>\r\n            <p className=\"card-text\">{description}</p>\r\n            <button className=\"btn btn-link float-right\" onClick={() => setShowEdit(true)}>Edit</button>\r\n            <button className=\"btn btn-link float-right text-danger\" onClick={() => setShowDelete(true)}>Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport API from '../../common/api';\r\n\r\nimport ContentItem from './ContentItem';\r\n\r\nimport { FETCH } from '../../actions/types';\r\n\r\nexport default function Feed() {\r\n\r\n  const content = useSelector(state => state.content);\r\n  const authType = useSelector(state => state.user.authType);\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n\r\n    async function getData() {\r\n\r\n      try {\r\n        const res = await API.getAllContent(authType, token);\r\n        dispatch({ type: FETCH, payload: res.data });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <div className=\"flex-wrap pt-3 pb-2 mb-3\">\r\n        <div className=\"row\">\r\n          <h1 className=\"h2 ml-5 mt-5\">Your Content</h1>\r\n        </div>\r\n        {content.map(item => <ContentItem content={item} key={item.id}/>)}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport API from '../../common/api';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { CREATE } from '../../actions/types';\r\n\r\nexport default function AddContent({ setView }) {  \r\n\r\n  const [content, updateContent] = useState({});\r\n  const { email, authType, token } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = e => updateContent({ ...content, [e.target.id]: e.target.value });\r\n\r\n  const onSubmitHandler = e => {\r\n\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      user: email,\r\n      title: content.title,\r\n      description: content.description\r\n    }\r\n\r\n    API.createContent(payload, authType, token)\r\n      .then(res => {\r\n\r\n        dispatch({\r\n          type: CREATE,\r\n          payload: res.data\r\n        });\r\n\r\n        setView('dashboard');\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <h1 className=\"h2 ml-5 mt-5\">Add Content</h1>\r\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control type=\"text\" value={content.title} onChange={onChangeHandler}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Dscription</Form.Label>\r\n          <Form.Control as=\"textarea\" rows=\"5\" value={content.description} onChange={onChangeHandler}/>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"info\">Create</Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\r\n\r\nimport Navbar from '../layout/Navbar';\r\nimport SideNavBar from '../layout/SideNavbar';\r\nimport Feed from '../dashboard/Feed';\r\nimport AddContent from '../dashboard/AddContent';\r\n\r\nexport default function Dashboard() {\r\n\r\n  const history = useHistory();\r\n  const [view, setView] = useState('dashboard');\r\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\r\n\r\n  useEffect(() => { if (!isAuthenticated) history.push('/') });\r\n\r\n  const setViewHandler = eventKey => setView(eventKey);\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <Navbar/>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <SideNavBar setView={setViewHandler}/>\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n            {(view === 'dashboard') && <Feed/>}\r\n            {(view === 'add-content') && <AddContent setView={setViewHandler}/>}\r\n            {/*<Router>\r\n              <Switch>\r\n                <Route exact path=\"/dashboard\" component={Feed}/>\r\n                <Route exact path=\"/create\" component={AddContent}/>\r\n              </Switch>\r\n            </Router>*/}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport Landing from './components/pages/Landing';\r\nimport Dashboard from './components/pages/Dashboard';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return(\r\n    // Provider provides Redux state management\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing}/>\r\n            <Route exact path=\"/dashboard\" component={Dashboard}/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}