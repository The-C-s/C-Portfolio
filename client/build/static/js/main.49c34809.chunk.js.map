{"version":3,"sources":["serviceWorker.js","app/appSlice.js","common/api.js","features/content/contentSlice.js","features/user/userSlice.js","features/profile/profileSlice.js","features/search/searchSlice.js","app/reducers.js","app/store.js","features/pages/Landing.js","features/user/Login.js","features/user/Register.js","features/layout/NavButton.js","features/layout/AvatarButton.js","features/user/EditUser.js","features/search/Search.js","features/layout/TopNav.js","features/layout/NavLink.js","features/layout/SideNavbar.js","features/pages/Homepage.js","features/dashboard/Dashboard.js","features/content/Tag.js","features/content/EditContent.js","features/content/DeleteContent.js","features/content/ContentItemMenu.js","common/helpers.js","features/content/ContentItem.js","features/dashboard/Feed.js","features/profile/Projects.js","features/profile/EditProfile.js","features/profile/DeleteProfile.js","features/profile/ProfileItem.js","features/profile/Profile.js","features/content/AddContent.js","features/share/Share.js","common/routes.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","app","createSlice","name","initialState","errors","loading","reduers","extraReducers","state","startLoading","stopLoading","action","setError","payload","removeError","error","console","axios","defaults","baseURL","token","localStorage","getItem","_token","setItem","removeItem","authenticateCredentials","user","a","post","registerUser","authenticateToken","get","getAllContent","createContent","content","editContent","id","put","deleteContent","delete","createProfile","profile","editProfile","deleteProfile","getProfile","addLogo","logo","addResume","resume","updateUser","userParams","getContent","createAsyncThunk","apiCreateContent","apiEditContent","apiDeleteContent","reducers","fulfilled","_","data","login","authenticate","editUser","register","isAuthenticated","setUser","logout","rejected","actions","apiCreateProfile","apiGetProfile","apiEditProfile","apiDeleteProfile","apiAddLogo","apiAddResume","isLoaded","education","experience","projects","search","active","activeSearch","query","searchContent","stopSearch","toLowerCase","results","Set","forEach","_content","title","includes","add","tags","tag","combineReducers","appReducer","profileReducer","contentReducer","userReducer","searchReducer","middleware","thunk","next","headers","common","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Landing","routes","publicRoutes","filter","route","landing","Container","fluid","Row","className","Col","src","alt","map","index","key","path","exact","children","Login","onLogin","dispatch","useDispatch","history","useHistory","loggingIn","useSelector","useState","email","password","form","updateForm","useEffect","push","onChangeHandler","e","target","value","Form","onSubmit","preventDefault","then","Group","Control","type","placeholder","onChange","Button","variant","size","color","as","Link","to","Register","registering","confirmPass","onSubmitHandler","username","onClickHandler","NavButton","icon","AvatarButton","image","EditUser","show","closeHandler","userFromState","_user","updateDetails","Fragment","Modal","onHide","Header","Title","Body","Image","avatar","roundedCircle","controlId","Label","rows","firstName","lastName","Footer","onClick","log","Search","showSearch","setShowSearch","setQuery","useRouteMatch","seamless","faSearch","document","getElementsByClassName","focus","_query","onBlur","TopNav","showUserEdit","setShowUserEdit","Nav","Item","faBell","faCog","NavLink","label","activeOnlyWhenExact","dropdown","expanded","sub","faChevronDown","SideNavbar","expandContent","toggleContent","faHotTub","faStream","Collapse","in","faFolderPlus","faAddressCard","faPray","faSignOutAlt","Homepage","fetch","role","faGripHorizontal","faUserCircle","faCopy","faFileUpload","Dashboard","privateRoutes","dashboard","Tag","colour","shape","EditContent","updateContent","_richText","updateRichText","_file","updateFile","showFile","setShowFile","description","files","modules","toolbar","theme","_data","FormData","field","set","DeleteContent","ContentItemMenu","showEdit","setShowEdit","showDelete","setShowDelete","Dropdown","alignRight","Toggle","FontAwesomeIcon","faEllipsisV","Menu","isUrl","require","isImage","ContentItem","displayDate","date","Intl","DateTimeFormat","day","month","year","format","Date","parse","parseDate","length","split","xs","md","Feed","gettingContent","filteredContent","count","item","Project","updateProfile","updateProjects","closeProjectField","_newProject","updateNewProject","selectProject","i","custom","proj","tmp","tmpIds","EditProfile","_profile","_projects","_education","updateEducation","_experience","updateExperience","_logo","updateLogo","_resume","updateResume","viewAddProject","setView","onChangeEducationHandler","onChangeExperienceHandler","InputGroup","Append","splice","deleteEducationField","deleteExperienceField","typeof","readOnly","deleteProjectField","DeleteProfile","ProfileItem","resumeUrl","hasLogo","hasResume","hasEducation","hasExperience","hasProjects","style","width","height","frameBorder","Profile","projectList","contentLength","projectLength","j","getProjects","AddContent","uploading","richText","file","contentIsFile","setContentIsFile","showConfirmation","setShowConfirmation","toggleContentType","resetForm","toggleConfirmation","open","toggle","inline","checked","header","list","indent","Share","project","expand","toggleExpand","getContentType","userContent","href","faFilePdf","faEnvelope","faArrowCircleUp","faArrowCircleDown","dangerouslySetInnerHTML","__html","rel","page","App","authenticated","test","fallback","PrivateRoute","_props","render","pathname","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.49c34809.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * Redux slice for state.app, responsible for 'loading' flags and error tracking.\n */\nconst app = createSlice({\n  name: 'app',\n  initialState: {\n    errors: {},\n    loading: {}\n  },\n  reduers: {},\n  extraReducers: {\n    'user/login/pending': state => { return startLoading(state, 'login') },\n    'user/login/fulfilled': state => { stopLoading(state, 'login') },\n    'user/login/rejected': (state, action) => { setError(state, 'login', action.payload) },\n\n    'user/authenticate/pending': state => { return startLoading(state, 'login') },\n    'user/authenticate/fulfilled': state => { stopLoading(state, 'login') },\n    'user/authenticate/rejected': (state, action) => { setError(state, 'login', action.payload) },\n\n    'user/update/pending': state => { return startLoading(state, 'update') },\n    'user/update/fulfilled': state => { stopLoading(state, 'update') },\n    'user/update/rejected': (state, action) => { setError(state, 'update', action.payload) },\n\n    'user/register/pending': state => { return startLoading(state, 'register') },\n    'user/register/fulfilled': state => { stopLoading(state, 'register') },\n    'user/register/rejected': (state, action) => { setError(state, 'register', action.payload) },\n\n    'content/getContent/pending': state => { return startLoading(state, 'getContent') },\n    'content/getContent/fulfilled': state => { stopLoading(state, 'getContent') },\n    'content/getContent/rejected': (state, action) => { setError(state, 'getContent', action.payload) },\n\n    'content/createContent/pending': state => { return startLoading(state, 'createContent')},\n    'content/createContent/fulfilled': state => { stopLoading(state, 'createContent') },\n    'content/createContent/rejected': (state, action) => { setError(state, 'createContent', action.payload) },\n\n    'content/editContent/pending': state => { return startLoading(state, 'editContent') },\n    'content/editContent/fulfilled': state => { stopLoading(state, 'editContent') },\n    'content/editContent/rejected': (state, action) => { setError(state, 'editContent', action.payload) },\n\n    'content/deleteContent/pending': state => { return startLoading(state, 'deleteContent') },\n    'content/deleteContent/fulfilled': state => { stopLoading(state, 'deleteContent') },\n    'content/deleteContent/rejected': (state, action) => { setError(state, 'deleteContent', action.payload) }\n  }\n});\n\n/**\n * Sets state.app.loading.action to true.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @return The modified state.\n */\nconst startLoading = (state, action) => {\n\n  removeError(state, action);\n\n  return {\n    ...state,\n    loading: {\n      ...state.loading,\n      [action]: true\n    }\n  }\n};\n\n/**\n * Removes state.app.loading.action from the state.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst stopLoading = (state, action) => delete state.loading[action];\n\n/**\n * Sets state.app.errors.action to the error string and outputs the error to the console.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @param {String} error - An associated error code or message.\n * @return The modified state.\n */\nconst setError = (state, action, error) => {\n\n  console.error(`${action}: ${error}`);\n\n  return {\n    ...state,\n    errors: {\n      ...state.errors,\n      [action]: error\n    }\n  }\n};\n\n/**\n * Removes state.app.errors.action from the state.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst removeError = (state, action) => delete state.errors[action];\n\nexport default app.reducer;\n","import axios from 'axios';\n\n// Intercept and mock all requests if run with with start:mockapi\nif (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API) {\n  require('../_mockapi/api');\n}\n\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\n//axios.defaults.baseURL = 'http://localhost:57670';\n\nexport const AUTH_USER = '/users/authenticate';\nexport const REGISTER_USER = '/users/register';\nexport const CURRENT_USER = '/users/current';\nexport const CONTENT = '/content/';\nexport const CREATE_CONTENT = '/content/create'; \nexport const CREATE_PROFILE = '/profile/create'; \nexport const PROFILE = '/profile/'; \nexport const ADD_LOGO = '/profile/addLogo';\nexport const ADD_RESUME = '/profile/addResume'; \nexport const UPDATE_USER = '/users/update';\n\nexport const token = {\n  get: () => localStorage.getItem('token'),\n  set: _token => localStorage.setItem('token', _token),\n  delete: () => localStorage.removeItem('token')\n}\n\n// Takes email and password as an object and returns the user's details and token\nexport const authenticateCredentials = async user => await axios.post(AUTH_USER, user);\n\n// Takes email and password as an object and returns the user's details and token\nexport const registerUser = async user => await axios.post(REGISTER_USER, user);\n\n// Uses locally-stored token and returns the user's details\nexport const authenticateToken = async () => await axios.get(CURRENT_USER);\n\n// Uses an existing token if user is logged in and returns all their content (as a list, not an object)\nexport const getAllContent = async () => await axios.get(CONTENT);\n\n//Gets one post from an id \n//const getSingleContent = async id => await axios.get(`${CONTENT}${id}`); \n\n// Takes a content object and authorises with existing token\nexport const createContent = async content => await axios.post(CREATE_CONTENT, content);\n\n// Takes a content object (that must include the id field) and authorises with existing token\nexport const editContent = async content => {\n\n  // Handle special case of FormData object being passed\n  let id;\n  try {\n    id = content.get('id');\n  } catch {\n    id = content.id;\n  }\n\n  await axios.put(`${CONTENT}${id}`, content);\n}\n\n// Takes just the content id (as a string) and authorises with existing token\nexport const deleteContent = async id => await axios.delete(`${CONTENT}${id}`);\n\n// Takes profile object and authorises with existing token \nexport const createProfile = async profile => await axios.post(CREATE_PROFILE, profile); \n\n// Takes a profile object (text only) and id and authorises with existing token\nexport const editProfile = async profile => await axios.put(`${PROFILE}${profile.id}`, profile); \n\n// Takes a profile id and authorises with existing token \nexport const deleteProfile = async id => await axios.delete(`${PROFILE}${id}`); \n\n// Takes a profile id and authorises with existing token, returns profile\nexport const getProfile = async id => await axios.get(`${PROFILE}${id}`); \n\n//Takes a profile id and authorises with existing token \nexport const addLogo = async logo => await axios.put(ADD_LOGO, logo);  \n\nexport const addResume = async resume => await axios.put(ADD_RESUME, resume);  \n\nexport const updateUser = async userParams => await axios.put(UPDATE_USER, userParams);\n\n\n","/*\n * The content 'slice' of the state. Centralises all content-related\n * functionality including API calls.\n */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  getAllContent,\n  createContent as apiCreateContent,\n  editContent as apiEditContent,\n  deleteContent as apiDeleteContent\n} from '../../common/api';\n\n// Async Thunks required whenever there's an API call\nexport const getContent = createAsyncThunk(\n  'content/getContent',\n  getAllContent\n);\n\nexport const createContent = createAsyncThunk(\n  'content/createContent',\n  apiCreateContent,\n\n);\n\nexport const editContent = createAsyncThunk(\n  'content/editContent',\n  apiEditContent\n);\n\nexport const deleteContent = createAsyncThunk(\n  'content/deleteContent',\n  apiDeleteContent\n);\n\nconst content = createSlice({\n  name: 'content',\n  initialState: [], // A list! Not an object, be careful. Caused me a few issues.\n  reducers: {},\n  extraReducers: {\n    'user/logout': () => { return [] }, // Trigger content to reset itself when user logs out\n    [getContent.fulfilled]: (_, action) => { return [...action.payload.data] }\n  }\n});\n\n// For importing to src/app/reducers.js\nexport default content.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  authenticateCredentials,\n  authenticateToken,\n  updateUser,\n  registerUser,\n  token\n} from '../../common/api';\n\nexport const login = createAsyncThunk(\n  'user/login',\n  authenticateCredentials\n);\n\nexport const authenticate = createAsyncThunk(\n  'user/authenticate',\n  authenticateToken\n);\n\nexport const editUser = createAsyncThunk(\n  'user/update',\n  updateUser\n);\n\nexport const register = createAsyncThunk(\n  'user/register',\n  registerUser\n);\n\nconst user = createSlice({\n  name: 'user',\n  initialState: { isAuthenticated: token.get() !== null },\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        token: token.get(),\n        isAuthenticated: true\n      }\n    },\n    logout: () => {\n      token.delete();\n      return { isAuthenticated: false }\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n\n      // Persist JWT to local storage\n      token.set(action.payload.data.token);\n\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    // [register.fulfilled]: (state, action) => {\n\n    //   // Persist JWT to local storage\n    //   localStorage.setItem('token', action.payload.data.token);\n\n    //   return {\n    //     ...state,\n    //     ...action.payload.data,\n    //     isAuthenticated: true\n    //   }\n    // },\n    [authenticate.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    [authenticate.rejected]: () => {\n      token.delete();\n      return { isAuthenticated: false } \n    }\n  }\n});\n\n// Explicitly export the non-async reducers\nexport const { logout, setUser } = user.actions;\n\nexport default user.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n    createProfile as apiCreateProfile,\n    getProfile as apiGetProfile,\n    editProfile as apiEditProfile,\n    deleteProfile as apiDeleteProfile,\n    addLogo as apiAddLogo, \n    addResume as apiAddResume\n} from '../../common/api';\n\n//API calls \nexport const createProfile = createAsyncThunk(\n    'profile/createProfile',\n    apiCreateProfile\n);\n\nexport const getProfile = createAsyncThunk(\n    'profile/getProfile',\n    apiGetProfile\n);\n\nexport const editProfile = createAsyncThunk(\n    'profile/updateProfile', \n    apiEditProfile\n); \n\nexport const deleteProfile = createAsyncThunk(\n    'profile/deleteProfile', \n    apiDeleteProfile\n);\n\nexport const addLogo = createAsyncThunk(\n    'profile/addLogo', \n    apiAddLogo\n);\n\nexport const addResume = createAsyncThunk(\n    'profile/addResume', \n    apiAddResume\n);\n\n//Stores profile in state.profile \nconst profile = createSlice({\n    name: 'profile',\n    //Added default arrays, as the state takes 2 seconds to actually get the data\n    initialState: {isLoaded: false, education:[], experience: [], projects: []},\n    reducers: {},\n    extraReducers: {\n        //Resets state on logout (think its necessary)\n        'user/logout': () => { return {}},\n        //Returns profile data \n        [getProfile.fulfilled]: (state, action) => {  \n            return {\n                ...state,\n                ...action.payload.data, \n                isLoaded: true \n            }\n        }\n    }\n  });\n\nexport default profile.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst search = createSlice({\n  name: 'search',\n  initialState: {\n    active: false\n  },\n  reducers: {\n    activeSearch: (_, action) => {\n      return {\n        active: true,\n        query: action.payload.query,\n        content: searchContent(action.payload.query, action.payload.content)\n      }\n    },\n    stopSearch: () => { return { active: false } }\n  },\n  extraReducers: {\n    'user/logout': () => { return { active: false } }\n  }\n});\n\n/**\n * Searches for the query in the titles and tags of an array of\n * content objects, and returns a filtered array.\n * \n * @param {String} query Search query.\n * @param {Array} content Array of content objects to search through.\n * @return {Array}\n */\nconst searchContent = (query, content) => {\n  \n  query = query.toLowerCase();\n  let results = new Set();\n  \n  content.forEach(_content => {\n    \n    if (_content.title.toLowerCase().includes(query)) results.add(_content);\n    \n    _content.tags.forEach(tag => {\n      if (tag.toLowerCase().includes(query)) results.add(_content);\n    });\n  });\n  \n  return [...results];\n}\n\nexport const { activeSearch, stopSearch } = search.actions;\n\nexport default search.reducer;\n","/*\n * Redux takes any reducers we add here and makes them\n * available app-wide.\n */\n\nimport { combineReducers } from 'redux';\nimport appReducer from './appSlice';\nimport contentReducer from '../features/content/contentSlice';\nimport userReducer from '../features/user/userSlice';\nimport profileReducer from '../features/profile/profileSlice';\nimport searchReducer from '../features/search/searchSlice';\n \nexport default combineReducers({\n  app: appReducer,\n  profile: profileReducer,\n  content: contentReducer,\n  user: userReducer,\n  search: searchReducer\n});\n","/*\n * store.js\n * Boilerplate code. Redux store that controls application state.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\n\n//import auth from '../common/api';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Middleware to force authorisation header on every action\nconst auth = () => next => action => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n  return next(action);\n};\n\n// Any middleware included goes here\nconst middleware = [thunk, auth];\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\n// Add enhancers (if any)\nconst enhancers = [middlewareEnhancer];\n\n// Give access to Redux Devtools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer, initialState, composedEnhancers);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { publicRoutes } from '../../common/routes';\n\n/* Added logo and removed the text display */\n\nexport function validate() {\n  let input = this.state.input;\n  let errors = {};\n  let isValid = true;\n\n  if (!input[\"name\"]) {\n    isValid = false;\n    errors[\"name\"] = \"Please enter your name.\";\n  }\n\n  if (!input[\"email\"]) {\n    isValid = false;\n    errors[\"email\"] = \"Please enter your email Address.\";\n  }\n\n  if (typeof input[\"email\"] !== \"undefined\") {\n      \n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    if (!pattern.test(input[\"email\"])) {\n      isValid = false;\n      errors[\"email\"] = \"Please enter valid email address.\";\n    }\n  }\n\n  if (!input[\"password\"]) {\n    isValid = false;\n    errors[\"password\"] = \"Please enter your password.\";\n  }\n\n  if (!input[\"confirm_password\"]) {\n    isValid = false;\n    errors[\"confirm_password\"] = \"Please re enter to confirm password.\";\n  }\n\n  if (typeof input[\"password\"] !== \"undefined\" && typeof input[\"confirm_password\"] !== \"undefined\") {\n      \n    if (input[\"password\"] !== input[\"confirm_password\"]) {\n      isValid = false;\n      errors[\"password\"] = \"Passwords don't match.\";\n    }\n  } \n\n  this.setState({\n    errors: errors\n  });\n\n  return isValid;\n}\n\nexport default function Landing() {\n\n  // Get routes that Landing can handle\n  const routes = publicRoutes.filter(route => route.landing !== null);\n \n  return(\n    <Container fluid>\n      <Row className=\"no-gutter\">\n        <Col className=\"bg-info d-flex justify-content-center\">\n          <div className=\"splash-container\">\n            <h1 className=\"display-3 text-white\"><img src=\"/images/Portfolio.png\" alt=\"\"/></h1>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"splash-container\">\n            <Switch>\n              {routes.map((route, index) =>\n                  <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    children={route.landing}\n                  />\n                )}\n            </Switch>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { login } from './userSlice';\n\nexport default function Login({ onLogin }) {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const user = useSelector(state => state.user);\n  const [form, updateForm] = useState({ email: '', password: '' });\n\n  useEffect(() => {\n    if (user.isAuthenticated) history.push('/homepage');\n  });\n\n  const onSubmitHandler = e => {\n\n    e.preventDefault();\n\n    dispatch(login(form))\n      .then(() => history.push('/homepage'));\n  }\n\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n\n  return(\n    <div className=\"form-box\">\n      <Form className=\"login-form\" onSubmit={onSubmitHandler}>\n        <h2>Login</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"email\" \n            id=\"email\"\n            placeholder=\"Email Address\" \n            value={form.email}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"  \n            id=\"password\" \n            placeholder=\"Password\" \n            value={form.password}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Button className=\"btn-login\" type=\"submit\" variant=\"primary\">\n          {loggingIn\n            ? <>Logging in <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={loggingIn}/></span></>\n            : \"Log in\"}\n        </Button>\n        <div className=\"text-center\"> Don't have an account? <Button as={Link} to=\"/register\" variant=\"link\">Register</Button></div>\n      </Form>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { register} from './userSlice';\n//import {createProfile} from '../profile/profileSlice';\n\nexport default function Register() {\n  \n  const dispatch = useDispatch();\n  const history = useHistory();\n  const registering = useSelector(state => state.app.loading.register);\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const [form, updateForm] = useState({ name: '', email: '', password: '', confirmPass: ''});\n  \n  const onSubmitHandler = e => {\n    \n    e.preventDefault();\n          dispatch(register(form))\n          //.then(dispatch(login(form)))\n          .then(() => history.push('/homepage'));\n        \n  }\n  \n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n  \n  return(\n    <div className=\"form-box\">\n      <Form className=\"signup-form\" onSubmit={onSubmitHandler}>\n        <h2>Register</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"text\" \n            id=\"username\"\n            placeholder=\"Username\" \n            value={form.username}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"email\" \n          id=\"email\"\n          placeholder=\"Email Address\" \n          value={form.email}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"password\"  \n          id=\"password\" \n          placeholder=\"Password\" \n          value={form.password}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n          type=\"password\"  \n          id=\"confirmPass\" \n          placeholder=\"Confirm Password\" \n          value={form.confirmPass}\n          onChange={onChangeHandler}\n          className=\"form-control\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" onClickHandler={onSubmitHandler} variant=\"primary\">\n          {registering || loggingIn\n              ? <>Signing you up <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={registering}/></span></>\n              : \"Sign up\"}\n        </Button>\n        <div className=\"text-center\"> Already have an account?<Button as={Link} to=\"/\" variant=\"link\">Login here</Button></div>\n      </Form>\n    </div>\n  );\n}\n  ","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function NavButton({ icon }) {\n  return(\n    <FontAwesomeIcon className=\"navbutton\" icon={icon} size=\"lg\"/>\n  );\n}\n","import React from 'react'\n\nexport default function AvatarButton({ image }) {\n  return(\n    <img className=\"avatarbutton\" src={image} alt=\"Your profile\"/>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {editUser} from './userSlice';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport Image from 'react-bootstrap/Image';\n\nexport default function EditUser({show, closeHandler, user}) {\n    //const user = useSelector(state => state.user);\n\n    const userFromState = useSelector(state => state.user);\n\n\n    //Initialised with the user fields.\n\n    const [_user, updateDetails] = useState(user);\n    const dispatch = useDispatch();\n\n    //submits the new user details to the server to update in the database\n    const handleEditUser = () => {\n        dispatch(editUser(_user))\n        .then(closeHandler);\n    };\n\n    //source of truth for the user details, updated alongside the form when editing\n    const onChangeHandler = e => updateDetails({ ..._user, [e.target.id]: e.target.value});\n\n    const resetHandler = () => {\n      //\n      updateDetails(userFromState);\n      console.log(_user);\n      console.log(userFromState);\n    }\n    \n    //<img src=\"...\" class=\"rounded mx-auto d-block\" alt=\"...\">\n\n    return (\n    <React.Fragment>\n        <Modal show = {show} onHide = {closeHandler}>\n        <Modal.Header><Modal.Title>Edit User Details</Modal.Title></Modal.Header>\n        <Modal.Body>\n        <Image src = {userFromState.avatar} alt = \"Hello Darkness\" roundedCircle className = \"rounded mx-auto d-block\"/>\n        <Form>\n        <Form.Group controlId = \"username\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control as=\"textarea\" rows = \"1\" value = {_user.username} onChange = {onChangeHandler}/>\n        </Form.Group>\n          <Form.Group controlId=\"firstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.firstName} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"lastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.lastName} onChange={onChangeHandler}/>\n          </Form.Group>\n        </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"link\" onClick = {resetHandler}>Reset Changes</Button>\n            <Button variant=\"warning\" onClick = {handleEditUser}>Save changes</Button>\n            <Button variant=\"link\" onClick={closeHandler}>Cancel</Button>\n        </Modal.Footer>\n        </Modal>\n        \n    </React.Fragment>\n    );\n}\n\n/* <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n            Edit\n        </Button>\n        <Image src = {user.avatar} alt = \"Hello Darkness\"/>\n        <h1 className=\"h2 ml-5 mt-5\">Username: {user.username}</h1> \n        <h1 className=\"h2 ml-5 mt-5\">First Name: {user.firstName}</h1>\n        <h1 className=\"h2 ml-5 mt-5\">Last Name: {user.lastName}</h1> */","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport {\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  FormInput\n} from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { activeSearch, stopSearch } from './searchSlice';\n\n/**\n * Search bar which searches within titles and tags from\n * content that's currently in the state. Makes a copy of\n * state.content in state.search but filtered by search query.\n * \n * @param {boolean} show Whether search bar is available or not. \n */\nexport default function Search({ show }) {\n\n  const dispatch = useDispatch();\n  const content = useSelector(state => state.content);\n  const [showSearch, setShowSearch] = useState(false);\n  const [query, setQuery] = useState('');\n\n  // Hide search if not on the content feed\n  let match = useRouteMatch({\n    path: '/dashboard/content',\n    exact: true\n  })\n\n  // Activate search\n  const searchClickHandler = () => {\n    document.getElementsByClassName('search-input')[0].focus();\n    setShowSearch(true);\n  }\n\n  // Deactivate search\n  const onFocusOutHandler = () => {\n    console.log('focus out');\n    if (query === '') setShowSearch(false);\n  }\n\n  const onChangeHandler = e => {\n\n    const _query = e.target.value;\n    setQuery(_query);\n\n    if (e.target.value === '') {\n\n      dispatch(stopSearch());\n      return;\n    }\n\n    dispatch(activeSearch({ query: _query, content: content }));\n  }\n\n  return(\n    <div className={`search${!match ? ' hidden' : ''}`}>\n      <InputGroup seamless>\n        <InputGroupAddon type=\"prepend\">\n          <InputGroupText>\n            <FontAwesomeIcon\n              className={`search-icon search-icon${showSearch ? '-active' : '-inactive'}`}\n              icon={faSearch}\n              onClick={searchClickHandler}\n            />\n          </InputGroupText>\n        </InputGroupAddon>\n        <FormInput\n          className={`search-input search-input${showSearch ? '-active' : '-inactive'}`}\n          type=\"search\"\n          value={query}\n          onChange={onChangeHandler}\n          onBlur={onFocusOutHandler}\n        />\n      </InputGroup>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport { faBell, faCog } from '@fortawesome/free-solid-svg-icons';\n\nimport NavButton from './NavButton';\nimport AvatarButton from './AvatarButton';\nimport EditUser from '../user/EditUser';\nimport Search from '../search/Search';\n\nexport default function TopNav() {\n  \n  const user = useSelector(state => state.user);\n  const [showUserEdit, setShowUserEdit] = useState(false);\n\n  const handleEditClose = () => setShowUserEdit(false);\n\n  return(\n    <>\n      <EditUser show={showUserEdit} closeHandler={handleEditClose} user={user}/>\n      <Nav className=\"topnav justify-content-end\">\n        <Nav.Item className=\"topnav topnav-navitem topnav-search\">\n          <Search/>\n        </Nav.Item>\n        <Nav.Item className=\"topnav topnav-navitem topnav-notifications\" onClick={() => console.log('\\'Notifications\\' clicked')}>\n          <NavButton icon={faBell}></NavButton>\n        </Nav.Item>\n        <Nav.Item className=\"topnav topnav-navitem topnav-settings\" onClick={() => console.log('\\'Settings\\' clicked')}>\n          <NavButton icon={faCog}></NavButton>\n        </Nav.Item>\n        <Nav.Item className=\"topnav topnav-navitem topnav-avatar\" onClick={() => setShowUserEdit(true)}>\n          <AvatarButton image={user.avatar}/>\n        </Nav.Item>\n      </Nav>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\nexport default function NavLink({\n  label,\n  to,\n  activeOnlyWhenExact,\n  icon,\n  dropdown,\n  expanded,\n  sub\n }) {\n\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  }) || expanded;\n\n  return(\n    <Nav.Link\n      as={Link}\n      to={to}\n      className={\n        `navlink${\n          match ? ' navlink-active active' : ''\n        }${\n          dropdown ? ' navlink-dropdown' : ''\n        }${\n          sub ? ' navlink-sub' : ''\n        }`\n      }\n    >\n        {icon &&\n        <FontAwesomeIcon\n          className={`navlink-icon${match ? ' navlink-icon-active' : ''}`}\n          icon={icon}\n          size=\"lg\"\n        />}\n        {label}\n        {dropdown &&\n        <FontAwesomeIcon\n          className={`navlink-chevron ${expanded ? 'fa-rotate-180' : ''}`}\n          icon={faChevronDown}\n          size=\"lg\"\n        />}\n    </Nav.Link>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Collapse from 'react-bootstrap/Collapse';\n\nimport { faAddressCard, faPray, faFolderPlus, faSignOutAlt, faStream, faHotTub } from '@fortawesome/free-solid-svg-icons';\n\nimport NavLink from './NavLink';\n\nimport { logout } from '../user/userSlice';\n\nexport default function SideNavbar() {\n\n  const dispatch = useDispatch();\n  const [expandContent, toggleContent] = useState(false);\n\n  const onContentClick = () => toggleContent(!expandContent);\n\n  const logoutHandler = () => dispatch(logout());\n\n  return(\n    <Nav className=\"sidenav flex-column col-sm-3 col-lg-2 d-none d-sm-block\">\n      <img className=\"sidenav-logo\" src=\"/images/logo_white_transparent.png\" alt=\"cPortfolio logo\"/>\n      <Nav.Item className=\"sidenav-item\">\n        <NavLink\n          to=\"/homepage\"\n          label=\"Overview\"\n          icon={faHotTub}\n        />\n      </Nav.Item>\n      <div className={`sidenav-group${expandContent ? ' sidenav-group-expanded' : ''}`}>\n        <Nav.Item className=\"sidenav-item\" onClick={onContentClick}>\n          <NavLink\n            dropdown\n            expanded={expandContent}\n            to=\"/dashboard/content\"\n            label=\"Content\"\n            icon={faStream}\n            activeOnlyWhenExact={true}\n          />\n        </Nav.Item>\n        <Collapse in={expandContent}>\n          <div className=\"collapse-group\">\n            <Nav.Item className=\"sidenav-item\">\n              <NavLink\n                sub\n                to=\"/dashboard/content/add\"\n                label=\"New project\"\n                icon={faFolderPlus}\n              />\n            </Nav.Item>\n            <Nav.Item className=\"sidenav-item\">\n              <NavLink\n                sub\n                to=\"/dashboard/content/upload\"\n                label=\"New file upload\"\n                icon={faFolderPlus}\n              />\n            </Nav.Item>\n          </div>\n        </Collapse>\n      </div>\n      <Nav.Item className=\"sidenav-item\">\n        <NavLink\n          to=\"/dashboard/profile\"\n          label=\"Profile\"\n          icon={faAddressCard}\n        />\n      </Nav.Item>\n      <Nav.Item className=\"sidenav-item\">\n        <NavLink\n          to=\"/share\"\n          label=\"Share\"\n          icon={faPray}\n        />\n      </Nav.Item>\n      <Nav.Item className=\"sidenav-item\" onClick={logoutHandler}>\n        <NavLink\n          to=\"/\"\n          label=\"Sign out\"\n          icon={faSignOutAlt}\n          activeOnlyWhenExact={true}\n        />\n      </Nav.Item>\n    </Nav>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Row from \"react-bootstrap/Row\";\nimport TopNav from \"../layout/TopNav\";\nimport SideNavbar from \"../layout/SideNavbar\"; \n\nimport Nav from \"react-bootstrap/Nav\";\nimport NavLink from \"../layout/NavLink\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGripHorizontal,\n  faUserCircle,\n  faCopy,\n  faFileUpload,\n  faAddressCard,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { getProfile } from \"../profile/profileSlice\";\n\nexport default function Homepage() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n\n  useEffect(() => {\n\n    async function fetch() { dispatch(getProfile(user.profile)) }\n\n    // Skip loading if already in state\n    if (user.profile && user.profile !== profile.id) fetch();\n  }, [dispatch, user, profile]);\n\n  return (\n    <>\n      <TopNav />\n      <SideNavbar/>\n      <br />\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n        <Nav className=\"flex-column\">\n          <div className = \"homepage-heading\">\n            <div className=\"pageheading-rectangle1\">\n              <h1 className=\"pageheading-heading\">Welcome {user.username}</h1>\n              <div className=\"pageheading-decoration1\" />\n              <div className=\"pageheading-decoration2\" />\n            </div>\n          </div>\n          <div className=\"main\">\n            <Nav.Item>\n              <NavLink\n                to=\"/dashboard/content\"\n                activeOnlyWhenExact={true}\n                label={\n                  <>\n                    <Row>\n                      <div className=\"dashboard\">\n                        <FontAwesomeIcon\n                          className=\"icon\"\n                          icon={faGripHorizontal}\n                        />\n                        <div className=\"heading\">DASHBOARD</div>\n                        <div className=\"rectangle1\" />\n                        <div className=\"rectangle2\" />\n                        <div className=\"rectangle3\" />\n                        <div className=\"rectangle4\" />\n                      </div>\n                    </Row>\n                  </>\n                }\n              />\n            </Nav.Item>\n            <Row>\n              <Nav.Item>\n                <NavLink\n                  to=\"/dashboard/profile\"\n                  label={\n                    <>\n                      <Row>\n                        <div className=\"profile\">\n                          <FontAwesomeIcon\n                            className=\"icon\"\n                            icon={faUserCircle}\n                          />\n                          <div className=\"heading\">PROFILE</div>\n                          <div className=\"rectangle1\" />\n                          <div className=\"rectangle2\" />\n                          <div className=\"rectangle3\" />\n                          <div className=\"rectangle4\" />\n                        </div>\n                      </Row>\n                    </>\n                  }\n                />\n              </Nav.Item>\n              <Nav.Item>\n                <NavLink\n                  to=\"/dashboard/content/add\"\n                  label={\n                    <>\n                      <div className=\"add-content\">\n                        <FontAwesomeIcon className=\"icon\" icon={faCopy} />\n                        <div className=\"heading\">ADD TEXT</div>\n                        <div className=\"rectangle1\" />\n                        <div className=\"rectangle2\" />\n                        <div className=\"rectangle3\" />\n                        <div className=\"rectangle4\" />\n                      </div>\n                    </>\n                  }\n                />\n              </Nav.Item>\n            </Row>\n            <Nav.Item>\n              <NavLink\n                to=\"/dashboard/content/add\"\n                label={\n                  <>\n                    <div className=\"add-file\">\n                      <FontAwesomeIcon className=\"icon\" icon={faFileUpload} />\n                      <div className=\"heading\">ADD FILE</div>\n                      <div className=\"rectangle1\" />\n                      <div className=\"rectangle2\" />\n                      <div className=\"rectangle3\" />\n                      <div className=\"rectangle4\" />\n                    </div>\n                  </>\n                }\n              />\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink\n                to=\"/share\"\n                label={\n                  <>\n                    <div className=\"share\">\n                      <FontAwesomeIcon className=\"icon\" icon={faAddressCard} />\n                      <div className=\"heading\">SHARE VIEW</div>\n                      <div className=\"rectangle1\" />\n                      <div className=\"rectangle2\" />\n                      <div className=\"rectangle3\" />\n                      <div className=\"rectangle4\" />\n                    </div>\n                  </>\n                }\n              />\n            </Nav.Item>\n          </div>\n        </Nav>\n      </main>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport TopNav from '../layout/TopNav';\nimport SideNavBar from '../layout/SideNavbar';\n\nimport { getProfile } from '../profile/profileSlice';\nimport { privateRoutes } from '../../common/routes';\n\nexport default function Dashboard() {\n  \n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const routes = privateRoutes.filter(route => 'dashboard' in route);\n\n  useEffect(() => {\n\n    async function fetch() {\n      dispatch(getProfile(user.profile));\n    }\n    fetch();\n  });\n\n  return(\n    <>\n      <TopNav/>\n      <Container fluid>\n        <Row>\n          <SideNavBar/>\n          <main role=\"main\" className=\"dashboard-main col-sm-9 col-lg-10 ml-sm-auto px-4\">\n            <Switch>\n              {routes.map((route, index) =>\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={route.dashboard}\n                />\n              )}\n            </Switch>\n          </main>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Tag({ tag, colour, shape }) {\n\n  const clickHandler = () => console.log(`'${tag}' tag clicked.`);\n\n  return(\n    <>\n      <div className={`tag tag-colour-${colour} tag-shape-${shape}`} onClick={clickHandler}>\n        {tag}\n      </div>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { editContent, getContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditContent({ content, show, closeHandler }) {\n\n  //console.log(content);\n  const [_content, updateContent] = useState(content);\n  //set richtext to blank if the content is a cloudinary link, the content otherwise\n  const [_richText, updateRichText] = useState(!content.content || content.content.includes(\"res.cloudinary.com\") ? '' : content.content);\n  const [_file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => { setShowFile(false); updateFile('undefined'); }\n  const toggleShowFileOn = () => { setShowFile(true); }\n\n  const dispatch = useDispatch();\n  const editClickHandler = () => {\n\n    console.log(_content);\n\n    //convert to FormData so we can send files\n    const _data = new FormData();\n    for (let field in _content) {\n      _data.set(field, _content[field]);\n    }\n    if(showFile && _file) { _data.set('file', _file); _data.delete('content'); }\n    else if (!showFile) { _data.set('content', _richText); }\n\n    dispatch(editContent(_data))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n\n  }\n\n  const deleteFileAndCloseHandler = e => {\n    updateFile('undefined');\n    closeHandler();\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ..._content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={_content.title} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" value={_content.description} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n          <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n          { !showFile ?\n          <Form.Group controlId=\"content\">\n            <Form.Label>Content</Form.Label>\n            <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={_richText} onChange={onContentChangeHandler}/>\n          </Form.Group>\n          :\n          <Form.Group controlId=\"file\">\n            <Form.Label>File</Form.Label>\n            <br/>\n            <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n          </Form.Group>\n          }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={deleteFileAndCloseHandler}>Cancel</Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContent, deleteContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteContent({ content, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n\n    // Wait until content is updated before dismissing the component\n    dispatch(deleteContent(content.id))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete <b>{content.title}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport EditContent from './EditContent';\nimport DeleteContent from './DeleteContent';\n\nexport default function ContentItemMenu({ content }) {\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  return(\n    <>\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\n      <Dropdown className=\"contentitemmenu\" alignRight>\n        <Dropdown.Toggle className=\"contentitemmenu contentitemmenu-button\" as={FontAwesomeIcon} icon={faEllipsisV} size=\"lg\"></Dropdown.Toggle>\n        <Dropdown.Menu className=\"contentitemmenu contentitemmenu-dropdown\" alignRight>\n          <Dropdown.Item className=\"contentitemmenu contentitemmenu-item\" onClick={() => setShowEdit(true)}>Edit</Dropdown.Item>\n          <Dropdown.Item className=\"contentitemmenu contentitemmenu-item\" onClick={() => setShowDelete(true)}>Delete</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n}\n","export const parseDate = date => (\n  date\n    ? Intl.DateTimeFormat('en-AU', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }).format(Date.parse(date))\n    : \"\"\n);\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Tag from './Tag';\nimport ContentItemMenu from './ContentItemMenu';\n\nimport { parseDate } from '../../common/helpers';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ContentItem({ content }) {\n\n  const { id, title, description, displayDate } = content;\n  let { tags } = content;\n  const date = parseDate(displayDate);\n\n  // Bandaid\n  if (tags.length === 1) tags = tags[0].split(',');\n\n  tags = content.tags.map(tag => {\n    if (typeof tag === 'string') return { tag: tag, variant: 'default' }\n    else return tag;\n  });\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  return(\n    <Container className=\"contentitem contentitem-container\" key={id}>\n      <div className=\"contentitem contentitem-card\">\n        <Row className=\"contentitem contentitem-head\">\n          <Col xs={11}>\n            <Row className=\"contentitem contentitem-title\">{title}</Row>\n            <Row className=\"contentitem contentitem-date\">{date}</Row>\n          </Col>\n          <Col>\n            <Row className=\"contentitem contentitem-menu\">\n              <ContentItemMenu content={content}/>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"contentitem contentitem-body\">\n          {image &&\n            <Col className=\"contentitem contentitem-image-container\" md={3}>\n              <Row className=\"contentitem contentitem-image-container\">\n                <img className=\"contentitem contentitem-image\" src={content.content} alt={title}></img>\n              </Row>\n            </Col>}\n          <Col>\n            <Row>\n              <p className=\"contentitem contentitem-description\">{description}</p>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"contentitem contentitem-footer\">\n          <div className=\"contentitem contentitem-container contentitem-tags\">\n            {tags.map((tag, index) => \n              <Tag\n                key={index}\n                colour={tag.variant}\n                shape={index === 0 ? 'first' : index === (tags.length - 1) ? 'last' : 'mid'}\n                tag={tag.tag}\n              />\n            )}\n          </div>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Skeleton from 'react-loading-skeleton';\n\nimport ContentItem from '../content/ContentItem';\n\nimport { getContent } from '../content/contentSlice';\n\n/**\n * Contains the user's content in a feed/wall format.\n */\nexport default function Feed() {\n\n  const dispatch = useDispatch();\n  const gettingContent = useSelector(state => state.app.loading.getContent);\n  const user = useSelector(state => state.user);\n  const search = useSelector(state => state.search);\n  const content = useSelector(state => state.content);\n  const filteredContent = search.active ? search.content : content;\n\n  useEffect(() => {\n\n    async function fetch() { dispatch(getContent()) }\n\n    // Skip loading if already in state\n    if (user.content && user.content.length !== content.length) fetch();\n  }, [dispatch, user, content]);\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      {gettingContent\n        ? <><h1><Skeleton/></h1><p><Skeleton count={3}/></p></>\n        : filteredContent.map(item => <ContentItem content={item} key={item.id}/>)}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"; \nimport { useSelector } from \"react-redux\";\nexport default function Project({\n  projects,\n  profile,\n  updateProfile,\n  updateProjects,\n  closeProjectField\n}) {\n\n  const content = useSelector((state) => state.content);\n  const [_newProject, updateNewProject] = useState(); \n\n  const addProjectHandler = () => {\n    //Selects content object\n    const proj = selectProject(_newProject); \n    //Saves and updates the state of projects (for display)\n    const tmp = [...projects, proj];\n    updateProjects(tmp);\n\n    //Saves and updates the project ids (for profile storage)\n    const tmpIds = [];\n    for(let i = 0; i < tmp.length; i++){ \n      tmpIds.push(tmp[i].id); \n    } \n    updateProfile({ ...profile, projects: tmpIds });\n    closeProjectField(); \n  };\n\n  //Searches content for new project id and returns the content object \n  //Cant save objects in value so this is an alternative \n  const selectProject = (id) => {\n    for(let i = 0; i < content.length; i++){ \n      if(content[i].id === id){ \n        return content[i]; \n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n          <Form.Label>Select Project</Form.Label>\n          <Form.Control value = {_newProject} onChange = {(e)=>{updateNewProject(e.target.value);}} as=\"select\" custom>\n            {content.map((content) => (\n              <option id={content.id} key={content.id} value = {content.id}>{content.title}</option>\n            ))}\n          </Form.Control>\n          {\"\\n\"}\n          <Button onClick={addProjectHandler}> Add </Button>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  );\n}\n","//Can probably split this into different fields\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editProfile, getProfile, addLogo, addResume } from \"./profileSlice\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Projects from \"./Projects\";\n\nexport default function EditProfile({ profile, projects, show, closeHandler }) {\n  const dispatch = useDispatch();\n  //_profile is the state variable, updateProfile is a function that updates the state\n  //Initial state of profile always takes some time to update\n  const [_profile, updateProfile] = useState(profile);\n  const [_projects, updateProjects] = useState(projects);\n  const [_education, updateEducation] = useState(profile.education);\n  const [_experience, updateExperience] = useState(profile.experience);\n  const [_logo, updateLogo] = useState();\n  const [_resume, updateResume] = useState();\n  const [viewAddProject, setView] = useState(false);\n\n  //Saves all changes\n  const editClickHandler = () => {\n    dispatch(editProfile(_profile))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveLogoHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _logo);\n    dispatch(addLogo(_data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveResumeHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _resume);\n    dispatch(addResume(_data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  //Updates logo field\n  const onLogoUploadHandler = (e) => updateLogo(e.target.files[0]);\n  const onResumeUploadHandler = (e) => updateResume(e.target.files[0]);\n  const deleteLogo = () => updateLogo(\"undefined\");\n  const deleteResume = () => updateResume(\"undefined\");\n\n  //Updates and sets education field in profile\n  const onChangeEducationHandler = (e) => {\n    //Copy and updates tmp array\n    const tmp = [..._education];\n    tmp[e.target.id] = e.target.value;\n    //Updates education array and profile in react state\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  //Adds an empty education field\n  const addEducationField = () => {\n    const tmp = [..._education, \"\"];\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n  //Deletes an education field\n  const deleteEducationField = (id) => {\n    const tmp = [..._education];\n    //Removes index\n    tmp.splice(id, 1);\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  const onChangeExperienceHandler = (e) => {\n    const tmp = [..._experience];\n    tmp[e.target.id] = e.target.value;\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addExperienceField = () => {\n    const tmp = [..._experience, \"\"];\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const deleteExperienceField = (id) => {\n    const tmp = [..._experience];\n    tmp.splice(id, 1);\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addProjectField = () => {\n    setView(true);\n  };\n\n  const closeProjectField = () => {\n    setView(false);\n  };\n\n  const deleteProjectField = (id) => {\n    //Removes project from state \n    const tmp = [..._projects];\n    tmp.splice(id, 1);\n    updateProjects(tmp);\n    //Convert to ids and update profile\n    const tmpIds = [];\n    for(let i = 0; i < _projects.length; i++){ \n      tmpIds.push(_projects[i].id); \n    } \n    updateProfile({ ..._profile, projects: tmpIds });\n  };\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header>\n        <Modal.Title>Edit Profile</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form.Group controlId=\"logo\">\n          <Form.Label>Logo</Form.Label>\n          <br />\n          <input className=\"mb-3\" type=\"file\" name=\"logo\" onChange={onLogoUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteLogo}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveLogoHandler}> Save Logo </Button>\n          </Row>\n        </Form.Group>\n        <Form.Group controlId=\"resume\">\n          <Form.Label>Resume</Form.Label>\n          <br />\n          <input className=\"mb-3\"  type=\"file\" name=\"resume\" onChange={onResumeUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteResume}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveResumeHandler}> Save Resume </Button>\n          </Row>\n        </Form.Group>\n        <Form>\n          <Form.Group controlId=\"education\">\n            <Form.Label>Education</Form.Label>\n          </Form.Group>\n          {_education.map((education, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={education}\n                  onChange={onChangeEducationHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteEducationField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addEducationField}>Add Education</Button>\n          <Form.Group className=\"mt-3\" controlId=\"experience\">\n            <Form.Label>Experience</Form.Label>\n          </Form.Group>\n          {_experience.map((experience, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={experience}\n                  onChange={onChangeExperienceHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteExperienceField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addExperienceField}>Add Experience</Button>\n          <Form.Group className=\"mt-3\" controlId=\"projects\">\n            <Form.Label>Projects</Form.Label>\n          </Form.Group>\n          {_projects.map((projects, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control typeof=\"text\" value={projects.title} readOnly />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteProjectField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          {\"\\n\"}\n          {viewAddProject && (\n            <Projects\n              projects={_projects}\n              profile={_profile}\n              updateProfile={updateProfile}\n              updateProjects={updateProjects}\n              closeProjectField = {closeProjectField}\n            />\n          )}\n          {\"\\n\"}\n          {!viewAddProject && <Button onClick={addProjectField}>New Project</Button>}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>\n          Cancel\n        </Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>\n          Save changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getProfile, deleteProfile } from './profileSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteProfile({ profile, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n    // Wait until profile is updated before dismissing the component\n    dispatch(deleteProfile(profile.id))\n      .then(() => dispatch(getProfile()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Profile</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete your profile <b>{profile.email}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport ContentItem from \"../content/ContentItem\";\nimport EditProfile from \"./EditProfile\";\nimport DeleteProfile from \"./DeleteProfile\";\n\nexport default function ProfileItem({ profile, projects }) {\n  const user = useSelector((state) => state.user);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  //Fields for profile\n  const { logo, education, experience, resume } = profile;\n\n  //Uses google's embedded file viewer\n  const resumeUrl = \"//docs.google.com/gview?url=\" + resume + \"&embedded=true\";\n  //Checks which fields to render (not actually necessary)\n  const hasLogo = require(\"is-image\");\n  const hasResume = require(\"is-valid-http-url\");\n  const hasEducation = education.length > 0;\n  const hasExperience = experience.length > 0;\n  const hasProjects = projects.length > 0;\n\n  return (\n    <React.Fragment>\n\n      <EditProfile\n        profile={profile}\n        projects={projects}\n        show={showEdit}\n        closeHandler={handleEditClose}\n      />\n      <DeleteProfile\n        profile={profile}\n        show={showDelete}\n        closeHandler={handleDeleteClose}\n      />\n      <Container className=\"profile-user\">\n        <Row>\n          <Col>\n            <Image roundedCircle className=\"avatar\" src={user.avatar} />\n          </Col>\n          <Col>\n            {hasLogo && <Image roundedCircle className=\"logo\" src={logo} />}\n          </Col>\n        </Row>\n        <div className=\"line1\"></div>\n      </Container>\n      <Container className=\"profile-details\">\n        <div className=\"name\">\n          {user.firstName} {user.lastName}\n        </div>\n        <div className=\"email\">{user.email}</div>\n        <div className=\"line2\"></div>\n      </Container>\n      <Container className=\"profile-resume\">\n        <Row>\n          <h4 className=\"heading\">Resume</h4>\n          {hasResume && (\n            <iframe\n              title=\"resume\"\n              src={resumeUrl}\n              style={{ width: 400, height: 500 }}\n              frameBorder=\"0\"\n            ></iframe>\n          )}\n        </Row>\n      </Container>\n      <Container className=\"profile\">\n        <Row>\n        <Button\n        variant=\"link\"\n        className=\"profile-edit\"\n        onClick={() => setShowEdit(true)}\n      >\n        Edit\n      </Button>\n      <Button\n        variant=\"link\"\n        className=\"float-right text-danger\"\n        onClick={() => setShowDelete(true)}\n      >\n        Delete\n      </Button>\n        </Row>\n        <Container className=\"profile-education\">\n          <div className=\"box\"><h4 className=\"heading\">Education</h4></div>\n          {hasEducation && (\n            <div className=\"field\">\n              {education.map((education) => (\n                <div key={education}>{education}</div>\n              ))}\n            </div>\n          )}\n        </Container>\n\n        <Container className=\"profile-experience\">\n          <div className=\"box\"><h4 className=\" heading\">Experience</h4></div>\n          {hasExperience && (\n            <div className=\"field\">\n              {experience.map((experience) => (\n                <div key={experience}>{experience}</div>\n              ))}\n            </div>\n          )}\n        </Container>\n          <Container className=\"profile-project\">\n            <div className=\"box\"><h4 className =\"heading\">Projects</h4></div>\n              <p>{\"\\n\"}{\"\\n\"}</p>\n            {hasProjects && (\n              <div className=\"card-projects\">\n                {projects.map((projects) => (\n                  <ContentItem content={projects} />\n                ))}\n              </div>\n            )}\n            </Container>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getProfile } from '../profile/profileSlice';\nimport Row from 'react-bootstrap/Row';\n\nimport ProfileItem from '../profile/ProfileItem';\n\n// Contains the user's profile\nexport default function Profile() {\n\n  const dispatch = useDispatch();\n  //Getting the user and profile details \n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n  const content = useSelector(state => state.content); \n  const isLoaded = useSelector(state => state.profile.isLoaded);\n\n  // Reloading profile\n  useEffect(() => {\n\n    async function fetch() { dispatch(getProfile(user.profile)) }\n\n    // Skip loading if already in state\n    if (user.profile && user.profile !== profile.id) fetch();\n  }, [dispatch, user, profile]);\n\n  //Alternative solution from making a list of API calls \n  //For each project in the profile, searchs through the content list for a matching id \n  //Adds to array if project is found (otherwise currently does nothing)\n  const getProjects = () => {  \n    const projects = []; \n    if(isLoaded){\n      const contentLength = content.length; \n      const projectLength = profile.projects.length; \n      for(let i = 0; i < projectLength; i++){ \n        const id = profile.projects[i]\n        for(let j = 0; j < contentLength; j++){ \n          if(id === content[j].id){ \n            projects.push(content[j]); \n            break; \n          }\n        }\n      }\n    }\n    return projects; \n  }\n\n  //Calls the getProjects function to get a list of projects \n  const projectList = getProjects(); \n\n  //Will only load the profile if its completely loaded \n  return(\n    <div>\n      <div>\n      <Row>\n        <div className =\"pageheading-rectangle1\" ><h1 className=\"pageheading-heading\">Your Profile</h1></div>        <div className = \"pageheading-rectangleMash\"></div>\n        <div className = \"pageheading-decoration1\"/>\n        <div className = \"pageheading-decoration2\"/>\n      </Row>\n      </div>\n      <div className = \"mt-2\">\n      {isLoaded && <ProfileItem profile = {profile} projects ={projectList} />}\n      </div>\n    </div>\n  );\n}\n ","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n//rich text editor\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { createContent, getContent } from \"../content/contentSlice\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { FormRadio, Modal, ModalBody } from 'shards-react';\nimport HashLoader from 'react-spinners/HashLoader';\n\nexport default function AddContent() {\n\n  const dispatch = useDispatch();\n\n  const uploading = useSelector(state => state.app.loading.createContent);\n\n  const [content, updateContent] = useState({});\n  const [richText, updateRichText] = useState(\"\");\n  const [file, updateFile] = useState();\n  const [contentIsFile, setContentIsFile] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const onSubmitHandler = (e) => {\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    //convert to FormData so we can send files\n    const data = new FormData();\n    for (let field in content) {\n      data.set(field, content[field]);\n    }\n    if (contentIsFile && file) {\n      data.set(\"file\", file);\n    } else if (!contentIsFile) {\n      data.set(\"content\", richText);\n    }\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createContent(data))\n      .then(() => {\n        resetForm();\n        toggleConfirmation();\n        dispatch(getContent());\n      });\n  }\n\n  const toggleContentType = () => setContentIsFile(!contentIsFile);\n\n  const onChangeHandler = (e) => updateContent({ ...content, [e.target.id]: e.target.value });\n\n  const resetForm = () => {\n    updateContent({ title: '', description: '' });\n    updateRichText('');\n  }\n\n  const onContentChangeHandler = (e) => updateRichText(e);\n\n  const onFileChosenHandler = (e) => updateFile(e.target.files[0]);\n\n  const toggleConfirmation = () => setShowConfirmation(!showConfirmation);\n\n  const enabledTools = [\n    [{ header: [1, 2, false] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\"],\n    [\"clean\"],\n  ];\n\n  return (\n    <>\n      <Modal open={showConfirmation} toggle={toggleConfirmation} size=\"sm\">\n        <ModalBody className=\"addcontent-confirmation-modal\">\n          <div className=\"addcontent-confirmation-modal\">\n            Success!\n            <Link className=\"addcontent-next-btn\" to=\"/dashboard/content\"><strong>See content</strong> →</Link>\n          </div>\n        </ModalBody>\n      </Modal>\n      <div className=\"pageheading-rectangle1\">\n        <h1 className=\"pageheading-heading\">Add Content</h1>\n        <div className=\"pageheading-decoration1\" />\n        <div className=\"pageheading-decoration2\" />\n      </div>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <div className=\"addcontent\">\n          <div className=\"title\">\n            <div className=\"title-box\">\n              <div className=\"title-heading\">Title</div>\n            </div>\n            <Form.Group controlId=\"title\">\n              <Form.Control\n                className=\"title-input\"\n                type=\"text\"\n                value={content.title}\n                onChange={onChangeHandler}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"description\">\n            <div className=\"description-box\">\n              <div className=\"description-heading\">Description</div>\n            </div>\n            <Form.Group controlId=\"description\">\n              <Form.Control\n                as=\"textarea\"\n                rows=\"5\"\n                value={content.description}\n                onChange={onChangeHandler}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"content\">\n            <FormRadio\n              inline\n              name=\"contenttype\"\n              checked={!contentIsFile}\n              onChange={toggleContentType}\n            >\n              Text\n            </FormRadio>\n            <FormRadio\n              inline\n              name=\"contenttype\"\n              checked={contentIsFile}\n              onChange={toggleContentType}\n            >\n              File\n            </FormRadio>\n            <Row>\n            <div>{\"\\n\"}{\"\\n\"}</div>\n            </Row>\n            <div className=\"content\">\n            <div className=\"content-box\">\n              <div className=\"content-heading\">Content</div>\n            </div>\n            {!contentIsFile ? (\n              <Form.Group controlId=\"content\">\n                <ReactQuill\n                  modules={{ toolbar: enabledTools }}\n                  theme=\"snow\"\n                  value={richText}\n                  onChange={onContentChangeHandler}\n                />\n              </Form.Group>\n            ) : (\n              <Form.Group controlId=\"file\">\n                <Form.Label>File</Form.Label>\n                <br />\n                <input type=\"file\" name=\"file\" onChange={onFileChosenHandler} />\n              </Form.Group>\n            )}\n          </div>\n          </div>\n          <Button type=\"submit\" variant=\"info\">\n            {uploading\n              ? <>Uploading <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={uploading}/></span></>\n              : 'Create'}\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilePdf, faEnvelope, faArrowCircleDown, faArrowCircleUp } from '@fortawesome/free-solid-svg-icons';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function Share() {\n\n  const { user, profile, content } = useSelector(state => state);\n\n  const [_projects, toggleExpand] = useState(content.map(project => { return { ...project, expand: false } }));\n\n  const onExpandClick = id => toggleExpand(_projects.map(\n    project => project.id === id\n      ? { ...project, expand: !project.expand }\n      : project\n  ));\n\n  const getContentType = userContent => {\n\n    if (userContent) {\n      if (isUrl(userContent)) {\n        return (isImage(userContent.split('?')[0])) ? 'image' : 'url';\n      } else {\n        return 'text';\n      }\n    }\n\n    return null;\n  }\n\n  const toLongDate = date => Intl.DateTimeFormat('en-AU', {\n    day: '2-digit',\n    month: 'long',\n    year: 'numeric'\n  }).format(Date.parse(date));\n\n  return(\n    <>\n      <Button as={Link} to=\"/dashboard\" variant=\"link\" className=\"return\">Back to dashboard</Button>\n      <Container className=\"share\">\n        <Row>\n          <Col xs=\"auto\">\n            <Image roundedCircle className=\"logo\" src={profile.logo}/>\n          </Col>\n          <Col>\n            <Row className=\"name\">{user.firstName} {user.lastName}</Row>\n            <Row className=\"bio\">\n              <Col>\n                <h6>Experience</h6>\n                {profile.experience.map(experience => <p className=\"bio-item\">{experience}</p>)}\n              </Col>\n              <Col>\n                <h6>Education</h6>\n                {profile.education.map(education => <p className=\"bio-item\">{education}</p>)}\n              </Col>\n            </Row>\n            <Row className=\"links\">\n              <Button as=\"a\" href={profile.resume} target=\"_blank\" variant=\"link\"><FontAwesomeIcon icon={faFilePdf}/> Resume</Button>\n              <Button as=\"a\" href={`mailto:${user.email}`} variant=\"link\"><FontAwesomeIcon icon={faEnvelope}/> {user.email}</Button>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          {_projects.map(project =>\n            <Row key={project.id} className=\"project\">\n              <Row>\n                <Col xs=\"auto\" className=\"date\">{toLongDate(project.displayDate)}</Col>\n                <Col>\n                  <Row className=\"title\">{project.title}</Row>\n                  <Row className=\"description\">{project.description}</Row>\n                  <Button variant=\"link\" onClick={() => onExpandClick(project.id)}>\n                    {project.expand && <>Hide project <FontAwesomeIcon icon={faArrowCircleUp}/></>}\n                    {!project.expand && <>Show project <FontAwesomeIcon icon={faArrowCircleDown}/></>}\n                  </Button>\n                </Col>\n              </Row>\n              <Collapse in={project.expand}>\n                <Row>\n                  {(getContentType(project.content) === 'text') && <div dangerouslySetInnerHTML={{ __html: project.content }}/>}\n                  {(getContentType(project.content) === 'image') && <a href={project.content} target=\"_blank\" rel=\"noopener noreferrer\"><Image src={project.content}/></a>}\n                  {(getContentType(project.content) === 'url') && <a href={project.content} target=\"_blank\" rel=\"noopener noreferrer\">External link</a>}\n                </Row>\n              </Collapse>\n              <hr/>\n            </Row>\n          )}\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Landing from '../features/pages/Landing';\nimport Login from '../features/user/Login';\nimport Register from '../features/user/Register';\nimport Homepage from '../features/pages/Homepage';\nimport Dashboard from '../features/dashboard/Dashboard';\nimport Feed from '../features/dashboard/Feed';\nimport Profile from '../features/profile/Profile';\nimport AddContent from '../features/content/AddContent';\nimport Share from '../features/share/Share';\n\nexport const publicRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    page: <Landing/>,\n    landing: <Login/>\n  },\n  {\n    path: \"/register\",\n    exact: true,\n    page: <Landing/>,\n    landing: <Register/>\n  }\n];\n\nexport const privateRoutes = [\n  {\n    path: \"/homepage\",\n    exact: true,\n    page: <Homepage/>\n  },\n  {\n    path: \"/dashboard\",\n    exact: false,\n    page: <Dashboard/>\n  },\n  {\n    path: \"/dashboard/content\",\n    exact: true,\n    dashboard: <Feed/>\n  },\n  {\n    path: \"/dashboard/content/add\",\n    exact: true,\n    dashboard: <AddContent/>\n  },\n  {\n    path: \"/dashboard/profile\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <Profile/>\n  },\n  {\n    path: \"/share\",\n    exact: true,\n    page: <Share/>\n  }\n];\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport { authenticate } from '../features/user/userSlice';\nimport { token } from '../common/api';\nimport { publicRoutes, privateRoutes } from '../common/routes';\n\nimport '../sass/main.scss';\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const authenticated = useSelector(state => state.user.isAuthenticated);\n\n  useEffect(() => {\n    async function fetch() { if (token.get() !== null) dispatch(authenticate()) }\n    fetch();\n  });\n\n  return(\n    <Router>\n      <Switch>\n        {publicRoutes.map((route, index) =>\n          <Route\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            children={route.page}\n          />\n        )}\n        {privateRoutes.map((route, index) =>\n          <PrivateRoute\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            test={authenticated}\n            fallback=\"/\"\n            children={route.page}\n          />\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nconst PrivateRoute = ({ _props, children, test, fallback }) => {\n  return(\n    <Route {..._props} render={() =>\n      test ? children : <Redirect to={{ pathname: fallback }}/>\n    }/>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './app/store';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}