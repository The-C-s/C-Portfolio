{"version":3,"sources":["serviceWorker.js","app/appSlice.js","common/api.js","features/content/contentSlice.js","features/user/userSlice.js","features/profile/profileSlice.js","app/reducers.js","app/store.js","features/user/Login.js","features/pages/Landing.js","features/dashboard/TopNavbar.js","features/dashboard/NavLink.js","features/dashboard/SideNavbar.js","features/user/EditUser.js","features/dashboard/Dashboard.js","features/content/Tags.js","features/content/VisibilityDot.js","features/content/EditContent.js","features/content/DeleteContent.js","features/content/ContentItem.js","features/dashboard/Feed.js","features/profile/Projects.js","features/profile/EditProfile.js","features/profile/DeleteProfile.js","features/profile/ProfileItem.js","features/profile/Profile.js","features/content/AddContent.js","features/share/Share.js","common/routes.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","app","createSlice","name","initialState","errors","loading","reduers","extraReducers","state","startLoading","stopLoading","action","setError","payload","removeError","error","console","axios","defaults","baseURL","token","localStorage","getItem","_token","setItem","removeItem","authenticateCredentials","user","a","post","authenticateToken","get","getAllContent","createContent","content","editContent","put","deleteContent","id","delete","createProfile","profile","editProfile","deleteProfile","getProfile","addLogo","logo","addResume","resume","updateUser","userParams","getContent","createAsyncThunk","apiCreateContent","apiEditContent","apiDeleteContent","reducers","fulfilled","_","data","login","authenticate","editUser","isAuthenticated","setUser","logout","rejected","actions","apiCreateProfile","apiGetProfile","apiEditProfile","apiDeleteProfile","apiAddLogo","apiAddResume","isLoaded","education","experience","projects","combineReducers","appReducer","profileReducer","contentReducer","userReducer","middleware","thunk","next","headers","common","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Login","onLogin","dispatch","useDispatch","loggingIn","useSelector","useState","email","password","form","updateForm","onChangeHandler","e","target","value","className","Form","onSubmit","preventDefault","then","Group","Control","type","placeholder","onChange","Button","variant","size","color","Landing","history","useHistory","Container","fluid","Row","Col","push","TopNavbar","Navbar","Nav","Link","as","to","Item","onClick","NavLink","label","activeOnlyWhenExact","useRouteMatch","path","exact","SideNavbar","EditUser","show","closeHandler","userFromState","_user","updateDetails","Fragment","Modal","onHide","Header","Title","Body","Image","src","avatar","alt","roundedCircle","controlId","Label","rows","username","firstName","lastName","Footer","log","Dashboard","routes","privateRoutes","filter","route","dashboard","showUserEdit","setShowUserEdit","useEffect","fetch","role","map","index","key","children","Tags","tags","tag","clickHandler","VisibilityDot","onMouseOver","EditContent","_content","updateContent","includes","_richText","updateRichText","_file","updateFile","showFile","setShowFile","title","description","files","modules","toolbar","theme","_data","FormData","field","set","DeleteContent","isUrl","require","isImage","ContentItem","showEdit","setShowEdit","showDelete","setShowDelete","handleTitleClick","displayDate","showTags","length","image","split","date","Intl","DateTimeFormat","day","month","year","format","Date","parse","Card","Img","ImgOverlay","Dropdown","alignRight","Toggle","FontAwesomeIcon","icon","faEllipsisV","Menu","Feed","gettingContent","gettingUser","width","count","item","Project","updateProfile","updateProjects","i","EditProfile","_profile","_projects","_education","updateEducation","_experience","updateExperience","_logo","updateLogo","_resume","updateResume","viewAddProject","setView","onChangeEducationHandler","tmp","onChangeExperienceHandler","InputGroup","Append","splice","deleteEducationField","deleteExperienceField","typeof","readOnly","deleteProjectField","DeleteProfile","ProfileItem","resumeUrl","hasLogo","hasResume","hasEducation","hasExperience","hasProjects","ListGroup","style","height","frameBorder","Profile","projectList","contentLength","projectLength","j","getProjects","AddContent","richText","file","Share","project","expand","toggleExpand","getContentType","userContent","xs","href","faFilePdf","faEnvelope","faArrowCircleUp","faArrowCircleDown","Collapse","in","dangerouslySetInnerHTML","__html","rel","publicRoutes","page","App","authenticated","test","fallback","PrivateRoute","_props","render","pathname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6fd8d9ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * Redux slice for state.app, responsible for 'loading' flags and error tracking.\n */\nconst app = createSlice({\n  name: 'app',\n  initialState: {\n    errors: {},\n    loading: {}\n  },\n  reduers: {},\n  extraReducers: {\n    'user/login/pending': state => { return startLoading(state, 'login') },\n    'user/login/fulfilled': state => { stopLoading(state, 'login') },\n    'user/login/rejected': (state, action) => { setError(state, 'login', action.payload) },\n\n    'user/authenticate/pending': state => { return startLoading(state, 'login') },\n    'user/authenticate/fulfilled': state => { stopLoading(state, 'login') },\n    'user/authenticate/rejected': (state, action) => { setError(state, 'login', action.payload) },\n\n    'user/update/pending': state => { return startLoading(state, 'update') },\n    'user/update/fulfilled': state => { stopLoading(state, 'update') },\n    'user/update/rejected': (state, action) => { setError(state, 'update', action.payload) },\n\n    'content/getContent/pending': state => { return startLoading(state, 'getContent') },\n    'content/getContent/fulfilled': state => { stopLoading(state, 'getContent') },\n    'content/getContent/rejected': (state, action) => { setError(state, 'getContent', action.payload) },\n\n    'content/createContent/pending': state => { return startLoading(state, 'createContent')},\n    'content/createContent/fulfilled': state => { stopLoading(state, 'createContent') },\n    'content/createContent/rejected': (state, action) => { setError(state, 'createContent', action.payload) },\n\n    'content/editContent/pending': state => { return startLoading(state, 'editContent') },\n    'content/editContent/fulfilled': state => { stopLoading(state, 'editContent') },\n    'content/editContent/rejected': (state, action) => { setError(state, 'editContent', action.payload) },\n\n    'content/deleteContent/pending': state => { return startLoading(state, 'deleteContent') },\n    'content/deleteContent/fulfilled': state => { stopLoading(state, 'deleteContent') },\n    'content/deleteContent/rejected': (state, action) => { setError(state, 'deleteContent', action.payload) }\n  }\n});\n\n/**\n * Sets state.app.loading.action to true.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @return The modified state.\n */\nconst startLoading = (state, action) => {\n\n  removeError(state, action);\n\n  return {\n    ...state,\n    loading: {\n      ...state.loading,\n      [action]: true\n    }\n  }\n};\n\n/**\n * Removes state.app.loading.action from the state.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst stopLoading = (state, action) => delete state.loading[action];\n\n/**\n * Sets state.app.errors.action to the error string and outputs the error to the console.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n * @param {String} error - An associated error code or message.\n * @return The modified state.\n */\nconst setError = (state, action, error) => {\n\n  console.error(`${action}: ${error}`);\n\n  return {\n    ...state,\n    errors: {\n      ...state.errors,\n      [action]: error\n    }\n  }\n};\n\n/**\n * Removes state.app.errors.action from the state.\n * @param {*} state \n * @param {*} action - The action name without the feature name, i.e. 'login' for 'user/login'.\n */\nconst removeError = (state, action) => delete state.errors[action];\n\nexport default app.reducer;\n","import axios from 'axios';\n\n// API not working locally? This will be why\n// TODO: set using env vars instead (will still need to set localhost port)\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\n// axios.defaults.baseURL = 'http://localhost:50000';\n\nconst AUTH_USER = '/users/authenticate';\nconst CURRENT_USER = '/users/current';\nconst CONTENT = '/content/';\nconst CREATE_CONTENT = '/content/create'; \nconst CREATE_PROFILE = '/profile/create'; \nconst PROFILE = '/profile/'; \nconst ADD_LOGO = '/profile/addLogo/';\nconst ADD_RESUME = '/profile/addResume/'; \nconst UPDATE_USER = '/users/update';\n\nexport const token = {\n  get: () => localStorage.getItem('token'),\n  set: _token => localStorage.setItem('token', _token),\n  delete: () => localStorage.removeItem('token')\n}\n\n// Takes email and password as an object and returns the user's details and token\nexport const authenticateCredentials = async user => await axios.post(AUTH_USER, user);\n\n// Uses locally-stored token and returns the user's details\nexport const authenticateToken = async () => await axios.get(CURRENT_USER);\n\n// Uses an existing token if user is logged in and returns all their content (as a list, not an object)\nexport const getAllContent = async () => await axios.get(CONTENT);\n\n//Gets one post from an id \n//const getSingleContent = async id => await axios.get(`${CONTENT}${id}`); \n\n// Takes a content object and authorises with existing token\nexport const createContent = async content => await axios.post(CREATE_CONTENT, content);\n\n// Takes a content object (that must include the id field) and authorises with existing token\nexport const editContent = async content => await axios.put(`${CONTENT}${content.get('id')}`, content);\n\n// Takes just the content id (as a string) and authorises with existing token\nexport const deleteContent = async id => await axios.delete(`${CONTENT}${id}`);\n\n// Takes profile object and authorises with existing token \nexport const createProfile = async profile => await axios.post(CREATE_PROFILE, profile); \n\n// Takes a profile object (text only) and id and authorises with existing token\nexport const editProfile = async profile => await axios.put(`${PROFILE}${profile.id}`, profile); \n\n// Takes a profile id and authorises with existing token \nexport const deleteProfile = async id => await axios.delete(`${PROFILE}${id}`); \n\n// Takes a profile id and authorises with existing token, returns profile\nexport const getProfile = async id => await axios.get(`${PROFILE}${id}`); \n\n//Takes a profile id and authorises with existing token \nexport const addLogo = async (id, logo) => await axios.post(`${ADD_LOGO}${id}`, logo);  \n\nexport const addResume = async (id, resume) => await axios.post(`${ADD_RESUME}${id}`, resume);  \n\nexport const updateUser = async userParams => await axios.put(UPDATE_USER, userParams);\n\n\n","/*\n * The content 'slice' of the state. Centralises all content-related\n * functionality including API calls.\n */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  getAllContent,\n  createContent as apiCreateContent,\n  editContent as apiEditContent,\n  deleteContent as apiDeleteContent\n} from '../../common/api';\n\n// Async Thunks required whenever there's an API call\nexport const getContent = createAsyncThunk(\n  'content/getContent',\n  getAllContent\n);\n\nexport const createContent = createAsyncThunk(\n  'content/createContent',\n  apiCreateContent,\n\n);\n\nexport const editContent = createAsyncThunk(\n  'content/editContent',\n  apiEditContent\n);\n\nexport const deleteContent = createAsyncThunk(\n  'content/deleteContent',\n  apiDeleteContent\n);\n\nconst content = createSlice({\n  name: 'content',\n  initialState: [], // A list! Not an object, be careful. Caused me a few issues.\n  reducers: {},\n  extraReducers: {\n    'user/logout': () => { return [] }, // Trigger content to reset itself when user logs out\n    [getContent.fulfilled]: (_, action) => { return [...action.payload.data] }\n  }\n});\n\n// For importing to src/app/reducers.js\nexport default content.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n  authenticateCredentials,\n  authenticateToken,\n  updateUser,\n  token\n} from '../../common/api';\n\nexport const login = createAsyncThunk(\n  'user/login',\n  authenticateCredentials\n);\n\nexport const authenticate = createAsyncThunk(\n  'user/authenticate',\n  authenticateToken\n);\n\nexport const editUser = createAsyncThunk(\n  'user/update',\n  updateUser\n);\n\nconst user = createSlice({\n  name: 'user',\n  initialState: { isAuthenticated: token.get() !== null },\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        token: token.get(),\n        isAuthenticated: true\n      }\n    },\n    logout: () => {\n      token.delete();\n      return { isAuthenticated: false }\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n\n      // Persist JWT to local storage\n      token.set(action.payload.data.token);\n\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    [authenticate.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    },\n    [authenticate.rejected]: () => {\n      token.delete();\n      return { isAuthenticated: false } \n    }\n  }\n});\n\n// Explicitly export the non-async reducers\nexport const { logout, setUser } = user.actions;\n\nexport default user.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport {\n    createProfile as apiCreateProfile,\n    getProfile as apiGetProfile,\n    editProfile as apiEditProfile,\n    deleteProfile as apiDeleteProfile,\n    addLogo as apiAddLogo, \n    addResume as apiAddResume\n} from '../../common/api';\n\n//API calls \nexport const createProfile = createAsyncThunk(\n    'profile/createProfile',\n    apiCreateProfile\n);\n\nexport const getProfile = createAsyncThunk(\n    'profile/getProfile',\n    apiGetProfile\n);\n\nexport const editProfile = createAsyncThunk(\n    'profile/updateProfile', \n    apiEditProfile\n); \n\nexport const deleteProfile = createAsyncThunk(\n    'profile/deleteProfile', \n    apiDeleteProfile\n);\n\nexport const addLogo = createAsyncThunk(\n    'profile/addLogo', \n    apiAddLogo\n);\n\nexport const addResume = createAsyncThunk(\n    'profile/addResume', \n    apiAddResume\n);\n\n//Stores profile in state.profile \nconst profile = createSlice({\n    name: 'profile',\n    //Added default arrays, as the state takes 2 seconds to actually get the data\n    initialState: {isLoaded: false, education:[], experience: [], projects: []},\n    reducers: {},\n    extraReducers: {\n        //Resets state on logout (think its necessary)\n        'user/logout': () => { return {}},\n        //Returns profile data \n        [getProfile.fulfilled]: (state, action) => {  \n            return {\n                ...state,\n                ...action.payload.data, \n                isLoaded: true \n            }\n        }\n    }\n  });\n\nexport default profile.reducer;\n","/*\n * Redux takes any reducers we add here and makes them\n * available app-wide.\n */\n\nimport { combineReducers } from 'redux';\nimport appReducer from './appSlice';\nimport contentReducer from '../features/content/contentSlice';\nimport userReducer from '../features/user/userSlice';\nimport profileReducer from '../features/profile/profileSlice';\n \nexport default combineReducers({\n  app: appReducer,\n  profile: profileReducer,\n  content: contentReducer,\n  user: userReducer\n});\n","/*\n * store.js\n * Boilerplate code. Redux store that controls application state.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\n\n//import auth from '../common/api';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Middleware to force authorisation header on every action\nconst auth = () => next => action => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n  return next(action);\n};\n\n// Any middleware included goes here\nconst middleware = [thunk, auth];\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\n// Add enhancers (if any)\nconst enhancers = [middlewareEnhancer];\n\n// Give access to Redux Devtools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer, initialState, composedEnhancers);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport HashLoader from 'react-spinners/HashLoader';\n\nimport { login } from './userSlice';\n\nexport default function Login({ onLogin }) {\n\n  const dispatch = useDispatch();\n  const loggingIn = useSelector(state => state.app.loading.login);\n  const [form, updateForm] = useState({ email: '', password: '' });\n\n  const onSubmitHandler = e => {\n\n    e.preventDefault();\n\n    dispatch(login(form))\n      .then(() => onLogin());\n  }\n\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n\n  return(\n    <div className=\"form-box\">\n      <Form className=\"login-form\" onSubmit={onSubmitHandler}>\n        <h2>Login</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"email\" \n            id=\"email\"\n            placeholder=\"Email Address\" \n            value={form.email}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"  \n            id=\"password\" \n            placeholder=\"Password\" \n            value={form.password}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Button className=\"btn-login\" type=\"submit\" variant=\"primary\">\n          {loggingIn\n            ? <>Logging in <span className=\"spinner-login\"><HashLoader size={20} color={\"#ffffff\"} loading={loggingIn}/></span></>\n            : \"Log in\"}\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Login from '../user/Login';\n\nexport default function Landing() {\n\n  const history = useHistory();\n\n  const loginHandler = () => history.push('/dashboard');\n\n  return(\n    <Container fluid>\n      <Row className=\"no-gutter\">\n        <Col className=\"bg-info d-flex justify-content-center\">\n          <div className=\"splash-container\">\n            <h1 className=\"display-3 text-white\">cPortfolio</h1>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"splash-container\">\n            <Login onLogin={loginHandler}/>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../user/userSlice';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function TopNavbar() {\n\n  const dispatch = useDispatch();\n\n  return(\n    <Navbar variant=\"dark\" className=\"fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <Nav.Link as={Link} to=\"/dashboard\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Dashboard</Nav.Link>\n      <Nav className=\"px-3\">\n        <Nav.Item className=\"text-nowrap\">\n          <Nav.Link as={Link} to=\"/\" onClick={() => dispatch(logout())}>Sign out</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function NavLink({ label, to, activeOnlyWhenExact }) {\n\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n\n  return(\n    <Nav.Link\n      as={Link}\n      to={to}\n      className={match ? \"active\" : \"\"}>\n        {label}\n    </Nav.Link>\n  );\n}\n","import React from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\n\nimport NavLink from './NavLink';\n\nexport default function SideNavbar() {\n  return(\n    <Nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div className=\"sidebar-sticky\">\n        <Nav className=\"flex-column\">\n          <Nav.Item>\n            <NavLink to=\"/dashboard\" activeOnlyWhenExact={true} label=\"Dashboard\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/profile\" label=\"Profile\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/add\" label=\"Add Content\"/>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/share\" label=\"Share View\"/>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </Nav>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {editUser} from './userSlice';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport Image from 'react-bootstrap/Image';\n\nexport default function EditUser({show, closeHandler, user}) {\n    //const user = useSelector(state => state.user);\n\n    const userFromState = useSelector(state => state.user);\n\n\n    //Initialised with the user fields.\n\n    const [_user, updateDetails] = useState(user);\n    const dispatch = useDispatch();\n\n    //submits the new user details to the server to update in the database\n    const handleEditUser = () => {\n        dispatch(editUser(_user))\n        .then(closeHandler);\n    };\n\n    //source of truth for the user details, updated alongside the form when editing\n    const onChangeHandler = e => updateDetails({ ..._user, [e.target.id]: e.target.value});\n\n    const resetHandler = () => {\n      //\n      updateDetails(userFromState);\n      console.log(_user);\n      console.log(userFromState);\n    }\n    \n    //<img src=\"...\" class=\"rounded mx-auto d-block\" alt=\"...\">\n\n    return (\n    <React.Fragment>\n        <Modal show = {show} onHide = {closeHandler}>\n        <Modal.Header><Modal.Title>Edit User Details</Modal.Title></Modal.Header>\n        <Modal.Body>\n        <Image src = {userFromState.avatar} alt = \"Hello Darkness\" roundedCircle className = \"rounded mx-auto d-block\"/>\n        <Form>\n        <Form.Group controlId = \"username\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control as=\"textarea\" rows = \"1\" value = {_user.username} onChange = {onChangeHandler}/>\n        </Form.Group>\n          <Form.Group controlId=\"firstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.firstName} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"lastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.lastName} onChange={onChangeHandler}/>\n          </Form.Group>\n        </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"link\" onClick = {resetHandler}>Reset Changes</Button>\n            <Button variant=\"warning\" onClick = {handleEditUser}>Save changes</Button>\n            <Button variant=\"link\" onClick={closeHandler}>Cancel</Button>\n        </Modal.Footer>\n        </Modal>\n        \n    </React.Fragment>\n    );\n}\n\n/* <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n            Edit\n        </Button>\n        <Image src = {user.avatar} alt = \"Hello Darkness\"/>\n        <h1 className=\"h2 ml-5 mt-5\">Username: {user.username}</h1> \n        <h1 className=\"h2 ml-5 mt-5\">First Name: {user.firstName}</h1>\n        <h1 className=\"h2 ml-5 mt-5\">Last Name: {user.lastName}</h1> */","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\n\nimport TopNavbar from './TopNavbar';\nimport SideNavBar from './SideNavbar';\nimport EditUser from '../user/EditUser';\n\nimport { getProfile } from '../profile/profileSlice';\nimport { privateRoutes } from '../../common/routes';\n\nexport default function Dashboard() {\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const routes = privateRoutes.filter(route => route.dashboard !== null);\n  const [showUserEdit, setShowUserEdit] = useState(false);\n\n  useEffect(() => {\n\n    async function fetch() {\n      dispatch(getProfile(user.profile));\n    }\n    fetch();\n  });\n\n  const handleEditClose = () => setShowUserEdit(false);\n\n  return(\n    <>\n      <TopNavbar/>\n      <Container fluid>\n        <Row>\n          <SideNavBar/>\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n            <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n              User Details\n            </Button>\n            <Switch>\n              {routes.map((route, index) =>\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={route.dashboard}\n                />\n              )}\n            </Switch>\n          </main>\n        </Row>\n        <EditUser show = {showUserEdit} closeHandler = {handleEditClose} user = {user} />\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default function Tags({ tags }) {\n\n  const clickHandler = tag => console.log(`'${tag}' tag clicked.`);\n\n  return(\n    <React.Fragment>\n      tags&nbsp;&nbsp;&nbsp;›{tags.map(\n        tag => <React.Fragment>\n          &nbsp;&nbsp;&nbsp;\n          <Button\n            variant=\"link\"\n            className=\"contentitem-tag\"\n            key={tag}\n            onClick={() => clickHandler(tag)}\n          >{tag}</Button>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function VisibilityDot({ id }) {\n\n  const mouseOverHandler = () => console.log(`'${id}' visibility mouse over`);\n\n  return(\n    <React.Fragment>\n      <span className=\"contentitem-visibility-dot\" onMouseOver={mouseOverHandler}></span>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { editContent, getContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditContent({ content, show, closeHandler }) {\n\n  //console.log(content);\n  const [_content, updateContent] = useState(content);\n  //set richtext to blank if the content is a cloudinary link, the content otherwise\n  const [_richText, updateRichText] = useState(!content.content || content.content.includes(\"res.cloudinary.com\") ? '' : content.content);\n  const [_file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => { setShowFile(false); updateFile('undefined'); }\n  const toggleShowFileOn = () => { setShowFile(true); }\n\n  const dispatch = useDispatch();\n  const editClickHandler = () => {\n\n    console.log(_content);\n\n    //convert to FormData so we can send files\n    const _data = new FormData();\n    for (let field in _content) {\n      _data.set(field, _content[field]);\n    }\n    if(showFile && _file) { _data.set('file', _file); _data.delete('content'); }\n    else if (!showFile) { _data.set('content', _richText); }\n\n    dispatch(editContent(_data))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n\n  }\n\n  const deleteFileAndCloseHandler = e => {\n    updateFile('undefined');\n    closeHandler();\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ..._content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={_content.title} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" value={_content.description} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n          <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n          { !showFile ?\n          <Form.Group controlId=\"content\">\n            <Form.Label>Content</Form.Label>\n            <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={_richText} onChange={onContentChangeHandler}/>\n          </Form.Group>\n          :\n          <Form.Group controlId=\"file\">\n            <Form.Label>File</Form.Label>\n            <br/>\n            <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n          </Form.Group>\n          }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={deleteFileAndCloseHandler}>Cancel</Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContent, deleteContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteContent({ content, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n\n    // Wait until content is updated before dismissing the component\n    dispatch(deleteContent(content.id))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete <b>{content.title}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport Tags from './Tags';\nimport VisibilityDot from './VisibilityDot';\nimport EditContent from './EditContent';\nimport DeleteContent from './DeleteContent';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ContentItem({ content }) {\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n  const handleTitleClick = () => console.log(`${content.id} clicked.`);\n\n  const { id, title, description, tags, displayDate } = content;\n  const showTags = tags ? tags.length > 0 : false;\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  const date = () => (\n    displayDate\n      ? Intl.DateTimeFormat('en-AU', {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric'\n        }).format(Date.parse(displayDate))\n      : \"\"\n  );\n\n  return(\n    <React.Fragment>\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\n      <Row>\n        <Card>\n        {image ?\n          <React.Fragment>\n            <Card.Img src={content.content} alt={title}/>\n            <Card.ImgOverlay className=\"contentitem-header\" onClick={handleTitleClick}>\n              <div className=\"contentitem-title-visibility\">\n                <VisibilityDot id={id}/>\n                <div className=\"contentitem-title\">{title}</div>\n              </div>\n              <div className=\"contentitem-date\">{date}</div>\n            </Card.ImgOverlay>\n          </React.Fragment>\n        :\n          <Card.Header className=\"contentitem-header\" onClick={handleTitleClick}>\n            <div className=\"contentitem-title-visibility\">\n              <VisibilityDot id={id}/>\n              <div className=\"contentitem-title\">{title}</div>\n            </div>\n            <div className=\"contentitem-date\">{date}</div>\n          </Card.Header>\n        }\n          <Card.Body>\n            <div className=\"contentitem-container\">\n              <div className=\"contentitem-tags\">\n                {showTags && <Tags tags={tags}/>}\n              </div>\n              <Dropdown alignRight>\n                <Dropdown.Toggle as={FontAwesomeIcon} icon={faEllipsisV} size=\"lg\"></Dropdown.Toggle>\n                <Dropdown.Menu alignRight>\n                  <Dropdown.Item onClick={() => setShowEdit(true)}>Edit</Dropdown.Item>\n                  <Dropdown.Item onClick={() => setShowDelete(true)}>Delete</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            <h3>Description</h3>\n            <p className=\"card-text\">{description}</p>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Row from 'react-bootstrap/Row';\nimport Skeleton from 'react-loading-skeleton';\n\nimport ContentItem from '../content/ContentItem';\n\nimport { getContent } from '../content/contentSlice';\n\n/**\n * Contains the user's content in a feed/wall format.\n */\nexport default function Feed() {\n\n  const dispatch = useDispatch();\n  const gettingContent = useSelector(state => state.app.loading.getContent);\n  const gettingUser = useSelector(state => state.app.loading.login);\n  const content = useSelector(state => state.content);\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n    async function fetch() { dispatch(getContent()) }\n    fetch();\n  }, [dispatch]);\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        <h1 className=\"h2 ml-5 mt-5\">\n          {gettingUser\n            ? <Skeleton width={500}/>\n            : `${user.username}'s Content`}\n        </h1>\n      </Row>\n      {gettingContent\n        ? <><h1><Skeleton/></h1><p><Skeleton count={3}/></p></>\n        : content.map(item => <ContentItem content={item} key={item.id}/>)}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n//import Dropdown from \"react-bootstrap/Dropdown\";\n//import DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { useSelector } from \"react-redux\";\nexport default function Project({\n  projects,\n  profile,\n  updateProfile,\n  updateProjects,\n}) {\n  const content = useSelector((state) => state.content);\n  /*\n  const addProjectHandler = (e) => {\n    const tmp = [...projects, e.target.id];\n    console.log(tmp);\n    updateProjects(tmp);\n    updateProfile({ ...profile, projects: tmp });\n  };\n*/\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Form.Label className=\"ml-3\">Select Project</Form.Label>\n      </Row>\n      <select name=\"cars\" id=\"cars\">\n        {content.map((content, i) => (\n          <option value={i}>{content.title}</option>\n        ))}\n      </select>\n      <div>\n        <br></br>\n      </div>\n      {/* doing this the long way bc brodie destroyed the dropdown button default :))) \n      <DropdownButton id=\"dropdown-basic-button\" title=\"Select Project\">\n        {content.map((content, i) => (\n          <Dropdown.Item >{content.title}</Dropdown.Item>\n        ))}\n      </DropdownButton>\n      */}\n    </React.Fragment>\n  );\n}\n","//Can probably split this into different fields\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editProfile, getProfile, addLogo, addResume } from \"./profileSlice\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Projects from \"./Projects\";\n\nexport default function EditProfile({ profile, projects, show, closeHandler }) {\n  //_profile is the state variable, updateProfile is a function that updates the state\n  //Initial state of profile always takes some time to update\n  const [_profile, updateProfile] = useState(profile);\n  const [_projects, updateProjects] = useState(projects);\n\n  const [_education, updateEducation] = useState(profile.education);\n  const [_experience, updateExperience] = useState(profile.experience);\n  const [_logo, updateLogo] = useState();\n  const [_resume, updateResume] = useState();\n  const dispatch = useDispatch();\n  const [viewAddProject, setView] = useState(false);\n  //Saves all changes\n  const editClickHandler = () => {\n    dispatch(editProfile(_profile))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveLogoHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _logo);\n    dispatch(addLogo(_profile.id, _data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  const saveResumeHandler = () => {\n    const _data = new FormData();\n    _data.set(\"file\", _resume);\n    dispatch(addResume(_profile.id, _data))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  //Updates logo field\n  const onLogoUploadHandler = (e) => updateLogo(e.target.files[0]);\n  const onResumeUploadHandler = (e) => updateResume(e.target.files[0]);\n  const deleteLogo = () => updateLogo(\"undefined\");\n  const deleteResume = () => updateResume(\"undefined\");\n\n  //Updates and sets education field in profile\n  const onChangeEducationHandler = (e) => {\n    //Copy and updates tmp array\n    const tmp = [..._education];\n    tmp[e.target.id] = e.target.value;\n    //Updates education array and profile in react state\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  //Adds an empty education field\n  const addEducationField = () => {\n    const tmp = [..._education, \"\"];\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n  //Deletes an education field\n  const deleteEducationField = (id) => {\n    const tmp = [..._education];\n    //Removes index\n    tmp.splice(id, 1);\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  const onChangeExperienceHandler = (e) => {\n    const tmp = [..._experience];\n    tmp[e.target.id] = e.target.value;\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addExperienceField = () => {\n    const tmp = [..._experience, \"\"];\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const deleteExperienceField = (id) => {\n    const tmp = [..._experience];\n    tmp.splice(id, 1);\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  /*\n  const onChangeProjectHandler = (e) => {\n    const tmp = [..._projects];\n    tmp[e.target.id] = e.target.value;\n    updateProjects(tmp);\n    updateProfile({ ..._projects, projects: tmp });\n  };\n  */\n  const addProjectField = () => {\n    //const tmp = [..._projects, \"\"];\n    // updateProjects(tmp);\n    //updateProfile({ ..._profile, projects: tmp });\n    setView(true);\n  };\n\n  const deleteProjectField = (id) => {\n    const tmp = [..._projects];\n    tmp.splice(id, 1);\n    updateProjects(tmp);\n    updateProfile({ ..._profile, projects: tmp });\n  };\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header>\n        <Modal.Title>Edit Profile</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form.Group controlId=\"logo\">\n          <Form.Label>Logo</Form.Label>\n          <br />\n          <input className=\"mb-3\" type=\"file\" name=\"logo\" onChange={onLogoUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteLogo}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveLogoHandler}> Save Logo </Button>\n          </Row>\n        </Form.Group>\n        <Form.Group controlId=\"resume\">\n          <Form.Label>Resume</Form.Label>\n          <br />\n          <input className=\"mb-3\"  type=\"file\" name=\"resume\" onChange={onResumeUploadHandler} />\n          <br/>\n          <Row>\n            <Button className=\"ml-3\" onClick={deleteResume}> Delete </Button>\n            <Button className=\"ml-3\" onClick={saveResumeHandler}> Save Resume </Button>\n          </Row>\n        </Form.Group>\n        <Form>\n          <Form.Group controlId=\"education\">\n            <Form.Label>Education</Form.Label>\n          </Form.Group>\n          {_education.map((education, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={education}\n                  onChange={onChangeEducationHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteEducationField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addEducationField}>Add Education</Button>\n          <Form.Group className=\"mt-3\" controlId=\"experience\">\n            <Form.Label>Experience</Form.Label>\n          </Form.Group>\n          {_experience.map((experience, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={experience}\n                  onChange={onChangeExperienceHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteExperienceField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addExperienceField}>Add Experience</Button>\n          <Form.Group className=\"mt-3\" controlId=\"projects\">\n            <Form.Label>Projects</Form.Label>\n          </Form.Group>\n          {_projects.map((projects, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control typeof=\"text\" value={projects.title} readOnly />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteProjectField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          {\"\\n\"}\n          {viewAddProject && (\n            <Projects\n              projects={projects}\n              profile={_profile}\n              updateProfile={updateProfile}\n              updateProjects={updateProjects}\n            />\n          )}\n          {\"\\n\"}\n          <Button onClick={addProjectField}>New Project</Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>\n          Cancel\n        </Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>\n          Save changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getProfile, deleteProfile } from './profileSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteProfile({ profile, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n    // Wait until profile is updated before dismissing the component\n    dispatch(deleteProfile(profile.id))\n      .then(() => dispatch(getProfile()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Profile</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete your profile <b>{profile.email}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}","import React, { useState } from \"react\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ContentItem from \"../content/ContentItem\"; \nimport EditProfile from \"./EditProfile\";\nimport DeleteProfile from \"./DeleteProfile\";\n\nexport default function ProfileItem({ profile, projects }) {\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  //Fields for profile\n  const { logo, education, experience, resume} = profile;\n  \n  //Uses google's embedded file viewer\n  const resumeUrl = \"//docs.google.com/gview?url=\" + resume + \"&embedded=true\";\n  //Checks which fields to render (not actually necessary)\n  const hasLogo = require('is-image'); \n  const hasResume = require('is-valid-http-url'); \n  const hasEducation = education.length > 0; \n  const hasExperience = experience.length > 0; \n  const hasProjects = projects.length > 0;  \n\n  return (\n    <React.Fragment>\n        <Button\n        variant=\"link\"\n        className=\"float-right\"\n        onClick={() => setShowEdit(true)}\n      >\n        Edit\n      </Button>\n      <Button\n        variant=\"link\"\n        className=\"float-right text-danger\"\n        onClick={() => setShowDelete(true)}\n      >\n        Delete\n      </Button>\n      <EditProfile\n        profile={profile}\n        projects = {projects}\n        show={showEdit}\n        closeHandler={handleEditClose}\n      />\n      <DeleteProfile\n        profile={profile}\n        show={showDelete}\n        closeHandler={handleDeleteClose}\n      />\n      <Container>\n        <Row>\n        <h4 className=\"mt-3 mb-5\">Logo</h4>\n          <Col className=\"mt-3 ml-5 mr-5\">\n            {hasLogo && <Image src={logo} roundedCircle fluid />} \n          </Col>\n        </Row>\n      </Container>\n      <Row>\n        <ListGroup className=\"mt-3 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Education</h4>\n          {hasEducation && \n          <div className=\"card-education\">\n            {education.map((education) => (\n              <ListGroup.Item className=\"flex-fill ml-4 mr-5\" key={education}>{education}</ListGroup.Item>\n            ))}\n          </div>}\n        </ListGroup>\n      </Row>\n      <Row>\n        <ListGroup className=\"mt-3 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Experience</h4>\n          {hasExperience && \n            <div className=\"card-experience\">\n            {experience.map((experience) => (\n              <ListGroup.Item className=\"flex-fill ml-4 mr-5\" key={experience}>{experience}</ListGroup.Item>))}\n          </div>}\n        </ListGroup>\n      </Row>\n      <Row>\n        <ListGroup className=\"mt-5 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Resume</h4>\n            {hasResume && <iframe title = \"resume\" src= {resumeUrl} style={{width:600, height:500}} frameBorder=\"0\"></iframe>}\n        </ListGroup>\n     </Row>\n      <Row>\n        <ListGroup className=\"mt-5 ml-5 mr-5\">\n          <h4>Projects</h4>\n          { hasProjects && \n          <div className=\"card-projects\">\n            {projects.map(projects => <ContentItem content = {projects}/>)}\n          </div>\n          }\n        </ListGroup>\n      </Row>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getProfile } from '../profile/profileSlice';\nimport Row from 'react-bootstrap/Row';\n\nimport ProfileItem from '../profile/ProfileItem';\n\n// Contains the user's profile\nexport default function Profile() {\n\n  const dispatch = useDispatch();\n  //Getting the user and profile details \n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n  const content = useSelector(state => state.content); \n  const isLoaded = useSelector(state => state.profile.isLoaded);\n\n  // Reloading profile \n  useEffect(() => {\n    async function fetch() { dispatch(getProfile(user.profile)) }; \n    fetch();\n  }, [dispatch, user.profile]);\n\n  //Alternative solution from making a list of API calls \n  //For each project in the profile, searchs through the content list for a matching id \n  //Adds to array if project is found (otherwise currently does nothing)\n  const getProjects = () => {  \n    const projects = []; \n    if(isLoaded){\n      const contentLength = content.length; \n      const projectLength = profile.projects.length; \n      for(let i = 0; i < projectLength; i++){ \n        const id = profile.projects[i]\n        for(let j = 0; j < contentLength; j++){ \n          if(id === content[j].id){ \n            projects.push(content[j]); \n            break; \n          }\n        }\n      }\n    }\n    return projects; \n  }\n\n  //Calls the getProjects function to get a list of projects \n  const projectList = getProjects(); \n\n  //Will only load the profile if its completely loaded \n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        <h1 className=\"h2 ml-5 mt-5\">Your Profile</h1>\n      </Row>\n      {isLoaded && <ProfileItem profile = {profile} projects ={projectList} />}\n    </div>\n  );\n}\n ","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { createContent, getContent } from '../content/contentSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function AddContent({ setView }) {\n\n  /*\n   * useState is a React hook and unrelated to Redux. Creates a little\n   * private state inside the component, in this case is used to just handle\n   * what's in the input fields before we send it off to Redux.\n   */\n\n  const [content, updateContent] = useState({});\n  const [richText, updateRichText] = useState('');\n  const [file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => setShowFile(false);\n  const toggleShowFileOn = () => setShowFile(true);\n\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = e => {\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    //convert to FormData so we can send files\n    const data = new FormData();\n    for (let field in content) {\n      data.set(field, content[field]);\n    }\n    if(showFile && file) { data.set('file', file); }\n    else if (!showFile) { data.set('content', richText); }\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createContent(data))\n      .then(() => dispatch(getContent()))\n      .then(() => setView('dashboard'));\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ...content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <React.Fragment>\n      <h1 className=\"h2 ml-5 mt-5\">Add Content</h1>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" value={content.title} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"5\" value={content.description} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n        <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n        { !showFile ?\n        <Form.Group controlId=\"content\">\n          <Form.Label>Content</Form.Label>\n          <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={richText} onChange={onContentChangeHandler}/>\n        </Form.Group>\n        :\n        <Form.Group controlId=\"file\">\n          <Form.Label>File</Form.Label>\n          <br/>\n          <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n        </Form.Group>\n        }\n        <Button type=\"submit\" variant=\"info\">Create</Button>\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilePdf, faEnvelope, faArrowCircleDown, faArrowCircleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport './share.css';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function Share() {\n\n  const { user, profile, content } = useSelector(state => state);\n\n  const [_projects, toggleExpand] = useState(content.map(project => { return { ...project, expand: false } }));\n\n  const onExpandClick = id => toggleExpand(_projects.map(\n    project => project.id === id\n      ? { ...project, expand: !project.expand }\n      : project\n  ));\n\n  const getContentType = userContent => {\n\n    if (userContent) {\n      if (isUrl(userContent)) {\n        return (isImage(userContent.split('?')[0])) ? 'image' : 'url';\n      } else {\n        return 'text';\n      }\n    }\n\n    return null;\n  }\n\n  const toLongDate = date => Intl.DateTimeFormat('en-AU', {\n    day: '2-digit',\n    month: 'long',\n    year: 'numeric'\n  }).format(Date.parse(date));\n\n  return(\n    <>\n      <Button as={Link} to=\"/dashboard\" variant=\"link\" className=\"return\">Back to dashboard</Button>\n      <Container className=\"share\">\n        <Row>\n          <Col xs=\"auto\">\n            <Image roundedCircle className=\"logo\" src={profile.logo}/>\n          </Col>\n          <Col>\n            <Row className=\"name\">{user.firstName} {user.lastName}</Row>\n            <Row className=\"bio\">\n              <Col>\n                <h6>Experience</h6>\n                {profile.experience.map(experience => <p className=\"bio-item\">{experience}</p>)}\n              </Col>\n              <Col>\n                <h6>Education</h6>\n                {profile.education.map(education => <p className=\"bio-item\">{education}</p>)}\n              </Col>\n            </Row>\n            <Row className=\"links\">\n              <Button as=\"a\" href={profile.resume} target=\"_blank\" variant=\"link\"><FontAwesomeIcon icon={faFilePdf}/> Resume</Button>\n              <Button as=\"a\" href={`mailto:${user.email}`} variant=\"link\"><FontAwesomeIcon icon={faEnvelope}/> {user.email}</Button>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          {_projects.map(project =>\n            <Row key={project.id} className=\"project\">\n              <Row>\n                <Col xs=\"auto\" className=\"date\">{toLongDate(project.displayDate)}</Col>\n                <Col>\n                  <Row className=\"title\">{project.title}</Row>\n                  <Row className=\"description\">{project.description}</Row>\n                  <Button variant=\"link\" onClick={() => onExpandClick(project.id)}>\n                    {project.expand && <>Hide project <FontAwesomeIcon icon={faArrowCircleUp}/></>}\n                    {!project.expand && <>Show project <FontAwesomeIcon icon={faArrowCircleDown}/></>}\n                  </Button>\n                </Col>\n              </Row>\n              <Collapse in={project.expand}>\n                <Row>\n                  {(getContentType(project.content) === 'text') && <div dangerouslySetInnerHTML={{ __html: project.content }}/>}\n                  {(getContentType(project.content) === 'image') && <a href={project.content} target=\"_blank\" rel=\"noopener noreferrer\"><Image src={project.content}/></a>}\n                  {(getContentType(project.content) === 'url') && <a href={project.content} target=\"_blank\" rel=\"noopener noreferrer\">External link</a>}\n                </Row>\n              </Collapse>\n              <hr/>\n            </Row>\n          )}\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\n\nimport Landing from '../features/pages/Landing';\nimport Dashboard from '../features/dashboard/Dashboard';\nimport Feed from '../features/dashboard/Feed';\nimport Profile from '../features/profile/Profile';\nimport AddContent from '../features/content/AddContent';\nimport Share from '../features/share/Share';\n\nexport const publicRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    page: <Landing/>\n  }\n];\n\nexport const privateRoutes = [\n  {\n    path: \"/dashboard\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <Feed/>\n  },\n  {\n    path: \"/profile\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <Profile/>\n  },\n  {\n    path: \"/add\",\n    exact: true,\n    page: <Dashboard/>,\n    dashboard: <AddContent/>\n  },\n  {\n    path: \"/share\",\n    exact: true,\n    page: <Share/>\n  }\n];\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport { authenticate } from '../features/user/userSlice';\nimport { token } from '../common/api';\nimport { publicRoutes, privateRoutes } from '../common/routes';\n\nimport '../App.css';\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const authenticated = useSelector(state => state.user.isAuthenticated);\n\n  useEffect(() => {\n    async function fetch() { if (token.get() !== null) dispatch(authenticate()) }\n    fetch();\n  });\n\n  return(\n    <Router>\n      <Switch>\n        {publicRoutes.map((route, index) =>\n          <Route\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            children={route.page}\n          />\n        )}\n        {privateRoutes.map((route, index) =>\n          <PrivateRoute\n            key={index}\n            exact={route.exact}\n            path={route.path}\n            test={authenticated}\n            fallback=\"/\"\n            children={route.page}\n          />\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nconst PrivateRoute = ({ _props, children, test, fallback }) => {\n  return(\n    <Route {..._props} render={() =>\n      test ? children : <Redirect to={{ pathname: fallback }}/>\n    }/>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './app/store';\nimport App from './app/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}