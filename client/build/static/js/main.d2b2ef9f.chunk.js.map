{"version":3,"sources":["serviceWorker.js","common/api.js","features/content/contentSlice.js","features/user/userSlice.js","features/profile/profileSlice.js","app/reducers.js","app/store.js","features/user/Login.js","features/pages/Landing.js","features/dashboard/TopNavbar.js","features/dashboard/SideNavbar.js","features/content/Tags.js","features/content/VisibilityDot.js","features/content/EditContent.js","features/content/DeleteContent.js","features/content/ContentItem.js","features/dashboard/Feed.js","features/content/AddContent.js","features/profile/EditProfile.js","features/profile/DeleteProfile.js","features/profile/ProfileItem.js","features/dashboard/Profile.js","features/profile/AddProfile.js","features/user/EditUser.js","features/dashboard/Dashboard.js","app/App.js","index.js"],"names":["Boolean","window","location","hostname","match","axios","defaults","baseURL","authenticateUser","user","a","post","getUser","token","get","getAllContent","createContent","content","editContent","put","deleteContent","id","delete","createProfile","profile","editProfile","deleteProfile","getProfile","addLogo","addResume","editUser","userParams","console","log","getContent","createAsyncThunk","api","getSingleContent","createSlice","name","initialState","reducers","extraReducers","fulfilled","_","action","payload","data","login","_details","isAuthenticated","localStorage","getItem","authType","setUser","state","logout","removeItem","setItem","actions","education","experience","projects","combineReducers","profileReducer","contentReducer","userReducer","middleware","thunk","next","headers","common","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","Login","useSelector","useState","email","password","form","updateForm","dispatch","useDispatch","history","useHistory","useEffect","push","onChangeHandler","e","target","value","className","Form","onSubmit","preventDefault","Group","Control","type","placeholder","onChange","Button","variant","Landing","Container","fluid","Row","Col","TopNavbar","Navbar","Nav","Link","as","to","Item","onClick","SideNavbar","setView","active","setActive","activeKey","onSelect","eventKey","Tags","tags","Fragment","map","tag","key","clickHandler","VisibilityDot","onMouseOver","EditContent","show","closeHandler","_content","updateContent","includes","_richText","updateRichText","_file","updateFile","showFile","setShowFile","Modal","size","onHide","Header","Title","Body","controlId","Label","title","description","files","modules","toolbar","theme","Footer","_data","FormData","field","set","then","DeleteContent","isUrl","require","isImage","ContentItem","showEdit","setShowEdit","showDelete","setShowDelete","handleTitleClick","displayDate","showTags","length","image","split","date","Intl","DateTimeFormat","day","month","year","format","Date","parse","Card","Img","src","alt","ImgOverlay","Dropdown","alignRight","Toggle","FontAwesomeIcon","icon","faEllipsisV","Menu","Feed","fetch","username","item","AddContent","richText","file","rows","EditProfile","_profile","updateProfile","_education","updateEducation","_experience","updateExperience","_projects","updateProjects","onChangeEducationHandler","tmp","onChangeExperienceHandler","onChangeProjectHandler","i","InputGroup","Append","splice","deleteEducationField","deleteExperienceField","deleteProjectField","DeleteProfile","ProfileItem","logo","Image","roundedCircle","ListGroup","Profile","AddProfile","EditUser","userFromState","_user","updateDetails","avatar","firstName","lastName","Dashboard","view","showUserEdit","setShowUserEdit","setViewHandler","role","App","res","exact","path","component","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2b2ef9f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\n// API not working locally? This will be why\n// TODO: set using env vars instead (will still need to set localhost port)\naxios.defaults.baseURL = 'https://cportfolio.herokuapp.com';\n//'https://localhost:57693'; \nconst AUTH_USER = '/users/authenticate';\nconst CURRENT_USER = '/users/current';\nconst CONTENT = '/content/';\nconst CREATE_CONTENT = '/content/create'; \nconst CREATE_PROFILE = '/profile/create'; \nconst PROFILE = '/profile/'; \nconst ADD_LOGO = '/profile/addLogo';\nconst ADD_RESUME = '/profile/addResume'; \nconst UPDATE_USER = '/users/update';\n\n// Takes email and password as an object and returns the user's details and token\nconst authenticateUser = async user => await axios.post(AUTH_USER, user);\n\n// Takes a token string and returns the user's details\nconst getUser = async token => await axios.get(CURRENT_USER, token);\n\n// Uses an existing token if user is logged in and returns all their content (as a list, not an object)\nconst getAllContent = async () => await axios.get(CONTENT);\n// const getAllContent = async () => await axios.get('https://jsonplaceholder.typicode.com/posts');\n\n// Takes a content object and authorises with existing token\nconst createContent = async content => await axios.post(CREATE_CONTENT, content);\n\n// Takes a content object (that must include the id field) and authorises with existing token\nconst editContent = async content => await axios.put(`${CONTENT}${content.get('id')}`, content);\n\n// Takes just the content id (as a string) and authorises with existing token\nconst deleteContent = async id => await axios.delete(`${CONTENT}${id}`);\n\n// Takes profile object and authorises with existing token \nconst createProfile = async profile => await axios.post(CREATE_PROFILE, profile); \n\n// Takes a profile object (text only) and id and authorises with existing token\nconst editProfile = async profile => await axios.put(`${PROFILE}${profile.id}`, profile); \n\n// Takes a profile id and authorises with existing token \nconst deleteProfile = async id => await axios.delete(`${PROFILE}${id}`); \n\n// Takes a profile id and authorises with existing token, returns profile\nconst getProfile = async id => await axios.get(`${PROFILE}${id}`); \n\n//Takes a profile id and authorises with existing token \nconst addLogo = async () => await axios.get(ADD_LOGO);  \nconst addResume = async () => await axios.get(ADD_RESUME);  \n\nconst editUser = async userParams => {\n    console.log(userParams);\n    await axios.put(UPDATE_USER, userParams);\n};\n\n// Make functions available to other components\n\nexport default {\n  authenticateUser,\n  getUser,\n  getAllContent,\n  createContent,\n  editContent,\n  deleteContent, \n  createProfile, \n  editProfile, \n  deleteProfile, \n  getProfile, \n  addLogo,\n  addResume, \n  editUser\n};\n","/*\n * The content 'slice' of the state. Centralises all content-related\n * functionality including API calls.\n */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport api from '../../common/api';\n\n// Async Thunks required whenever there's an API call\nexport const getContent = createAsyncThunk(\n  'content/getContent',\n  api.getAllContent\n);\n\nexport const getSingleContent = createAsyncThunk( \n  'content/getSingleContent', \n   api.getSingleContent \n); \n\nexport const createContent = createAsyncThunk(\n  'content/createContent',\n  api.createContent\n);\n\nexport const editContent = createAsyncThunk(\n  'content/editContent',\n  api.editContent\n);\n\nexport const deleteContent = createAsyncThunk(\n  'content/deleteContent',\n  api.deleteContent\n);\n\nconst content = createSlice({\n  name: 'content',\n  initialState: [], // A list! Not an object, be careful. Caused me a few issues.\n  reducers: {},\n  extraReducers: {\n    'user/logout': () => { return [] }, // Trigger content to reset itself when user logs out\n    [getContent.fulfilled]: (_, action) => { return [...action.payload.data] }\n  }\n});\n\n// For importing to src/app/reducers.js\nexport default content.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport api from '../../common/api';\n\nexport const login = createAsyncThunk(\n  'user/authenticate',\n  api.authenticateUser\n);\n\nexport const editUser = createAsyncThunk(\n  'users/update',\n  async (_details) => {\n    api.editUser(_details);\n  }\n);\n\nconst user = createSlice({\n  name: 'user',\n  initialState: {\n    isAuthenticated: (localStorage.getItem('token') !== null),\n    authType: 'Bearer'\n  },\n  reducers: {\n    setUser: (state, action) => {\n      return {\n        ...state,\n        ...action.payload.data,\n        token: localStorage.getItem('token'),\n        isAuthenticated: true\n      }\n    },\n    logout: () => {\n\n      localStorage.removeItem('token');\n\n      return { isAuthenticated: false }\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n\n      // Persist JWT to local storage\n      localStorage.setItem('token', action.payload.data.token);\n\n      return {\n        ...state,\n        ...action.payload.data,\n        isAuthenticated: true\n      }\n    }\n  }\n});\n\n// Explicitly export the non-async reducers\nexport const { logout, setUser } = user.actions;\n\nexport default user.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport api from '../../common/api';\n\n//API calls \nexport const createProfile = createAsyncThunk(\n    'profile/createProfile',\n    api.createProfile\n);\n\nexport const getProfile = createAsyncThunk(\n    'profile/getProfile',\n    api.getProfile\n);\n\nexport const editProfile = createAsyncThunk(\n    'profile/updateProfile', \n    api.editProfile\n); \n\nexport const deleteProfile = createAsyncThunk(\n    'profile/deleteProfile', \n    api.deleteProfile\n);\n\n//Stores profile in state.profile \nconst profile = createSlice({\n    name: 'profile',\n    //Added default arrays, as the state takes 2 seconds to actually get the data\n    initialState: {education:[], experience: [], projects: []},\n    reducers: {},\n    extraReducers: {\n        //Resets state on logout (think its necessary)\n        'user/logout': () => { return {}},\n        //Returns profile data \n        [getProfile.fulfilled]: (_, action) => {  return {...action.payload.data}}\n    }\n  });\n\nexport default profile.reducer;\n","/*\n * Redux takes any reducers we add here and makes them\n * available app-wide.\n */\n\nimport { combineReducers } from 'redux';\nimport contentReducer from '../features/content/contentSlice';\nimport userReducer from '../features/user/userSlice';\nimport profileReducer from '../features/profile/profileSlice';\n \nexport default combineReducers({\n  profile: profileReducer,\n  content: contentReducer,\n  user: userReducer\n});\n","/*\n * store.js\n * Boilerplate code. Redux store that controls application state.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\n\n//import auth from '../common/api';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// Middleware to force authorisation header on every action\nconst auth = () => next => action => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem('token')}`;\n  return next(action);\n};\n\n// Any middleware included goes here\nconst middleware = [thunk, auth];\nconst middlewareEnhancer = applyMiddleware(...middleware);\n\n// Add enhancers (if any)\nconst enhancers = [middlewareEnhancer];\n\n// Give access to Redux Devtools\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer, initialState, composedEnhancers);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { login } from './userSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Login() {\n\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  const [form, updateForm] = useState({ email: '', password: '' });\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmitHandler = e => {\n\n    e.preventDefault();\n\n    dispatch(login(form));\n  }\n\n  useEffect(() => { if (isAuthenticated) history.push('/dashboard') });\n\n  const onChangeHandler = e => updateForm({ ...form, [e.target.id]: e.target.value });\n\n  return(\n    <div className=\"form-box\">\n      <Form className=\"login-form\" onSubmit={onSubmitHandler}>\n        <h2>Login</h2>\n        <hr/>\n        <Form.Group>\n          <Form.Control\n            type=\"email\" \n            id=\"email\"\n            placeholder=\"Email Address\" \n            value={form.email}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Control\n            type=\"password\"  \n            id=\"password\" \n            placeholder=\"Password\" \n            value={form.password}\n            onChange={onChangeHandler}\n            className=\"form-control\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">Login</Button>\n      </Form>\n    </div>\n  );\n}\n","import React from 'react';\nimport Login from '../user/Login';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Landing = () => {\n  return(\n    <Container fluid>\n      <Row className=\"no-gutter\">\n        <Col className=\"bg-info d-flex justify-content-center\">\n          <div className=\"splash-container\">\n            <h1 className=\"display-3 text-white\">cPortfolio</h1>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"splash-container\">\n            <Login/>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Landing;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../user/userSlice';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function TopNavbar() {\n\n  const dispatch = useDispatch();\n\n  return(\n    <Navbar variant=\"dark\" className=\"fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <Nav.Link as={Link} to=\"/dashboard\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">Dashboard</Nav.Link>\n      <Nav className=\"px-3\">\n        <Nav.Item className=\"text-nowrap\">\n          <Nav.Link as={Link} to=\"/\" onClick={() => dispatch(logout())}>Sign out</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React, { useState } from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\n\nexport default function SideNavbar({ setView }) {\n\n  const [active, setActive] = useState('dashboard');\n\n  const onSelectHandler = eventKey => {\n    setActive(eventKey);\n    setView(eventKey);\n  }\n\n  return(\n    <Nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div className=\"sidebar-sticky\">\n        <Nav className=\"flex-column\" activeKey={active} onSelect={onSelectHandler}>\n          <Nav.Item>\n            <Nav.Link eventKey=\"dashboard\">\n              Dashboard\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"profile\">\n              Profile\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"add-content\">\n              Add Content\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"add-profile\">\n              Add Profile\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </div>\n    </Nav>\n  );\n}\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default function Tags({ tags }) {\n\n  const clickHandler = tag => console.log(`'${tag}' tag clicked.`);\n\n  return(\n    <React.Fragment>\n      tags&nbsp;&nbsp;&nbsp;›{tags.map(\n        tag => <React.Fragment>\n          &nbsp;&nbsp;&nbsp;\n          <Button\n            variant=\"link\"\n            className=\"contentitem-tag\"\n            key={tag}\n            onClick={() => clickHandler(tag)}\n          >{tag}</Button>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function VisibilityDot({ id }) {\n\n  const mouseOverHandler = () => console.log(`'${id}' visibility mouse over`);\n\n  return(\n    <React.Fragment>\n      <span className=\"contentitem-visibility-dot\" onMouseOver={mouseOverHandler}></span>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { editContent, getContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function EditContent({ content, show, closeHandler }) {\n\n  //console.log(content);\n  const [_content, updateContent] = useState(content);\n  //set richtext to blank if the content is a cloudinary link, the content otherwise\n  const [_richText, updateRichText] = useState(!content.content || content.content.includes(\"res.cloudinary.com\") ? '' : content.content);\n  const [_file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => { setShowFile(false); updateFile('undefined'); }\n  const toggleShowFileOn = () => { setShowFile(true); }\n\n  const dispatch = useDispatch();\n  const editClickHandler = () => {\n\n    console.log(_content);\n\n    //convert to FormData so we can send files\n    const _data = new FormData();\n    for (let field in _content) {\n      _data.set(field, _content[field]);\n    }\n    if(showFile && _file) { _data.set('file', _file); _data.delete('content'); }\n    else if (!showFile) { _data.set('content', _richText); }\n\n    dispatch(editContent(_data))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n\n  }\n\n  const deleteFileAndCloseHandler = e => {\n    updateFile('undefined');\n    closeHandler();\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ..._content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Edit Content</Modal.Title></Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={_content.title} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" value={_content.description} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n          <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n          { !showFile ?\n          <Form.Group controlId=\"content\">\n            <Form.Label>Content</Form.Label>\n            <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={_richText} onChange={onContentChangeHandler}/>\n          </Form.Group>\n          :\n          <Form.Group controlId=\"file\">\n            <Form.Label>File</Form.Label>\n            <br/>\n            <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n          </Form.Group>\n          }\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={deleteFileAndCloseHandler}>Cancel</Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContent, deleteContent } from './contentSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteContent({ content, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n\n    // Wait until content is updated before dismissing the component\n    dispatch(deleteContent(content.id))\n      .then(() => dispatch(getContent()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Content</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete <b>{content.title}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport Tags from './Tags';\nimport VisibilityDot from './VisibilityDot';\nimport EditContent from './EditContent';\nimport DeleteContent from './DeleteContent';\n\nconst isUrl = require('is-valid-http-url');\nconst isImage = require('is-image');\n\nexport default function ContentItem({ content }) {\n\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n  const handleTitleClick = () => console.log(`${content.id} clicked.`);\n\n  const { id, title, description, tags, displayDate } = content;\n  const showTags = tags.length > 0;\n\n  // Determine variant of ContentItem to use\n  let image = false;\n  if (content.content) {\n    if (isUrl(content.content)) {\n      if (isImage(content.content.split('?')[0])) {\n        image = true;\n      }\n    }\n  }\n\n  const date = Intl.DateTimeFormat('en-AU', {\n    day: '2-digit',\n    month: 'long',\n    year: 'numeric'\n  }).format(Date.parse(displayDate));\n\n  return(\n    <React.Fragment>\n      <EditContent content={content} show={showEdit} closeHandler={handleEditClose}/>\n      <DeleteContent content={content} show={showDelete} closeHandler={handleDeleteClose}/>\n      <Row>\n        <Card>\n        {image ?\n          <React.Fragment>\n            <Card.Img src={content.content} alt={title}/>\n            <Card.ImgOverlay className=\"contentitem-header\" onClick={handleTitleClick}>\n              <div className=\"contentitem-title-visibility\">\n                <VisibilityDot id={id}/>\n                <div className=\"contentitem-title\">{title}</div>\n              </div>\n              <div className=\"contentitem-date\">{date}</div>\n            </Card.ImgOverlay>\n          </React.Fragment>\n        :\n          <Card.Header className=\"contentitem-header\" onClick={handleTitleClick}>\n            <div className=\"contentitem-title-visibility\">\n              <VisibilityDot id={id}/>\n              <div className=\"contentitem-title\">{title}</div>\n            </div>\n            <div className=\"contentitem-date\">{date}</div>\n          </Card.Header>\n        }\n          <Card.Body>\n            <div className=\"contentitem-container\">\n              <div className=\"contentitem-tags\">\n                {showTags && <Tags tags={tags}/>}\n              </div>\n              <Dropdown alignRight>\n                <Dropdown.Toggle as={FontAwesomeIcon} icon={faEllipsisV} size=\"lg\"></Dropdown.Toggle>\n                <Dropdown.Menu alignRight>\n                  <Dropdown.Item onClick={() => setShowEdit(true)}>Edit</Dropdown.Item>\n                  <Dropdown.Item onClick={() => setShowDelete(true)}>Delete</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            <h3>Description</h3>\n            <p className=\"card-text\">{description}</p>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContent } from '../content/contentSlice';\n\nimport Row from 'react-bootstrap/Row';\n\nimport ContentItem from '../content/ContentItem';\n\n// Contains the user's content in a feed/wall format\nexport default function Feed() {\n\n  const dispatch = useDispatch();\n  const content = useSelector(state => state.content);\n  const user = useSelector(state => state.user);\n\n  // Reload content whenever something significant happens\n  useEffect(() => {\n    async function fetch() { dispatch(getContent()) }\n    fetch();\n  }, [dispatch]);\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        {/* a h1 with a class of h2 👀 */}\n  <h1 className=\"h2 ml-5 mt-5\">{user.username}'s Content</h1>\n      </Row>\n      {content.map(item => <ContentItem content={item} key={item.id}/>)}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//rich text editor\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nimport { createContent, getContent } from '../content/contentSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function AddContent({ setView }) {\n\n  /*\n   * useState is a React hook and unrelated to Redux. Creates a little\n   * private state inside the component, in this case is used to just handle\n   * what's in the input fields before we send it off to Redux.\n   */\n\n  const [content, updateContent] = useState({});\n  const [richText, updateRichText] = useState('');\n  const [file, updateFile] = useState();\n\n  const [showFile, setShowFile] = useState(false);\n  const toggleShowFileOff = () => setShowFile(false);\n  const toggleShowFileOn = () => setShowFile(true);\n\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = e => {\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    //convert to FormData so we can send files\n    const data = new FormData();\n    for (let field in content) {\n      data.set(field, content[field]);\n    }\n    if(showFile && file) { data.set('file', file); }\n    else if (!showFile) { data.set('content', richText); }\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createContent(data))\n      .then(() => dispatch(getContent()))\n      .then(() => setView('dashboard'));\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateContent({ ...content, [e.target.id]: e.target.value });\n  const onContentChangeHandler = e => updateRichText(e);\n  const onFileChosenHandler = e => updateFile(e.target.files[0]);\n\n\n  const enabledTools = [\n      [{ 'header': [1, 2, false] }],\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean']\n    ]\n\n  return(\n    <React.Fragment>\n      <h1 className=\"h2 ml-5 mt-5\">Add Content</h1>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" value={content.title} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"5\" value={content.description} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Button variant=\"primary\" onClick={toggleShowFileOff}> Text </Button>\n        <Button variant=\"primary\" onClick={toggleShowFileOn}> File </Button>\n        { !showFile ?\n        <Form.Group controlId=\"content\">\n          <Form.Label>Content</Form.Label>\n          <ReactQuill modules = {{toolbar: enabledTools}} theme='snow' value={richText} onChange={onContentChangeHandler}/>\n        </Form.Group>\n        :\n        <Form.Group controlId=\"file\">\n          <Form.Label>File</Form.Label>\n          <br/>\n          <input type=\"file\" name=\"file\" onChange={onFileChosenHandler}/>\n        </Form.Group>\n        }\n        <Button type=\"submit\" variant=\"info\">Create</Button>\n      </Form>\n    </React.Fragment>\n  );\n}\n","//Can probably split this into different fields\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editProfile, getProfile } from \"./profileSlice\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n//import Row from 'react-bootstrap/Row';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nexport default function EditProfile({ profile, show, closeHandler }) {\n  //_profile is the state variable, updateProfile is a function that updates the state\n  //Initial state of profile always takes some time to update\n  const [_profile, updateProfile] = useState(profile);\n  const [_education, updateEducation] = useState(profile.education);\n  const [_experience, updateExperience] = useState(profile.experience);\n  const [_projects, updateProjects] = useState(profile.projects);\n  const dispatch = useDispatch();\n  console.log(_projects);\n  console.log(profile);\n\n  //Saves all changes\n  const editClickHandler = () => {\n    dispatch(editProfile(_profile))\n      .then(() => dispatch(getProfile(_profile.id)))\n      .then(() => closeHandler());\n  };\n\n  //Updates and sets education field in profile\n  const onChangeEducationHandler = (e) => {\n    //Copy and updates tmp array\n    const tmp = [..._education];\n    tmp[e.target.id] = e.target.value;\n    //Updates education array and profile in react stae\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  //Adds an empty education field\n  const addEducationField = () => {\n    const tmp = [..._education, \"\"];\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n  //Deletes an education field\n  const deleteEducationField = (id) => {\n    const tmp = [..._education];\n    //Removes index\n    tmp.splice(id, 1);\n    updateEducation(tmp);\n    updateProfile({ ..._profile, education: tmp });\n  };\n\n  const onChangeExperienceHandler = (e) => {\n    const tmp = [..._experience];\n    tmp[e.target.id] = e.target.value;\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const addExperienceField = () => {\n    const tmp = [..._experience, \"\"];\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const deleteExperienceField = (id) => {\n    const tmp = [..._experience];\n    tmp.splice(id, 1);\n    updateExperience(tmp);\n    updateProfile({ ..._profile, experience: tmp });\n  };\n\n  const onChangeProjectHandler = (e) => {\n    const tmp = [..._projects];\n    tmp[e.target.id] = e.target.value;\n    updateProjects(tmp);\n    updateProfile({ ..._projects, projects: tmp });\n  };\n\n  const addProjectField = () => {\n    const tmp = [..._projects, \"\"];\n    console.log(tmp);\n    updateProjects(tmp);\n    updateProfile({ ..._profile, projects: tmp });\n  };\n\n  const deleteProjectField = (id) => {\n    const tmp = [..._projects];\n    tmp.splice(id, 1);\n    updateProjects(tmp);\n    updateProfile({ ..._profile, projects: tmp });\n  };\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={closeHandler}>\n      <Modal.Header>\n        <Modal.Title>Edit Profile</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"education\">\n            <Form.Label>Education</Form.Label>\n          </Form.Group>\n          {_education.map((education, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={education}\n                  onChange={onChangeEducationHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteEducationField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addEducationField}>Add Education</Button>\n          <Form.Group className=\"mt-3\" controlId=\"experience\">\n            <Form.Label>Experience</Form.Label>\n          </Form.Group>\n          {_experience.map((experience, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value={experience}\n                  onChange={onChangeExperienceHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteExperienceField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addExperienceField}>Add Experience</Button>\n          <Form.Group className=\"mt-3\" controlId=\"projects\">\n            <Form.Label>Projects</Form.Label>\n          </Form.Group>\n          {_projects.map((projects, i) => (\n            <Form.Group controlId={i}>\n              <InputGroup className=\"mb-3\">\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"1\"\n                  value=\"McWorking on it\"\n                  onChange={onChangeProjectHandler}\n                />\n                <InputGroup.Append>\n                  <Button\n                    variant=\"outline-secondary\"\n                    id={i}\n                    onClick={(e) => deleteProjectField(i)}\n                  >\n                    Delete\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          ))}\n          <Button onClick={addProjectField}>Add Project</Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>\n          Cancel\n        </Button>\n        <Button variant=\"warning\" onClick={editClickHandler}>\n          Save changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getProfile, deleteProfile } from './profileSlice';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function DeleteProfile({ profile, show, closeHandler }) {\n\n  const dispatch = useDispatch();\n\n  const deleteClickHandler = () => {\n    // Wait until profile is updated before dismissing the component\n    dispatch(deleteProfile(profile.id))\n      .then(() => dispatch(getProfile()))\n      .then(() => closeHandler());\n  }\n\n  return(\n    <Modal show={show} onHide={closeHandler}>\n      <Modal.Header><Modal.Title>Delete Profile</Modal.Title></Modal.Header>\n      <Modal.Body>Are you sure you want to delete your profile <b>{profile.email}</b>?</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={closeHandler}>No, cancel</Button>\n        <Button variant=\"danger\" onClick={deleteClickHandler}>Yes, delete</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}","import React, { useState } from \"react\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ContentItem from \"../content/ContentItem\"; \nimport EditProfile from \"./EditProfile\";\nimport DeleteProfile from \"./DeleteProfile\";\n\nexport default function ProfileItem({ profile, projects }) {\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  // Modal components will tell ContentItem when they wanna leave\n  const handleEditClose = () => setShowEdit(false);\n  const handleDeleteClose = () => setShowDelete(false);\n\n  //Fields for profile\n  //ADD LOGO AND RESUME FIELDS\n  const { logo, education, experience} = profile;\n\n  return (\n    <React.Fragment>\n        <Button\n        variant=\"link\"\n        className=\"float-right\"\n        onClick={() => setShowEdit(true)}\n      >\n        Edit\n      </Button>\n      <Button\n        variant=\"link\"\n        className=\"float-right text-danger\"\n        onClick={() => setShowDelete(true)}\n      >\n        Delete\n      </Button>\n      <EditProfile\n        profile={profile}\n        show={showEdit}\n        closeHandler={handleEditClose}\n      />\n      <DeleteProfile\n        profile={profile}\n        show={showDelete}\n        closeHandler={handleDeleteClose}\n      />\n      <Container>\n        <Row>\n          <Col className=\"mt-3 ml-5 mr-5\">\n            <Image src={logo} roundedCircle fluid />\n          </Col>\n        </Row>\n      </Container>\n      <Row>\n        <ListGroup className=\"mt-3 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Education</h4>\n          <div className=\"card-education\">\n            {education.map((education) => (\n              <ListGroup.Item className=\"flex-fill ml-4 mr-5\" key={education}>{education}</ListGroup.Item>\n            ))}\n          </div>\n        </ListGroup>\n      </Row>\n      <Row>\n        <ListGroup className=\"mt-3 ml-5 mr-5\">\n          <h4 className=\"mt-3 mb-5\">Experience</h4>\n          <div className=\"card-experience\">\n            {experience.map((experience) => (\n              <ListGroup.Item className=\"flex-fill ml-4 mr-5\" key={experience}>{experience}</ListGroup.Item>\n            ))}\n          </div>\n        </ListGroup>\n      </Row>\n      <Row>\n        <ListGroup className=\"mt-5 ml-5 mr-5\">\n          <h4>Projects</h4>\n          <div className=\"card-projects\">\n              {/*}\n            {projects.map((projects) => (\n              <ListGroup.Item key={projects}>{projects}</ListGroup.Item>\n            ))}*/}\n            {projects.map(projects => <ContentItem content = {projects}/>)}\n          </div>\n        </ListGroup>\n      </Row>\n      \n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getProfile } from '../profile/profileSlice';\n//import { getSingleContent } from '../content/contentSlice'; \nimport Row from 'react-bootstrap/Row';\n\nimport ProfileItem from '../profile/ProfileItem';\n\n// Contains the user's profile\nexport default function Profile() {\n\n  const dispatch = useDispatch();\n  //Getting the user and profile details \n  const user = useSelector(state => state.user);\n  const profile = useSelector(state => state.profile);\n  const content = useSelector(state => state.content); \n  // Reloading profile \n  useEffect(() => {\n    async function fetch() { dispatch(getProfile(user.profile)) }\n    fetch();\n  });\n\n  /*\n  async function getPost(id){ \n      const post = await getSingleContent(id); \n      console.log(post); \n      return post; \n  }*/\n\n  return(\n    <div className=\"flex-wrap pt-3 pb-2 mb-3\">\n      <Row>\n        <h1 className=\"h2 ml-5 mt-5\">Your Profile</h1>\n      </Row>\n      {<ProfileItem profile = {profile} projects ={content} />}\n    </div>\n  );\n}\n ","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { createProfile, getProfile } from '../profile/profileSlice';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function AddProfile({ setView }) {  \n\n  /*\n   * useState is a React hook and unrelated to Redux. Creates a little\n   * private state inside the component, in this case is used to just handle\n   * what's in the input fields before we send it off to Redux.\n   */\n  const [profile, updateProfile] = useState({});\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = e => {\n\n    // Prevent 'Submit' from actually doing a traditional submit\n    e.preventDefault();\n\n    // Send API call, then re-fetch content and change dashboard view back to default (currently 'dashboard')\n    dispatch(createProfile(profile))\n      .then(() => dispatch(getProfile()))\n      .then(() => setView('dashboard'));\n  }\n\n  // Input fields are based on state, so typing in them won't work unless we also change the state\n  const onChangeHandler = e => updateProfile({ ...profile, [e.target.id]: e.target.value});\n\n  return(\n    <React.Fragment>\n      <h1 className=\"h2 ml-5 mt-5\">Add Profile</h1>\n      <Form className=\"mt-5\" onSubmit={onSubmitHandler}>\n        <Form.Group controlId=\"education\">\n          <Form.Label>Education</Form.Label>\n          <Form.Control type=\"textarea\" rows=\"5\" value={profile.education} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"experience\">\n          <Form.Label>Experience</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"5\" value={profile.experience} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Form.Group controlId=\"projects\">\n          <Form.Label>Projects</Form.Label>\n          <Form.Control as= \"textarea\" rows=\"5\" value={profile.projects} onChange={onChangeHandler}/>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"info\">Create</Button>\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {editUser} from './userSlice';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport Image from 'react-bootstrap/Image';\n\nexport default function EditUser({show, closeHandler, user}) {\n    //const user = useSelector(state => state.user);\n\n    const userFromState = useSelector(state => state.user);\n\n\n    //Initialised with the user fields.\n\n    const [_user, updateDetails] = useState(user);\n    const dispatch = useDispatch();\n\n    //submits the new user details to the server to update in the database\n    const handleEditUser = () => {\n        dispatch(editUser(_user))\n        .then(closeHandler);\n    };\n\n    //source of truth for the user details, updated alongside the form when editing\n    const onChangeHandler = e => updateDetails({ ..._user, [e.target.id]: e.target.value});\n\n    const resetHandler = () => {\n      //\n      updateDetails(userFromState);\n      console.log(_user);\n      console.log(userFromState);\n    }\n    \n    //<img src=\"...\" class=\"rounded mx-auto d-block\" alt=\"...\">\n\n    return (\n    <React.Fragment>\n        <Modal show = {show} onHide = {closeHandler}>\n        <Modal.Header><Modal.Title>Edit User Details</Modal.Title></Modal.Header>\n        <Modal.Body>\n        <Image src = {userFromState.avatar} alt = \"Hello Darkness\" roundedCircle className = \"rounded mx-auto d-block\"/>\n        <Form>\n        <Form.Group controlId = \"username\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control as=\"textarea\" rows = \"1\" value = {_user.username} onChange = {onChangeHandler}/>\n        </Form.Group>\n          <Form.Group controlId=\"firstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.firstName} onChange={onChangeHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"lastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"1\" value={_user.lastName} onChange={onChangeHandler}/>\n          </Form.Group>\n        </Form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"link\" onClick = {resetHandler}>Reset Changes</Button>\n            <Button variant=\"warning\" onClick = {handleEditUser}>Save changes</Button>\n            <Button variant=\"link\" onClick={closeHandler}>Cancel</Button>\n        </Modal.Footer>\n        </Modal>\n        \n    </React.Fragment>\n    );\n}\n\n/* <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n            Edit\n        </Button>\n        <Image src = {user.avatar} alt = \"Hello Darkness\"/>\n        <h1 className=\"h2 ml-5 mt-5\">Username: {user.username}</h1> \n        <h1 className=\"h2 ml-5 mt-5\">First Name: {user.firstName}</h1>\n        <h1 className=\"h2 ml-5 mt-5\">Last Name: {user.lastName}</h1> */","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\n\nimport TopNavbar from './TopNavbar';\nimport SideNavBar from './SideNavbar';\nimport Feed from './Feed';\nimport AddContent from '../content/AddContent';\nimport Profile from './Profile'; \nimport AddProfile from '../profile/AddProfile'; \nimport {getProfile} from '../profile/profileSlice'; \nimport EditUser from '../user/EditUser';\n\nexport default function Dashboard() {\n\n  // React hook for redirection\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [view, setView] = useState('dashboard');\n  const user = useSelector(state => state.user); \n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  const [showUserEdit, setShowUserEdit] = useState(false);\n  \n\n  const handleEditClose = () => setShowUserEdit(false);\n\n\n\n  useEffect(() => { if (!isAuthenticated) history.push('/') });\n\n  useEffect(() => {\n    async function fetch() { dispatch(getProfile(user.profile)) }\n    fetch();\n  });\n  /*\n   * This is a bad way of doing a dashboard. Simply swaps out whatever component\n   * is showing in <main> based on whatever string is set, and changing that\n   * string by clicking the links in the navbar. Quick and easy but not nice to\n   * maintain.\n   */\n  const setViewHandler = eventKey => setView(eventKey);\n\n  return(\n    <React.Fragment>\n      <TopNavbar/>\n      <Container fluid>\n        <Row>\n          <SideNavBar setView={setViewHandler}/>\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n          <Button variant = \"link\" className = \"float-right\" onClick = {() => setShowUserEdit(true)}>\n            User Details\n        </Button>\n            {(view === 'dashboard') && <Feed/>}\n            {(view === 'add-content') && <AddContent setView={setViewHandler}/>}\n            {(view === 'profile') && <Profile/>}\n            {(view === 'add-profile') && <AddProfile setView ={setViewHandler}/>}\n            \n          </main>\n        </Row>\n        <EditUser show = {showUserEdit} closeHandler = {handleEditClose} user = {user} />\n      </Container>\n    </React.Fragment>\n  );\n}\n\n//{(view === 'edit-user') && <Test setView={setViewHandler}/>}\n//useSelector(state => state.user)\n","// Imports for framework and functionality\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n// Imports for custom app functionality\nimport api from '../common/api';\nimport { setUser } from '../features/user/userSlice';\n\n// Imports for React components\nimport Landing from '../features/pages/Landing';\nimport Dashboard from '../features/dashboard/Dashboard';\n\n// For when css is being a b and you need to override some rules\nimport '../App.css';\n\n// React component is its main function\n// Pls don't use classes! Unless there is a *really* good reason\nexport default function App() {\n\n  // Allow us to dispatch actions to Redux\n  const dispatch = useDispatch();\n\n  // React hook, nothing to do with Redux.\n  // Gets called whenever there is a change related to the component that it's inside of\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      api.getUser()\n        .then(res => dispatch(setUser(res)));\n    }\n  });\n\n  return(\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Landing}/>\n          <Route exact path=\"/dashboard\" component={Dashboard}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './app/store';\nimport App from './app/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}