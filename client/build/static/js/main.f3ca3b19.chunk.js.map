{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","util/setAuthToken.js","actions/authenticatedActions.js","components/component-layout/Navbar.js","components/component-layout/Landing.js","components/component-layout/Register.js","components/component-layout/Login.js","components/private-route/PrivateRoute.js","components/component-layout/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","combineReducers","auth","state","action","type","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","setCurrentUser","decoded_data","logoutUser","dispatch","localStorage","removeItem","setAuthToken","Navbar","className","to","Component","Landing","style","fontFamily","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","this","push","nextProps","placeholder","error","classnames","invalid","connect","userData","axios","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","token","setItem","decoded","jwt_decode","component","rest","render","Dashboard","onLogout","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","path","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f3ca3b19.chunk.js","sourcesContent":["import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\n  const isEmpty = require(\"is-empty\");\r\n\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n  };\r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"; ","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import axios from \"axios\";\r\nimport setAuthToken from \"../util/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n//Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios.post(\"/api/users/register\",userData)\r\n  .then(res => history.push(\"/login\"))\r\n  .catch(err=> dispatch({\r\n    type:GET_ERRORS,\r\n    payload:err.response.data\r\n  }))\r\n}\r\n\r\n//Login\r\nexport const loginUser = (userData) => dispatch => {\r\n  axios.post(\"/api/users/login\",userData)\r\n  .then( res => {\r\n      const {token} = res.data;\r\n      // Set token to localStorage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n   }\r\n  )\r\n  .catch(err=> dispatch({\r\n    type:GET_ERRORS,\r\n    payload:err.response.data\r\n  }))\r\n}\r\n\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded_data => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_data\r\n  };\r\n};\r\n \r\n// Logout user\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","import React,{Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <nav className=\"navbar bg-light justify-content-center\">\r\n                <Link className=\"navbar-brand text-dark font-weight-bold\" to=\"/\"><i className=\"fa fa-code\"></i> cPortfolio</Link>\r\n            </nav>\r\n            </>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container text-center  mt-15\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 \">\r\n            <h1>\r\n              Introducing, the one-stop Portfolio Network :  {\" \"}\r\n              <span style={{ fontFamily: \"sans-serif\" }}>cPortfolio</span>\r\n            </h1>\r\n            <p><i>Showcase your your own personalised projects, achievements, journals and other interesting \r\n                documentation that truly shows your potential directly to employers, researchers, academic \r\n                and non academic coordinators.</i></p>\r\n            </div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n            <div className=\"col-sm-12\">\r\n              <Link\r\n                to=\"/register\"\r\n                className=\"btn btn-large btn-dark hoverable\"\r\n              >\r\n                Register\r\n              </Link>\r\n              <Link\r\n                to=\"/login\"\r\n                className=\"btn btn-large btn-light hoverable ml-5\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authenticatedActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            name:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            password2:\"\",\r\n            errors:{}\r\n        }   \r\n    }\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            password2:this.state.password2\r\n        }\r\n\r\n        this.props.registerUser(newUser, this.props.history); \r\n    }\r\n\r\n    render(){\r\n        const {name, email, password, password2 ,errors} = this.state;\r\n\r\n        return(\r\n            <div className=\"form-box \">\r\n            <form className=\"signup-form\"  onSubmit={this.onSubmit}>\r\n\r\n               <div><Link to=\"/\"><i className=\"fa fa-arrow-circle-left  \"></i> Back to Home</Link></div>\r\n\r\n                <h2>Register</h2>\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" \r\n                           id=\"name\" \r\n                           placeholder=\"Name\" \r\n                           value={name}\r\n                           error={errors.name} \r\n                           onChange={this.onChange} \r\n                           className={classnames(\"form-control\", {\r\n                            invalid: errors.name\r\n                          })}/> \r\n                        <span className=\"red-text\">{errors.name}</span>\r\n\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" \r\n                           id=\"email\" \r\n                           placeholder=\"Email Address\" \r\n                           value={email}\r\n                           error={errors.email}\r\n                           onChange={this.onChange} \r\n                           className={classnames(\"form-control\", {\r\n                            invalid: errors.email\r\n                          })}/>\r\n                    <span className=\"red-text\">{errors.email}</span>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" \r\n                           id=\"password\" \r\n                           placeholder=\"Password\" \r\n                           value={password}\r\n                           error= {errors.password} \r\n                           onChange={this.onChange}\r\n                           className={classnames(\"form-control\", {\r\n                            invalid: errors.password\r\n                          })} />\r\n                    <span className=\"red-text\">{errors.password}</span>                     \r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" \r\n                           id=\"password2\"\r\n                           placeholder=\"Confirm Password\" \r\n                           value={password2} \r\n                           error={errors.password}\r\n                           onChange={this.onChange}\r\n                           className={classnames(\"form-control\", {\r\n                            invalid: errors.password2\r\n                          })} />\r\n                    <span className=\"red-text\">{errors.password2}</span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Sign Up</button>\r\n                </div>\r\n                <div className=\"text-center\">Already have an account? <Link to=\"/login\">Login here</Link></div>\r\n\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\nexport default connect(mapStateToProps,{registerUser})(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authenticatedActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            errors:{}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\"); \r\n        }\r\n        \r\n    if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n        }\r\n        this.props.loginUser(userData);\r\n    }\r\n    render(){\r\n        const {email, password, errors} = this.state;\r\n        return(\r\n            <div className=\"form-box\">\r\n            <form className=\"login-form\" onSubmit={this.onSubmit}>\r\n                <h2>Login</h2>\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" \r\n                           id=\"email\"\r\n                           placeholder=\"Email Address\" \r\n                           value={email} \r\n                           error={errors}\r\n                           onChange={this.onChange}\r\n                           className={classnames(\"form-control\", {\r\n                            invalid: errors.email || errors.emailnotfound\r\n                          })}/>\r\n                          <span className=\"red-text\">\r\n                            {errors.email}\r\n                            {errors.emailnotfound}\r\n                        </span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\"  \r\n                           id=\"password\" \r\n                           placeholder=\"Password\" \r\n                           value={password} \r\n                           error={errors}\r\n                           onChange={this.onChange}\r\n                           className={classnames(\"form-control\", {\r\n                            invalid: errors.password || errors.passwordincorrect })}\r\n                            />\r\n                    <span className=\"red-text\">\r\n                        {errors.password}\r\n                        {errors.passwordincorrect}\r\n                    </span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Login</button>\r\n                </div>\r\n                <div className=\"text-center\">Don't have an account? <Link to=\"/register\">Register</Link></div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n  )(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authenticatedActions\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\nrender() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <div  className=\"container text-center mt-15\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12\">\r\n            <h4>\r\n              Hey there, <b className=\"name-lable\">{user.name.split(\" \")[0]}</b>\r\n              <p className=\"mt-4\">\r\n                You are logged into a full-stack{\" \"}\r\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n              </p>\r\n            </h4>\r\n            <button\r\n              onClick={this.onLogout}\r\n              className=\"btn btn-large btn-light hoverable font-weight-bold\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./util/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authenticatedActions\";\r\n\r\nimport './App.css';\r\n\r\nimport Navbar from \"./components/component-layout/Navbar\";\r\nimport Landing from \"./components/component-layout/Landing\";\r\nimport Register from \"./components/component-layout/Register\";\r\nimport Login from \"./components/component-layout/Login\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/component-layout/Dashboard\";\r\n\r\nif (localStorage.jwtToken) {\r\n\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  const currentTime = Date.now() / 1000; \r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n \r\nfunction App() {\r\n return (\r\n   <Provider store ={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar/>\r\n          <Route path=\"/\" component = {Landing} exact />\r\n          <Route path=\"/register\" component={Register} exact/>\r\n          <Route path=\"/login\" component={Login} exact/>\r\n          <Switch>\r\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          </Switch>   \r\n        </div>\r\n      </Router>\r\n   </Provider>\r\n );\r\n}\r\n \r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}